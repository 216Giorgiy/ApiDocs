### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  id: WebAppLogConfigurationReader
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  children:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Current
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Dispose
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.OnConfigurationChanged
  langs:
  - csharp
  - vb
  name: WebAppLogConfigurationReader
  nameWithType: WebAppLogConfigurationReader
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: WebAppLogConfigurationReader
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nRepresents the default implementation of the <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader\"></see>.\n"
  example: []
  syntax:
    content: 'public class WebAppLogConfigurationReader : IWebAppLogConfigurationReader, IDisposable'
    content.vb: >-
      Public Class WebAppLogConfigurationReader
          Implements IWebAppLogConfigurationReader, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.OnConfigurationChanged
  commentId: E:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.OnConfigurationChanged
  id: OnConfigurationChanged
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: OnConfigurationChanged
  nameWithType: WebAppLogConfigurationReader.OnConfigurationChanged
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.OnConfigurationChanged
  type: Event
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: OnConfigurationChanged
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  example: []
  syntax:
    content: public event EventHandler<WebAppLogConfiguration> OnConfigurationChanged
    content.vb: Public Event OnConfigurationChanged As EventHandler(Of WebAppLogConfiguration)
    return:
      type: System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
  implements:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext)
  id: '#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext)'
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: WebAppLogConfigurationReader(IWebAppContext)
  nameWithType: WebAppLogConfigurationReader.WebAppLogConfigurationReader(IWebAppContext)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.WebAppLogConfigurationReader(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: .ctor
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nCreates a new instance of the <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader\"></see> class.\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationReader(IWebAppContext context)
    content.vb: Public Sub New(context As IWebAppContext)
    parameters:
    - id: context
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext
      description: The context in which the reader runs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Current
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Current
  id: Current
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: WebAppLogConfigurationReader.Current
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Current
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
    startLine: 60
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  example: []
  syntax:
    content: public WebAppLogConfiguration Current { get; }
    content.vb: Public ReadOnly Property Current As WebAppLogConfiguration
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  implements:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Dispose
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: WebAppLogConfigurationReader.Dispose()
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationReader.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Dispose
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationReader.cs
    startLine: 71
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nDisposes the object instance.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  commentId: N:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  nameWithType: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: IWebAppLogConfigurationReader
  nameWithType: IWebAppLogConfigurationReader
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  commentId: E:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  isExternal: false
  name: OnConfigurationChanged
  nameWithType: IWebAppLogConfigurationReader.OnConfigurationChanged
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
- uid: System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
  commentId: T:System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<WebAppLogConfiguration>
  nameWithType: EventHandler<WebAppLogConfiguration>
  fullName: System.EventHandler<Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration>
  nameWithType.vb: EventHandler(Of WebAppLogConfiguration)
  fullname.vb: System.EventHandler(Of Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration)
  name.vb: EventHandler(Of WebAppLogConfiguration)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: IWebAppContext
  nameWithType: IWebAppContext
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppContext
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  isExternal: false
  name: Current
  nameWithType: IWebAppLogConfigurationReader.Current
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: WebAppLogConfiguration
  nameWithType: WebAppLogConfiguration
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
