### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  id: MvcJsonMvcCoreBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})
  - Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})
  langs:
  - csharp
  - vb
  name: MvcJsonMvcCoreBuilderExtensions
  nameWithType: MvcJsonMvcCoreBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: MvcJsonMvcCoreBuilderExtensions
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static class MvcJsonMvcCoreBuilderExtensions
    content.vb: Public Module MvcJsonMvcCoreBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddJsonFormatters(IMvcCoreBuilder)
  nameWithType: MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: AddJsonFormatters
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddJsonFormatters(this IMvcCoreBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsonFormatters(builder As IMvcCoreBuilder) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})
  id: AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddJsonFormatters(IMvcCoreBuilder, Action<JsonSerializerSettings>)
  nameWithType: MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(IMvcCoreBuilder, Action<JsonSerializerSettings>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Newtonsoft.Json.JsonSerializerSettings>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: AddJsonFormatters
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddJsonFormatters(this IMvcCoreBuilder builder, Action<JsonSerializerSettings> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsonFormatters(builder As IMvcCoreBuilder, setupAction As Action(Of JsonSerializerSettings)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    - id: setupAction
      type: System.Action{Newtonsoft.Json.JsonSerializerSettings}
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  nameWithType.vb: MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(IMvcCoreBuilder, Action(Of JsonSerializerSettings))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonFormatters(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Newtonsoft.Json.JsonSerializerSettings))
  name.vb: AddJsonFormatters(IMvcCoreBuilder, Action(Of JsonSerializerSettings))
- uid: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})
  id: AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddJsonOptions(IMvcCoreBuilder, Action<MvcJsonOptions>)
  nameWithType: MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(IMvcCoreBuilder, Action<MvcJsonOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Mvc.MvcJsonOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: AddJsonOptions
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/DependencyInjection/MvcJsonMvcCoreBuilderExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds configuration of <see cref=\"T:Microsoft.AspNetCore.Mvc.MvcJsonOptions\"></see> for the application.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder AddJsonOptions(this IMvcCoreBuilder builder, Action<MvcJsonOptions> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJsonOptions(builder As IMvcCoreBuilder, setupAction As Action(Of MvcJsonOptions)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"></see>.
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
      description: The <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"></see> which need to be configured.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"></see>.
  nameWithType.vb: MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(IMvcCoreBuilder, Action(Of MvcJsonOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Mvc.MvcJsonOptions))
  name.vb: AddJsonOptions(IMvcCoreBuilder, Action(Of MvcJsonOptions))
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IMvcCoreBuilder
  nameWithType: IMvcCoreBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
- uid: System.Action{Newtonsoft.Json.JsonSerializerSettings}
  commentId: T:System.Action{Newtonsoft.Json.JsonSerializerSettings}
  parent: System
  definition: System.Action`1
  name: Action<JsonSerializerSettings>
  nameWithType: Action<JsonSerializerSettings>
  fullName: System.Action<Newtonsoft.Json.JsonSerializerSettings>
  nameWithType.vb: Action(Of JsonSerializerSettings)
  fullname.vb: System.Action(Of Newtonsoft.Json.JsonSerializerSettings)
  name.vb: Action(Of JsonSerializerSettings)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
  parent: System
  definition: System.Action`1
  name: Action<MvcJsonOptions>
  nameWithType: Action<MvcJsonOptions>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.MvcJsonOptions>
  nameWithType.vb: Action(Of MvcJsonOptions)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Mvc.MvcJsonOptions)
  name.vb: Action(Of MvcJsonOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions
    name: MvcJsonOptions
    nameWithType: MvcJsonOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions
    name: MvcJsonOptions
    nameWithType: MvcJsonOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  - name: )
    nameWithType: )
    fullName: )
