### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  id: DisplayMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Description
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Order
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Placeholder
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint
  langs:
  - csharp
  - vb
  name: DisplayMetadata
  nameWithType: DisplayMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: DisplayMetadata
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nDisplay metadata details for a <see cref=\"T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\"></see>.\n"
  example: []
  syntax:
    content: public class DisplayMetadata
    content.vb: Public Class DisplayMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues
  id: AdditionalValues
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: AdditionalValues
  nameWithType: DisplayMetadata.AdditionalValues
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: AdditionalValues
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets a set of additional values. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.AdditionalValues\"></see>\n"
  example: []
  syntax:
    content: public IDictionary<object, object> AdditionalValues { get; }
    content.vb: Public ReadOnly Property AdditionalValues As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: ConvertEmptyStringToNull
  nameWithType: DisplayMetadata.ConvertEmptyStringToNull
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ConvertEmptyStringToNull
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating whether or not to convert an empty string value or one containing only\nwhitespace characters to <code>null</code> when representing a model as text. See\n<see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ConvertEmptyStringToNull\"></see>\n"
  example: []
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    content.vb: Public Property ConvertEmptyStringToNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName
  id: DataTypeName
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: DataTypeName
  nameWithType: DisplayMetadata.DataTypeName
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: DataTypeName
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets the name of the data type.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DataTypeName\"></see>\n"
  example: []
  syntax:
    content: public string DataTypeName { get; set; }
    content.vb: Public Property DataTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Description
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Description
  id: Description
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: DisplayMetadata.Description
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Description
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Description
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a delegate which is used to get a value for the\nmodel description. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Description\"></see>.\n"
  example: []
  syntax:
    content: public Func<string> Description { get; set; }
    content.vb: Public Property Description As Func(Of String)
    parameters: []
    return:
      type: System.Func{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString
  id: DisplayFormatString
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: DisplayFormatString
  nameWithType: DisplayMetadata.DisplayFormatString
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: DisplayFormatString
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a display format string for the model.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayFormatString\"></see>\n"
  example: []
  syntax:
    content: public string DisplayFormatString { get; set; }
    content.vb: Public Property DisplayFormatString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName
  id: DisplayName
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: DisplayMetadata.DisplayName
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: DisplayName
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a delegate delegate which is used to get a value for the\ndisplay name of the model. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayName\"></see>.\n"
  example: []
  syntax:
    content: public Func<string> DisplayName { get; set; }
    content.vb: Public Property DisplayName As Func(Of String)
    parameters: []
    return:
      type: System.Func{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString
  id: EditFormatString
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: EditFormatString
  nameWithType: DisplayMetadata.EditFormatString
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: EditFormatString
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets an edit format string for the model.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EditFormatString\"></see>\n"
  remarks: "\n<see cref=\"T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider\"></see> instances that set this property to a non-<code>null</code>, non-empty,\nnon-default value should also set <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat\"></see> to <code>true</code>.\n"
  example: []
  syntax:
    content: public string EditFormatString { get; set; }
    content.vb: Public Property EditFormatString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues
  id: EnumGroupedDisplayNamesAndValues
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: EnumGroupedDisplayNamesAndValues
  nameWithType: DisplayMetadata.EnumGroupedDisplayNamesAndValues
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: EnumGroupedDisplayNamesAndValues
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets the ordered and grouped display names and values of all <see cref=\"T:System.Enum\"></see> values in\n<see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType\"></see>. See\n<see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumGroupedDisplayNamesAndValues\"></see>.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<EnumGroupAndName, string>> EnumGroupedDisplayNamesAndValues { get; set; }
    content.vb: Public Property EnumGroupedDisplayNamesAndValues As IEnumerable(Of KeyValuePair(Of EnumGroupAndName, String))
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName,System.String}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues
  id: EnumNamesAndValues
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: EnumNamesAndValues
  nameWithType: DisplayMetadata.EnumNamesAndValues
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: EnumNamesAndValues
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets the names and values of all <see cref=\"T:System.Enum\"></see> values in\n<see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType\"></see>. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumNamesAndValues\"></see>.\n"
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, string> EnumNamesAndValues { get; set; }
    content.vb: Public Property EnumNamesAndValues As IReadOnlyDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat
  id: HasNonDefaultEditFormat
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: HasNonDefaultEditFormat
  nameWithType: DisplayMetadata.HasNonDefaultEditFormat
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: HasNonDefaultEditFormat
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating whether or not the model has a non-default edit format.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasNonDefaultEditFormat\"></see>\n"
  example: []
  syntax:
    content: public bool HasNonDefaultEditFormat { get; set; }
    content.vb: Public Property HasNonDefaultEditFormat As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml
  id: HideSurroundingHtml
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: HideSurroundingHtml
  nameWithType: DisplayMetadata.HideSurroundingHtml
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: HideSurroundingHtml
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating if the surrounding HTML should be hidden.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HideSurroundingHtml\"></see>\n"
  example: []
  syntax:
    content: public bool HideSurroundingHtml { get; set; }
    content.vb: Public Property HideSurroundingHtml As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode
  id: HtmlEncode
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: HtmlEncode
  nameWithType: DisplayMetadata.HtmlEncode
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: HtmlEncode
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating if the model value should be HTML encoded.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HtmlEncode\"></see>\n"
  example: []
  syntax:
    content: public bool HtmlEncode { get; set; }
    content.vb: Public Property HtmlEncode As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum
  id: IsEnum
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: IsEnum
  nameWithType: DisplayMetadata.IsEnum
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: IsEnum
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets a value indicating whether <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType\"></see> is for an\n<see cref=\"T:System.Enum\"></see>. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsEnum\"></see>.\n"
  example: []
  syntax:
    content: public bool IsEnum { get; set; }
    content.vb: Public Property IsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum
  id: IsFlagsEnum
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: IsFlagsEnum
  nameWithType: DisplayMetadata.IsFlagsEnum
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: IsFlagsEnum
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets a value indicating whether <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType\"></see> is for an\n<see cref=\"T:System.Enum\"></see> with an associated <see cref=\"T:System.FlagsAttribute\"></see>. See\n<see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsFlagsEnum\"></see>.\n"
  example: []
  syntax:
    content: public bool IsFlagsEnum { get; set; }
    content.vb: Public Property IsFlagsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText
  id: NullDisplayText
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: NullDisplayText
  nameWithType: DisplayMetadata.NullDisplayText
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: NullDisplayText
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets the text to display when the model value is null.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText\"></see>\n"
  example: []
  syntax:
    content: public string NullDisplayText { get; set; }
    content.vb: Public Property NullDisplayText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Order
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: DisplayMetadata.Order
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Order
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 116
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets the order.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Order\"></see>\n"
  example: []
  syntax:
    content: public int Order { get; set; }
    content.vb: Public Property Order As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Placeholder
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Placeholder
  id: Placeholder
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: Placeholder
  nameWithType: DisplayMetadata.Placeholder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Placeholder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Placeholder
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 122
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a delegate which is used to get a value for the\nmodel's placeholder text. See <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Placeholder\"></see>.\n"
  example: []
  syntax:
    content: public Func<string> Placeholder { get; set; }
    content.vb: Public Property Placeholder As Func(Of String)
    parameters: []
    return:
      type: System.Func{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay
  id: ShowForDisplay
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: ShowForDisplay
  nameWithType: DisplayMetadata.ShowForDisplay
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ShowForDisplay
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating whether or not to include in the model value in display.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForDisplay\"></see>\n"
  example: []
  syntax:
    content: public bool ShowForDisplay { get; set; }
    content.vb: Public Property ShowForDisplay As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit
  id: ShowForEdit
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: ShowForEdit
  nameWithType: DisplayMetadata.ShowForEdit
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ShowForEdit
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a value indicating whether or not to include in the model value in an editor.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForEdit\"></see>\n"
  example: []
  syntax:
    content: public bool ShowForEdit { get; set; }
    content.vb: Public Property ShowForEdit As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty
  id: SimpleDisplayProperty
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: SimpleDisplayProperty
  nameWithType: DisplayMetadata.SimpleDisplayProperty
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: SimpleDisplayProperty
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a the property name of a model property to use for display.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.SimpleDisplayProperty\"></see>\n"
  example: []
  syntax:
    content: public string SimpleDisplayProperty { get; set; }
    content.vb: Public Property SimpleDisplayProperty As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint
  id: TemplateHint
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata
  langs:
  - csharp
  - vb
  name: TemplateHint
  nameWithType: DisplayMetadata.TemplateHint
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: TemplateHint
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/DisplayMetadata.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets or sets a hint for location of a display or editor template.\nSee <see cref=\"P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.TemplateHint\"></see>\n"
  example: []
  syntax:
    content: public string TemplateHint { get; set; }
    content.vb: Public Property TemplateHint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<EnumGroupAndName, String>>
  nameWithType: IEnumerable<KeyValuePair<EnumGroupAndName, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of EnumGroupAndName, String))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of EnumGroupAndName, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName
    name: EnumGroupAndName
    nameWithType: EnumGroupAndName
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName
    name: EnumGroupAndName
    nameWithType: EnumGroupAndName
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
