### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  id: WebAppLogConfigurationBuilder
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  children:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.Build
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)
  langs:
  - csharp
  - vb
  name: WebAppLogConfigurationBuilder
  nameWithType: WebAppLogConfigurationBuilder
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: WebAppLogConfigurationBuilder
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nUsed to create instances of <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration\"></see>\n"
  example: []
  syntax:
    content: public class WebAppLogConfigurationBuilder
    content.vb: Public Class WebAppLogConfigurationBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)
  id: SetIsRunningInAzureWebApps(System.Boolean)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetIsRunningInAzureWebApps(Boolean)
  nameWithType: WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(Boolean)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetIsRunningInAzureWebApps(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetIsRunningInAzureWebApps
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets a value indicating whether or not we're in an Azure context\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetIsRunningInAzureWebApps(bool isRunningInAzureWebApps)
    content.vb: Public Function SetIsRunningInAzureWebApps(isRunningInAzureWebApps As Boolean) As WebAppLogConfigurationBuilder
    parameters:
    - id: isRunningInAzureWebApps
      type: System.Boolean
      description: True if running in Azure, false otherwise
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)
  id: SetFileLoggingEnabled(System.Boolean)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetFileLoggingEnabled(Boolean)
  nameWithType: WebAppLogConfigurationBuilder.SetFileLoggingEnabled(Boolean)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingEnabled(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetFileLoggingEnabled
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 36
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets a value indicating whether or not file logging is enabled\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetFileLoggingEnabled(bool fileLoggingEnabled)
    content.vb: Public Function SetFileLoggingEnabled(fileLoggingEnabled As Boolean) As WebAppLogConfigurationBuilder
    parameters:
    - id: fileLoggingEnabled
      type: System.Boolean
      description: True if file logging is enabled, false otherwise
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  id: SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetFileLoggingLevel(LogLevel)
  nameWithType: WebAppLogConfigurationBuilder.SetFileLoggingLevel(LogLevel)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetFileLoggingLevel
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 47
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets logging level for the file logger\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetFileLoggingLevel(LogLevel logLevel)
    content.vb: Public Function SetFileLoggingLevel(logLevel As LogLevel) As WebAppLogConfigurationBuilder
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: File logging level
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)
  id: SetFileLoggingFolder(System.String)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetFileLoggingFolder(String)
  nameWithType: WebAppLogConfigurationBuilder.SetFileLoggingFolder(String)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetFileLoggingFolder(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetFileLoggingFolder
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 58
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets the folder in which file logs end up\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetFileLoggingFolder(string folder)
    content.vb: Public Function SetFileLoggingFolder(folder As String) As WebAppLogConfigurationBuilder
    parameters:
    - id: folder
      type: System.String
      description: File logging folder
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)
  id: SetBlobLoggingEnabled(System.Boolean)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetBlobLoggingEnabled(Boolean)
  nameWithType: WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(Boolean)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingEnabled(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetBlobLoggingEnabled
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 69
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets a value indicating whether or not blob logging is enabled\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetBlobLoggingEnabled(bool blobLoggingEnabled)
    content.vb: Public Function SetBlobLoggingEnabled(blobLoggingEnabled As Boolean) As WebAppLogConfigurationBuilder
    parameters:
    - id: blobLoggingEnabled
      type: System.Boolean
      description: True if file logging is enabled, false otherwise
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  id: SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetBlobLoggingLevel(LogLevel)
  nameWithType: WebAppLogConfigurationBuilder.SetBlobLoggingLevel(LogLevel)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingLevel(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetBlobLoggingLevel
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 80
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets logging level for the blob logger\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetBlobLoggingLevel(LogLevel logLevel)
    content.vb: Public Function SetBlobLoggingLevel(logLevel As LogLevel) As WebAppLogConfigurationBuilder
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: Blob logging level
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)
  id: SetBlobLoggingUrl(System.String)
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: SetBlobLoggingUrl(String)
  nameWithType: WebAppLogConfigurationBuilder.SetBlobLoggingUrl(String)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.SetBlobLoggingUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: SetBlobLoggingUrl
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 91
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nSets blob logging url\n"
  example: []
  syntax:
    content: public WebAppLogConfigurationBuilder SetBlobLoggingUrl(string blobUrl)
    content.vb: Public Function SetBlobLoggingUrl(blobUrl As String) As WebAppLogConfigurationBuilder
    parameters:
    - id: blobUrl
      type: System.String
      description: The container in which blobs are placed
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
      description: The builder instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.Build
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.Build
  id: Build
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: WebAppLogConfigurationBuilder.Build()
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Build
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebAppLogConfigurationBuilder.cs
    startLine: 101
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nBuilds the <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration\"></see> instance\n"
  example: []
  syntax:
    content: public WebAppLogConfiguration Build()
    content.vb: Public Function Build As WebAppLogConfiguration
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
      description: The configuration object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  commentId: N:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  nameWithType: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: WebAppLogConfigurationBuilder
  nameWithType: WebAppLogConfigurationBuilder
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfigurationBuilder
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: WebAppLogConfiguration
  nameWithType: WebAppLogConfiguration
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
