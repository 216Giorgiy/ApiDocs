### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  id: CodeGeneratorContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.#ctor(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName
  langs:
  - csharp
  - vb
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: CodeGeneratorContext
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nContext object with information used to generate a Razor page.\n"
  example: []
  syntax:
    content: 'public class CodeGeneratorContext : ChunkGeneratorContext'
    content.vb: >-
      Public Class CodeGeneratorContext
          Inherits ChunkGeneratorContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.RootNamespace
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ClassName
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.Host
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ChunkTreeBuilder
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.#ctor(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.#ctor(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.ErrorSink)
  id: '#ctor(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.ErrorSink)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  langs:
  - csharp
  - vb
  name: CodeGeneratorContext(ChunkGeneratorContext, ErrorSink)
  nameWithType: CodeGeneratorContext.CodeGeneratorContext(ChunkGeneratorContext, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.CodeGeneratorContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nInstantiates a new instance of the <see cref=\"T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext\"></see> object.\n"
  example: []
  syntax:
    content: public CodeGeneratorContext(ChunkGeneratorContext generatorContext, ErrorSink errorSink)
    content.vb: Public Sub New(generatorContext As ChunkGeneratorContext, errorSink As ErrorSink)
    parameters:
    - id: generatorContext
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
      description: A <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext"></see> to copy information from.
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
      description: "\nThe <see cref=\"P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink\"></see> used to collect <see cref=\"T:Microsoft.AspNetCore.Razor.RazorError\"></see>s encountered\nwhen parsing the current Razor document.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode
  id: ExpressionRenderingMode
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  langs:
  - csharp
  - vb
  name: ExpressionRenderingMode
  nameWithType: CodeGeneratorContext.ExpressionRenderingMode
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: ExpressionRenderingMode
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe current C# rendering mode.\n"
  remarks: "\n<see cref=\"F:Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode.WriteToOutput\"></see> forces C# generation to write\n<see cref=\"T:Microsoft.AspNetCore.Razor.Chunks.Chunk\"></see>s to the output page, i.e. WriteLiteral(\"Hello World\").\n<see cref=\"F:Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode.InjectCode\"></see> writes <see cref=\"T:Microsoft.AspNetCore.Razor.Chunks.Chunk\"></see> values in their\nrawest form, i.g. \"Hello World\".\n"
  example: []
  syntax:
    content: public ExpressionRenderingMode ExpressionRenderingMode { get; set; }
    content.vb: Public Property ExpressionRenderingMode As ExpressionRenderingMode
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName
  id: TargetWriterName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  langs:
  - csharp
  - vb
  name: TargetWriterName
  nameWithType: CodeGeneratorContext.TargetWriterName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: TargetWriterName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe C# writer to write <see cref=\"T:Microsoft.AspNetCore.Razor.Chunks.Chunk\"></see> information to.\n"
  remarks: "\nIf <see cref=\"P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName\"></see> is <code>null</code> values will be written using a default write method\ni.e. WriteLiteral(\"Hello World\").\nIf <see cref=\"P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName\"></see> is not <code>null</code> values will be written to the given\n<see cref=\"P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName\"></see>, i.e. WriteLiteralTo(myWriter, \"Hello World\").\n"
  example: []
  syntax:
    content: public string TargetWriterName { get; set; }
    content.vb: Public Property TargetWriterName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum
  id: Checksum
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  langs:
  - csharp
  - vb
  name: Checksum
  nameWithType: CodeGeneratorContext.Checksum
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: Checksum
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nGets or sets the <code>SHA1</code> based checksum for the file whose location is defined by\n<see cref=\"P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile\"></see>.\n"
  example: []
  syntax:
    content: public string Checksum { get; set; }
    content.vb: Public Property Checksum As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink
  id: ErrorSink
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  langs:
  - csharp
  - vb
  name: ErrorSink
  nameWithType: CodeGeneratorContext.ErrorSink
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
      branch: dev
      repo: https://github.com/aspnet/razor
    id: ErrorSink
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CodeGeneratorContext.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nUsed to aggregate <see cref=\"T:Microsoft.AspNetCore.Razor.RazorError\"></see>s.\n"
  example: []
  syntax:
    content: public ErrorSink ErrorSink { get; }
    content.vb: Public ReadOnly Property ErrorSink As ErrorSink
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.ErrorSink
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ChunkGeneratorContext
  nameWithType: ChunkGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  isExternal: false
  name: SourceFile
  nameWithType: ChunkGeneratorContext.SourceFile
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.RootNamespace
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.RootNamespace
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  isExternal: false
  name: RootNamespace
  nameWithType: ChunkGeneratorContext.RootNamespace
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.RootNamespace
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ClassName
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ClassName
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  isExternal: false
  name: ClassName
  nameWithType: ChunkGeneratorContext.ClassName
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ClassName
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.Host
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.Host
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  isExternal: false
  name: Host
  nameWithType: ChunkGeneratorContext.Host
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.Host
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ChunkTreeBuilder
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ChunkTreeBuilder
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  isExternal: false
  name: ChunkTreeBuilder
  nameWithType: ChunkGeneratorContext.ChunkTreeBuilder
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.ChunkTreeBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: ExpressionRenderingMode
  nameWithType: ExpressionRenderingMode
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
