### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  commentId: T:Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  id: RedisDataProtectionBuilderExtensions
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer)
  - Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer,StackExchange.Redis.RedisKey)
  - Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{StackExchange.Redis.IDatabase},StackExchange.Redis.RedisKey)
  langs:
  - csharp
  - vb
  name: RedisDataProtectionBuilderExtensions
  nameWithType: RedisDataProtectionBuilderExtensions
  fullName: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: RedisDataProtectionBuilderExtensions
    path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Redis
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nContains Redis-specific extension methods for modifying a <see cref=\"T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder\"></see>.\n"
  example: []
  syntax:
    content: public static class RedisDataProtectionBuilderExtensions
    content.vb: Public Module RedisDataProtectionBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{StackExchange.Redis.IDatabase},StackExchange.Redis.RedisKey)
  commentId: M:Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{StackExchange.Redis.IDatabase},StackExchange.Redis.RedisKey)
  id: PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{StackExchange.Redis.IDatabase},StackExchange.Redis.RedisKey)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToRedis(IDataProtectionBuilder, Func<IDatabase>, RedisKey)
  nameWithType: RedisDataProtectionBuilderExtensions.PersistKeysToRedis(IDataProtectionBuilder, Func<IDatabase>, RedisKey)
  fullName: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Func<StackExchange.Redis.IDatabase>, StackExchange.Redis.RedisKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToRedis
    path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Redis
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to persist keys to specified key in Redis database\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToRedis(this IDataProtectionBuilder builder, Func<IDatabase> databaseFactory, RedisKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToRedis(builder As IDataProtectionBuilder, databaseFactory As Func(Of IDatabase), key As RedisKey) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: databaseFactory
      type: System.Func{StackExchange.Redis.IDatabase}
      description: The delegate used to create <see cref="T:StackExchange.Redis.IDatabase"></see> instances.
    - id: key
      type: StackExchange.Redis.RedisKey
      description: The <see cref="T:StackExchange.Redis.RedisKey"></see> used to store key list.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"></see> after this operation has completed.
  nameWithType.vb: RedisDataProtectionBuilderExtensions.PersistKeysToRedis(IDataProtectionBuilder, Func(Of IDatabase), RedisKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Func(Of StackExchange.Redis.IDatabase), StackExchange.Redis.RedisKey)
  name.vb: PersistKeysToRedis(IDataProtectionBuilder, Func(Of IDatabase), RedisKey)
- uid: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer)
  commentId: M:Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer)
  id: PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToRedis(IDataProtectionBuilder, IConnectionMultiplexer)
  nameWithType: RedisDataProtectionBuilderExtensions.PersistKeysToRedis(IDataProtectionBuilder, IConnectionMultiplexer)
  fullName: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, StackExchange.Redis.IConnectionMultiplexer)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToRedis
    path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Redis
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to persist keys to the default key ('DataProtection-Keys') in Redis database\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToRedis(this IDataProtectionBuilder builder, IConnectionMultiplexer connectionMultiplexer)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToRedis(builder As IDataProtectionBuilder, connectionMultiplexer As IConnectionMultiplexer) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: connectionMultiplexer
      type: StackExchange.Redis.IConnectionMultiplexer
      description: The <see cref="T:StackExchange.Redis.IConnectionMultiplexer"></see> for database access.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"></see> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer,StackExchange.Redis.RedisKey)
  commentId: M:Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer,StackExchange.Redis.RedisKey)
  id: PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,StackExchange.Redis.IConnectionMultiplexer,StackExchange.Redis.RedisKey)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToRedis(IDataProtectionBuilder, IConnectionMultiplexer, RedisKey)
  nameWithType: RedisDataProtectionBuilderExtensions.PersistKeysToRedis(IDataProtectionBuilder, IConnectionMultiplexer, RedisKey)
  fullName: Microsoft.AspNetCore.DataProtection.RedisDataProtectionBuilderExtensions.PersistKeysToRedis(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, StackExchange.Redis.IConnectionMultiplexer, StackExchange.Redis.RedisKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToRedis
    path: src/Microsoft.AspNetCore.DataProtection.Redis/RedisDataProtectionBuilderExtensions.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Redis
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to persist keys to the specified key in Redis database\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToRedis(this IDataProtectionBuilder builder, IConnectionMultiplexer connectionMultiplexer, RedisKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToRedis(builder As IDataProtectionBuilder, connectionMultiplexer As IConnectionMultiplexer, key As RedisKey) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: connectionMultiplexer
      type: StackExchange.Redis.IConnectionMultiplexer
      description: The <see cref="T:StackExchange.Redis.IConnectionMultiplexer"></see> for database access.
    - id: key
      type: StackExchange.Redis.RedisKey
      description: The <see cref="T:StackExchange.Redis.RedisKey"></see> used to store key list.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"></see> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtectionBuilder
  nameWithType: IDataProtectionBuilder
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
- uid: System.Func{StackExchange.Redis.IDatabase}
  commentId: T:System.Func{StackExchange.Redis.IDatabase}
  parent: System
  definition: System.Func`1
  name: Func<IDatabase>
  nameWithType: Func<IDatabase>
  fullName: System.Func<StackExchange.Redis.IDatabase>
  nameWithType.vb: Func(Of IDatabase)
  fullname.vb: System.Func(Of StackExchange.Redis.IDatabase)
  name.vb: Func(Of IDatabase)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StackExchange.Redis.IDatabase
    name: IDatabase
    nameWithType: IDatabase
    fullName: StackExchange.Redis.IDatabase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StackExchange.Redis.IDatabase
    name: IDatabase
    nameWithType: IDatabase
    fullName: StackExchange.Redis.IDatabase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: StackExchange.Redis.RedisKey
  commentId: T:StackExchange.Redis.RedisKey
  parent: StackExchange.Redis
  isExternal: true
  name: RedisKey
  nameWithType: RedisKey
  fullName: StackExchange.Redis.RedisKey
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: StackExchange.Redis
  commentId: N:StackExchange.Redis
  isExternal: false
  name: StackExchange.Redis
  nameWithType: StackExchange.Redis
  fullName: StackExchange.Redis
- uid: StackExchange.Redis.IConnectionMultiplexer
  commentId: T:StackExchange.Redis.IConnectionMultiplexer
  parent: StackExchange.Redis
  isExternal: true
  name: IConnectionMultiplexer
  nameWithType: IConnectionMultiplexer
  fullName: StackExchange.Redis.IConnectionMultiplexer
