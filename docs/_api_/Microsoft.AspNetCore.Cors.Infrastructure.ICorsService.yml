### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  id: ICorsService
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  langs:
  - csharp
  - vb
  name: ICorsService
  nameWithType: ICorsService
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
      branch: dev
      repo: https://github.com/aspnet/cors
    id: ICorsService
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nA type which can evaluate a policy for a particular <see cref=\"T:Microsoft.AspNetCore.Http.HttpContext\"></see>.\n"
  example: []
  syntax:
    content: public interface ICorsService
    content.vb: Public Interface ICorsService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  id: EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  langs:
  - csharp
  - vb
  name: EvaluatePolicy(HttpContext, CorsPolicy)
  nameWithType: ICorsService.EvaluatePolicy(HttpContext, CorsPolicy)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
      branch: dev
      repo: https://github.com/aspnet/cors
    id: EvaluatePolicy
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nEvaluates the given <em>policy</em> using the passed in <em>context</em>.\n"
  example: []
  syntax:
    content: CorsResult EvaluatePolicy(HttpContext context, CorsPolicy policy)
    content.vb: Function EvaluatePolicy(context As HttpContext, policy As CorsPolicy) As CorsResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"></see> associated with the call.
    - id: policy
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
      description: The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy"></see> which needs to be evaluated.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
      description: >-
        A <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult"></see> which contains the result of policy evaluation and can be

        used by the caller to set appropriate response headers.
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  id: ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  langs:
  - csharp
  - vb
  name: ApplyResult(CorsResult, HttpResponse)
  nameWithType: ICorsService.ApplyResult(CorsResult, HttpResponse)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult, Microsoft.AspNetCore.Http.HttpResponse)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
      branch: dev
      repo: https://github.com/aspnet/cors
    id: ApplyResult
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsService.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nAdds CORS-specific response headers to the given <em>response</em>.\n"
  example: []
  syntax:
    content: void ApplyResult(CorsResult result, HttpResponse response)
    content.vb: Sub ApplyResult(result As CorsResult, response As HttpResponse)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
      description: The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult"></see> used to read the allowed values.
    - id: response
      type: Microsoft.AspNetCore.Http.HttpResponse
      description: The <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"></see> associated with the current call.
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsPolicy
  nameWithType: CorsPolicy
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsResult
  nameWithType: CorsResult
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
