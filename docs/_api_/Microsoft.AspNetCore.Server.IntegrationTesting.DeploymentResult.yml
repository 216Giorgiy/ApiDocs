### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  commentId: T:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  id: DeploymentResult
  parent: Microsoft.AspNetCore.Server.IntegrationTesting
  children:
  - Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ApplicationBaseUri
  - Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ContentRoot
  - Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.DeploymentParameters
  - Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.HostShutdownToken
  langs:
  - csharp
  - vb
  name: DeploymentResult
  nameWithType: DeploymentResult
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: DeploymentResult
    path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Server.IntegrationTesting
  namespace: Microsoft.AspNetCore.Server.IntegrationTesting
  summary: "\nResult of a deployment.\n"
  example: []
  syntax:
    content: public class DeploymentResult
    content.vb: Public Class DeploymentResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ApplicationBaseUri
  commentId: P:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ApplicationBaseUri
  id: ApplicationBaseUri
  parent: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  langs:
  - csharp
  - vb
  name: ApplicationBaseUri
  nameWithType: DeploymentResult.ApplicationBaseUri
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ApplicationBaseUri
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: ApplicationBaseUri
    path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Server.IntegrationTesting
  namespace: Microsoft.AspNetCore.Server.IntegrationTesting
  summary: "\nBase Uri of the deployment application.\n"
  example: []
  syntax:
    content: public string ApplicationBaseUri { get; set; }
    content.vb: Public Property ApplicationBaseUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ContentRoot
  commentId: P:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ContentRoot
  id: ContentRoot
  parent: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  langs:
  - csharp
  - vb
  name: ContentRoot
  nameWithType: DeploymentResult.ContentRoot
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.ContentRoot
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: ContentRoot
    path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Server.IntegrationTesting
  namespace: Microsoft.AspNetCore.Server.IntegrationTesting
  summary: "\nThe folder where the application is hosted. This path can be different from the\noriginal application source location if published before deployment.\n"
  example: []
  syntax:
    content: public string ContentRoot { get; set; }
    content.vb: Public Property ContentRoot As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.DeploymentParameters
  commentId: P:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.DeploymentParameters
  id: DeploymentParameters
  parent: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  langs:
  - csharp
  - vb
  name: DeploymentParameters
  nameWithType: DeploymentResult.DeploymentParameters
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.DeploymentParameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: DeploymentParameters
    path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Server.IntegrationTesting
  namespace: Microsoft.AspNetCore.Server.IntegrationTesting
  summary: "\nOriginal deployment parameters used for this deployment.\n"
  example: []
  syntax:
    content: public DeploymentParameters DeploymentParameters { get; set; }
    content.vb: Public Property DeploymentParameters As DeploymentParameters
    parameters: []
    return:
      type: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentParameters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.HostShutdownToken
  commentId: P:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.HostShutdownToken
  id: HostShutdownToken
  parent: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult
  langs:
  - csharp
  - vb
  name: HostShutdownToken
  nameWithType: DeploymentResult.HostShutdownToken
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentResult.HostShutdownToken
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: HostShutdownToken
    path: src/Microsoft.AspNetCore.Server.IntegrationTesting/Common/DeploymentResult.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Server.IntegrationTesting
  namespace: Microsoft.AspNetCore.Server.IntegrationTesting
  summary: "\nTriggered when the host process dies or pulled down.\n"
  example: []
  syntax:
    content: public CancellationToken HostShutdownToken { get; set; }
    content.vb: Public Property HostShutdownToken As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.IntegrationTesting
  commentId: N:Microsoft.AspNetCore.Server.IntegrationTesting
  isExternal: false
  name: Microsoft.AspNetCore.Server.IntegrationTesting
  nameWithType: Microsoft.AspNetCore.Server.IntegrationTesting
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentParameters
  commentId: T:Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentParameters
  parent: Microsoft.AspNetCore.Server.IntegrationTesting
  isExternal: false
  name: DeploymentParameters
  nameWithType: DeploymentParameters
  fullName: Microsoft.AspNetCore.Server.IntegrationTesting.DeploymentParameters
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
