### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate
  id: ActionExecutionDelegate
  parent: Microsoft.AspNetCore.Mvc.Filters
  children: []
  langs:
  - csharp
  - vb
  name: ActionExecutionDelegate
  nameWithType: ActionExecutionDelegate
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate
  type: Delegate
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ActionExecutionDelegate.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ActionExecutionDelegate
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ActionExecutionDelegate.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA delegate that asynchronously returns an <see cref=\"T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext\"></see> indicating the action or the next\naction filter has executed.\n"
  example: []
  syntax:
    content: public delegate Task<ActionExecutedContext> ActionExecutionDelegate();
    content.vb: Public Delegate Function ActionExecutionDelegate As Task(Of ActionExecutedContext)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext}
      description: "\nA <see cref=\"T:System.Threading.Tasks.Task\"></see> that on completion returns an <see cref=\"T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext\"></see>.\n"
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionExecutedContext>
  nameWithType: Task<ActionExecutedContext>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext>
  nameWithType.vb: Task(Of ActionExecutedContext)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  name.vb: Task(Of ActionExecutedContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    name: ActionExecutedContext
    nameWithType: ActionExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    name: ActionExecutedContext
    nameWithType: ActionExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
