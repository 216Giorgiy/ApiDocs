### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  commentId: T:Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  id: PathHelper
  parent: Microsoft.Extensions.Configuration.UserSecrets
  children:
  - Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)
  - Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(System.String)
  - Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)
  langs:
  - csharp
  - vb
  name: PathHelper
  nameWithType: PathHelper
  fullName: Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: PathHelper
    path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.UserSecrets
  namespace: Microsoft.Extensions.Configuration.UserSecrets
  syntax:
    content: public class PathHelper
    content.vb: Public Class PathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)
  commentId: M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)
  id: GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)
  parent: Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  langs:
  - csharp
  - vb
  name: GetSecretsPath(IFileProvider)
  nameWithType: PathHelper.GetSecretsPath(IFileProvider)
  fullName: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(Microsoft.Extensions.FileProviders.IFileProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: GetSecretsPath
    path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Configuration.UserSecrets
  namespace: Microsoft.Extensions.Configuration.UserSecrets
  syntax:
    content: public static string GetSecretsPath(IFileProvider provider)
    content.vb: Public Shared Function GetSecretsPath(provider As IFileProvider) As String
    parameters:
    - id: provider
      type: Microsoft.Extensions.FileProviders.IFileProvider
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(System.String)
  commentId: M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(System.String)
  id: GetSecretsPath(System.String)
  parent: Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  langs:
  - csharp
  - vb
  name: GetSecretsPath(String)
  nameWithType: PathHelper.GetSecretsPath(String)
  fullName: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPath(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: GetSecretsPath
    path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
    startLine: 48
  assemblies:
  - Microsoft.Extensions.Configuration.UserSecrets
  namespace: Microsoft.Extensions.Configuration.UserSecrets
  syntax:
    content: public static string GetSecretsPath(string projectPath)
    content.vb: Public Shared Function GetSecretsPath(projectPath As String) As String
    parameters:
    - id: projectPath
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)
  commentId: M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)
  id: GetSecretsPathFromSecretsId(System.String)
  parent: Microsoft.Extensions.Configuration.UserSecrets.PathHelper
  langs:
  - csharp
  - vb
  name: GetSecretsPathFromSecretsId(String)
  nameWithType: PathHelper.GetSecretsPathFromSecretsId(String)
  fullName: Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: GetSecretsPathFromSecretsId
    path: src/Microsoft.Extensions.Configuration.UserSecrets/PathHelper.cs
    startLine: 61
  assemblies:
  - Microsoft.Extensions.Configuration.UserSecrets
  namespace: Microsoft.Extensions.Configuration.UserSecrets
  syntax:
    content: public static string GetSecretsPathFromSecretsId(string userSecretsId)
    content.vb: Public Shared Function GetSecretsPathFromSecretsId(userSecretsId As String) As String
    parameters:
    - id: userSecretsId
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Configuration.UserSecrets
  commentId: N:Microsoft.Extensions.Configuration.UserSecrets
  isExternal: false
  name: Microsoft.Extensions.Configuration.UserSecrets
  nameWithType: Microsoft.Extensions.Configuration.UserSecrets
  fullName: Microsoft.Extensions.Configuration.UserSecrets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
