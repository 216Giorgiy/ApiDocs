### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  commentId: T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  id: ResourceManagerStringLocalizerFactory
  parent: Microsoft.Extensions.Localization
  children:
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions})
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.String,System.String)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.Type)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(System.Reflection.Assembly)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo,System.String,System.String)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String)
  - Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: ResourceManagerStringLocalizerFactory
  nameWithType: ResourceManagerStringLocalizerFactory
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: ResourceManagerStringLocalizerFactory
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nAn <see cref=\"T:Microsoft.Extensions.Localization.IStringLocalizerFactory\"></see> that creates instances of <see cref=\"T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer\"></see>.\n"
  remarks: "\n<see cref=\"T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory\"></see> offers multiple ways to set the relative path of\nresources to be used. They are, in order of precedence:\n<see cref=\"T:Microsoft.Extensions.Localization.ResourceLocationAttribute\"></see> -&gt; <see cref=\"P:Microsoft.Extensions.Localization.LocalizationOptions.ResourcesPath\"></see> -&gt; the project root.\n"
  example: []
  syntax:
    content: 'public class ResourceManagerStringLocalizerFactory : IStringLocalizerFactory'
    content.vb: >-
      Public Class ResourceManagerStringLocalizerFactory
          Implements IStringLocalizerFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Localization.IStringLocalizerFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions})
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions})
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions})'
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: ResourceManagerStringLocalizerFactory(IHostingEnvironment, IOptions<LocalizationOptions>)
  nameWithType: ResourceManagerStringLocalizerFactory.ResourceManagerStringLocalizerFactory(IHostingEnvironment, IOptions<LocalizationOptions>)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.ResourceManagerStringLocalizerFactory(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Options.IOptions<Microsoft.Extensions.Localization.LocalizationOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: .ctor
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 34
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a new <see cref=\"T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer\"></see>.\n"
  example: []
  syntax:
    content: public ResourceManagerStringLocalizerFactory(IHostingEnvironment hostingEnvironment, IOptions<LocalizationOptions> localizationOptions)
    content.vb: Public Sub New(hostingEnvironment As IHostingEnvironment, localizationOptions As IOptions(Of LocalizationOptions))
    parameters:
    - id: hostingEnvironment
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
      description: The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"></see>.
    - id: localizationOptions
      type: Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions}
      description: The <see cref="T:Microsoft.Extensions.Options.IOptions`1"></see>.
  nameWithType.vb: ResourceManagerStringLocalizerFactory.ResourceManagerStringLocalizerFactory(IHostingEnvironment, IOptions(Of LocalizationOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.ResourceManagerStringLocalizerFactory(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Options.IOptions(Of Microsoft.Extensions.Localization.LocalizationOptions))
  name.vb: ResourceManagerStringLocalizerFactory(IHostingEnvironment, IOptions(Of LocalizationOptions))
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)
  id: GetResourcePrefix(System.Reflection.TypeInfo)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: GetResourcePrefix(TypeInfo)
  nameWithType: ResourceManagerStringLocalizerFactory.GetResourcePrefix(TypeInfo)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: GetResourcePrefix
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 62
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the resource prefix used to look up the resource.\n"
  example: []
  syntax:
    content: protected virtual string GetResourcePrefix(TypeInfo typeInfo)
    content.vb: Protected Overridable Function GetResourcePrefix(typeInfo As TypeInfo) As String
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The type of the resource to be looked up.
    return:
      type: System.String
      description: The prefix for resource lookup.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo,System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo,System.String,System.String)
  id: GetResourcePrefix(System.Reflection.TypeInfo,System.String,System.String)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: GetResourcePrefix(TypeInfo, String, String)
  nameWithType: ResourceManagerStringLocalizerFactory.GetResourcePrefix(TypeInfo, String, String)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: GetResourcePrefix
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 83
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the resource prefix used to look up the resource.\n"
  remarks: "\nFor the type \"Sample.Controllers.Home\" if there's a resourceRelativePath return\n\"Sample.Resourcepath.Controllers.Home\" if there isn't one then it would return \"Sample.Controllers.Home\".\n"
  example: []
  syntax:
    content: protected virtual string GetResourcePrefix(TypeInfo typeInfo, string baseNamespace, string resourcesRelativePath)
    content.vb: Protected Overridable Function GetResourcePrefix(typeInfo As TypeInfo, baseNamespace As String, resourcesRelativePath As String) As String
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The type of the resource to be looked up.
    - id: baseNamespace
      type: System.String
      description: The base namespace of the application.
    - id: resourcesRelativePath
      type: System.String
      description: The folder containing all resources.
    return:
      type: System.String
      description: The prefix for resource lookup.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String)
  id: GetResourcePrefix(System.String,System.String)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: GetResourcePrefix(String, String)
  nameWithType: ResourceManagerStringLocalizerFactory.GetResourcePrefix(String, String)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: GetResourcePrefix
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 106
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the resource prefix used to look up the resource.\n"
  example: []
  syntax:
    content: protected virtual string GetResourcePrefix(string baseResourceName, string baseNamespace)
    content.vb: Protected Overridable Function GetResourcePrefix(baseResourceName As String, baseNamespace As String) As String
    parameters:
    - id: baseResourceName
      type: System.String
      description: The name of the resource to be looked up
    - id: baseNamespace
      type: System.String
      description: The base namespace of the application.
    return:
      type: System.String
      description: The prefix for resource lookup.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.Type)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.Type)
  id: Create(System.Type)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: Create(Type)
  nameWithType: ResourceManagerStringLocalizerFactory.Create(Type)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: Create
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 134
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a <see cref=\"T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer\"></see> using the <see cref=\"T:System.Reflection.Assembly\"></see> and\n<see cref=\"P:System.Type.FullName\"></see> of the specified <see cref=\"T:System.Type\"></see>.\n"
  example: []
  syntax:
    content: public IStringLocalizer Create(Type resourceSource)
    content.vb: Public Function Create(resourceSource As Type) As IStringLocalizer
    parameters:
    - id: resourceSource
      type: System.Type
      description: The <see cref="T:System.Type"></see>.
    return:
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"></see>.
  implements:
  - Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: Create(String, String)
  nameWithType: ResourceManagerStringLocalizerFactory.Create(String, String)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.Create(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: Create
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 157
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a <see cref=\"T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer\"></see>.\n"
  example: []
  syntax:
    content: public IStringLocalizer Create(string baseName, string location)
    content.vb: Public Function Create(baseName As String, location As String) As IStringLocalizer
    parameters:
    - id: baseName
      type: System.String
      description: The base name of the resource to load strings from.
    - id: location
      type: System.String
      description: The location to load resources from.
    return:
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"></see>.
  implements:
  - Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)
  id: CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: CreateResourceManagerStringLocalizer(Assembly, String)
  nameWithType: ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(Assembly, String)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: CreateResourceManagerStringLocalizer
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 181
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: Creates a <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"></see> for the given input.
  remarks: This method is virtual for testing purposes only.
  example: []
  syntax:
    content: protected virtual ResourceManagerStringLocalizer CreateResourceManagerStringLocalizer(Assembly assembly, string baseName)
    content.vb: Protected Overridable Function CreateResourceManagerStringLocalizer(assembly As Assembly, baseName As String) As ResourceManagerStringLocalizer
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to create a <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"></see> for.
    - id: baseName
      type: System.String
      description: The base name of the resource to search for.
    return:
      type: Microsoft.Extensions.Localization.ResourceManagerStringLocalizer
      description: A <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"></see> for the given <em>assembly</em> and <em>baseName</em>.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String,System.String,System.String)
  id: GetResourcePrefix(System.String,System.String,System.String)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: GetResourcePrefix(String, String, String)
  nameWithType: ResourceManagerStringLocalizerFactory.GetResourcePrefix(String, String, String)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourcePrefix(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: GetResourcePrefix
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 199
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the resource prefix used to look up the resource.\n"
  example: []
  syntax:
    content: protected virtual string GetResourcePrefix(string location, string baseName, string resourceLocation)
    content.vb: Protected Overridable Function GetResourcePrefix(location As String, baseName As String, resourceLocation As String) As String
    parameters:
    - id: location
      type: System.String
      description: The general location of the resource.
    - id: baseName
      type: System.String
      description: The base name of the resource.
    - id: resourceLocation
      type: System.String
      description: The location of the resource within <em>location</em>.
    return:
      type: System.String
      description: The resource prefix used to look up the resource.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(System.Reflection.Assembly)
  commentId: M:Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(System.Reflection.Assembly)
  id: GetResourceLocationAttribute(System.Reflection.Assembly)
  parent: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory
  langs:
  - csharp
  - vb
  name: GetResourceLocationAttribute(Assembly)
  nameWithType: ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(Assembly)
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.GetResourceLocationAttribute(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/localization
    id: GetResourceLocationAttribute
    path: src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizerFactory.cs
    startLine: 209
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: Gets a <see cref="T:Microsoft.Extensions.Localization.ResourceLocationAttribute"></see> from the provided <see cref="T:System.Reflection.Assembly"></see>.
  remarks: This method is protected and virtual for testing purposes only.
  example: []
  syntax:
    content: protected virtual ResourceLocationAttribute GetResourceLocationAttribute(Assembly assembly)
    content.vb: Protected Overridable Function GetResourceLocationAttribute(assembly As Assembly) As ResourceLocationAttribute
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to get a <see cref="T:Microsoft.Extensions.Localization.ResourceLocationAttribute"></see> from.
    return:
      type: Microsoft.Extensions.Localization.ResourceLocationAttribute
      description: The <see cref="T:Microsoft.Extensions.Localization.ResourceLocationAttribute"></see> associated with the given <see cref="T:System.Reflection.Assembly"></see>.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Localization.IStringLocalizerFactory
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizerFactory
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: IStringLocalizerFactory
  nameWithType: IStringLocalizerFactory
  fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IHostingEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<LocalizationOptions>
  nameWithType: IOptions<LocalizationOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.Extensions.Localization.LocalizationOptions>
  nameWithType.vb: IOptions(Of LocalizationOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.Extensions.Localization.LocalizationOptions)
  name.vb: IOptions(Of LocalizationOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Localization.LocalizationOptions
    name: LocalizationOptions
    nameWithType: LocalizationOptions
    fullName: Microsoft.Extensions.Localization.LocalizationOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Localization.LocalizationOptions
    name: LocalizationOptions
    nameWithType: LocalizationOptions
    fullName: Microsoft.Extensions.Localization.LocalizationOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: false
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
  commentId: M:Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
  parent: Microsoft.Extensions.Localization.IStringLocalizerFactory
  isExternal: true
  name: Create(Type)
  nameWithType: IStringLocalizerFactory.Create(Type)
  fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
    name: Create
    nameWithType: IStringLocalizerFactory.Create
    fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.Type)
    name: Create
    nameWithType: IStringLocalizerFactory.Create
    fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Extensions.Localization.IStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizer
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: IStringLocalizer
  nameWithType: IStringLocalizer
  fullName: Microsoft.Extensions.Localization.IStringLocalizer
- uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)
  parent: Microsoft.Extensions.Localization.IStringLocalizerFactory
  isExternal: true
  name: Create(String, String)
  nameWithType: IStringLocalizerFactory.Create(String, String)
  fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)
    name: Create
    nameWithType: IStringLocalizerFactory.Create
    fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create(System.String,System.String)
    name: Create
    nameWithType: IStringLocalizerFactory.Create
    fullName: Microsoft.Extensions.Localization.IStringLocalizerFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.Extensions.Localization.ResourceManagerStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: ResourceManagerStringLocalizer
  nameWithType: ResourceManagerStringLocalizer
  fullName: Microsoft.Extensions.Localization.ResourceManagerStringLocalizer
- uid: Microsoft.Extensions.Localization.ResourceLocationAttribute
  commentId: T:Microsoft.Extensions.Localization.ResourceLocationAttribute
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: ResourceLocationAttribute
  nameWithType: ResourceLocationAttribute
  fullName: Microsoft.Extensions.Localization.ResourceLocationAttribute
