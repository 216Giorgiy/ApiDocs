### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  id: TemplateMatcher
  parent: Microsoft.AspNetCore.Routing.Template
  children:
  - Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor(Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
  - Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
  - Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch(PathString,RouteValueDictionary)
  langs:
  - csharp
  - vb
  name: TemplateMatcher
  nameWithType: TemplateMatcher
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TemplateMatcher
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public class TemplateMatcher
    content.vb: Public Class TemplateMatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor(Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor(Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary)
  id: '#ctor(Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary)'
  parent: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  langs:
  - csharp
  - vb
  name: TemplateMatcher(RouteTemplate, RouteValueDictionary)
  nameWithType: TemplateMatcher.TemplateMatcher(RouteTemplate, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TemplateMatcher(Microsoft.AspNetCore.Routing.Template.RouteTemplate, RouteValueDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public TemplateMatcher(RouteTemplate template, RouteValueDictionary defaults)
    parameters:
    - id: template
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
    - id: defaults
      type: RouteValueDictionary
    content.vb: Public Sub New(template As RouteTemplate, defaults As RouteValueDictionary)
  overload: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
  id: Defaults
  parent: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  langs:
  - csharp
  - vb
  name: Defaults
  nameWithType: TemplateMatcher.Defaults
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Defaults
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public RouteValueDictionary Defaults { get; }
    parameters: []
    return:
      type: RouteValueDictionary
    content.vb: Public ReadOnly Property Defaults As RouteValueDictionary
  overload: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
  id: Template
  parent: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: TemplateMatcher.Template
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Template
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public RouteTemplate Template { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
    content.vb: Public ReadOnly Property Template As RouteTemplate
  overload: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch(PathString,RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch(PathString,RouteValueDictionary)
  id: TryMatch(PathString,RouteValueDictionary)
  parent: Microsoft.AspNetCore.Routing.Template.TemplateMatcher
  langs:
  - csharp
  - vb
  name: TryMatch(PathString, RouteValueDictionary)
  nameWithType: TemplateMatcher.TryMatch(PathString, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch(PathString, RouteValueDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TryMatch
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Template/TemplateMatcher.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool TryMatch(PathString path, RouteValueDictionary values)
    parameters:
    - id: path
      type: PathString
    - id: values
      type: RouteValueDictionary
    return:
      type: System.Boolean
    content.vb: Public Function TryMatch(path As PathString, values As RouteValueDictionary) As Boolean
  overload: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.#ctor
  isExternal: false
  name: TemplateMatcher
  nameWithType: TemplateMatcher.TemplateMatcher
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TemplateMatcher
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  commentId: T:Microsoft.AspNetCore.Routing.Template.RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: RouteTemplate
  nameWithType: RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate
- uid: RouteValueDictionary
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults*
  commentId: Overload:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
  isExternal: false
  name: Defaults
  nameWithType: TemplateMatcher.Defaults
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Defaults
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template*
  commentId: Overload:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
  isExternal: false
  name: Template
  nameWithType: TemplateMatcher.Template
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.Template
- uid: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch*
  commentId: Overload:Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch
  isExternal: false
  name: TryMatch
  nameWithType: TemplateMatcher.TryMatch
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateMatcher.TryMatch
- uid: PathString
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: PathString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
