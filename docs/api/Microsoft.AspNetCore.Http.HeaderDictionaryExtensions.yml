### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  id: HeaderDictionaryExtensions
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(IHeaderDictionary,System.String,StringValues)
  - Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  - Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary,System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  langs:
  - csharp
  - vb
  name: HeaderDictionaryExtensions
  nameWithType: HeaderDictionaryExtensions
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HeaderDictionaryExtensions
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static class HeaderDictionaryExtensions
    content.vb: Public Module HeaderDictionaryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(IHeaderDictionary,System.String,StringValues)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(IHeaderDictionary,System.String,StringValues)
  id: Append(IHeaderDictionary,System.String,StringValues)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  langs:
  - csharp
  - vb
  name: Append(IHeaderDictionary, String, StringValues)
  nameWithType: HeaderDictionaryExtensions.Append(IHeaderDictionary, String, StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(IHeaderDictionary, System.String, StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Append
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAdd new values. Each item remains a separate array entry.\n"
  example: []
  syntax:
    content: public static void Append(this IHeaderDictionary headers, string key, StringValues value)
    parameters:
    - id: headers
      type: IHeaderDictionary
      description: The <see cref="!:IHeaderDictionary"></see> to use.
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: StringValues
      description: The header value.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Append(headers As IHeaderDictionary, key As String, value As StringValues)
  overload: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  id: AppendCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  langs:
  - csharp
  - vb
  name: AppendCommaSeparatedValues(IHeaderDictionary, String, String[])
  nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AppendCommaSeparatedValues
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nQuotes any values containing comas, and then coma joins all of the values with any existing values.\n"
  example: []
  syntax:
    content: public static void AppendCommaSeparatedValues(this IHeaderDictionary headers, string key, params string[] values)
    parameters:
    - id: headers
      type: IHeaderDictionary
      description: The <see cref="!:IHeaderDictionary"></see> to use.
    - id: key
      type: System.String
      description: The header name.
    - id: values
      type: System.String[]
      description: The header values.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AppendCommaSeparatedValues(headers As IHeaderDictionary, key As String, ParamArray values As String())
  overload: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues*
  nameWithType.vb: HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, System.String, System.String())
  name.vb: AppendCommaSeparatedValues(IHeaderDictionary, String, String())
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary,System.String)
  id: GetCommaSeparatedValues(IHeaderDictionary,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetCommaSeparatedValues(IHeaderDictionary, String)
  nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary, String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetCommaSeparatedValues
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGet the associated values from the collection separated into individual values.\nQuoted values will not be split, and the quotes will be removed.\n"
  example: []
  syntax:
    content: public static string[] GetCommaSeparatedValues(this IHeaderDictionary headers, string key)
    parameters:
    - id: headers
      type: IHeaderDictionary
      description: The <see cref="!:IHeaderDictionary"></see> to use.
    - id: key
      type: System.String
      description: The header name.
    return:
      type: System.String[]
      description: the associated values from the collection separated into individual values, or StringValues.Empty if the key is not present.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCommaSeparatedValues(headers As IHeaderDictionary, key As String) As String()
  overload: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  id: SetCommaSeparatedValues(IHeaderDictionary,System.String,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  langs:
  - csharp
  - vb
  name: SetCommaSeparatedValues(IHeaderDictionary, String, String[])
  nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SetCommaSeparatedValues
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/HeaderDictionaryExtensions.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nQuotes any values containing comas, and then coma joins all of the values.\n"
  example: []
  syntax:
    content: public static void SetCommaSeparatedValues(this IHeaderDictionary headers, string key, params string[] values)
    parameters:
    - id: headers
      type: IHeaderDictionary
      description: The <see cref="!:IHeaderDictionary"></see> to use.
    - id: key
      type: System.String
      description: The header name.
    - id: values
      type: System.String[]
      description: The header values.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetCommaSeparatedValues(headers As IHeaderDictionary, key As String, ParamArray values As String())
  overload: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues*
  nameWithType.vb: HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, System.String, System.String())
  name.vb: SetCommaSeparatedValues(IHeaderDictionary, String, String())
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
  isExternal: false
  name: Append
  nameWithType: HeaderDictionaryExtensions.Append
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
- uid: IHeaderDictionary
  isExternal: true
  name: IHeaderDictionary
  nameWithType: IHeaderDictionary
  fullName: IHeaderDictionary
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StringValues
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: StringValues
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
  isExternal: false
  name: AppendCommaSeparatedValues
  nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
  isExternal: false
  name: GetCommaSeparatedValues
  nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
  isExternal: false
  name: SetCommaSeparatedValues
  nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
shouldSkipMarkup: true
