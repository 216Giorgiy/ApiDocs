### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  id: JsonInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(ILogger,JsonSerializerSettings,ArrayPool{System.Char},ObjectPoolProvider)
  - Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer
  - Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  - Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
  langs:
  - csharp
  - vb
  name: JsonInputFormatter
  nameWithType: JsonInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: JsonInputFormatter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nA <see cref=\"!:TextInputFormatter\"></see> for JSON content.\n"
  example: []
  syntax:
    content: 'public class JsonInputFormatter : TextInputFormatter'
    content.vb: >-
      Public Class JsonInputFormatter
          Inherits TextInputFormatter
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(ILogger,JsonSerializerSettings,ArrayPool{System.Char},ObjectPoolProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(ILogger,JsonSerializerSettings,ArrayPool{System.Char},ObjectPoolProvider)
  id: '#ctor(ILogger,JsonSerializerSettings,ArrayPool{System.Char},ObjectPoolProvider)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  langs:
  - csharp
  - vb
  name: JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool<Char>, ObjectPoolProvider)
  nameWithType: JsonInputFormatter.JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool<Char>, ObjectPoolProvider)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool<System.Char>, ObjectPoolProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JsonInputFormatter(ILogger logger, JsonSerializerSettings serializerSettings, ArrayPool<char> charPool, ObjectPoolProvider objectPoolProvider)
    parameters:
    - id: logger
      type: ILogger
      description: The <see cref="!:ILogger"></see>.
    - id: serializerSettings
      type: JsonSerializerSettings
      description: "\nThe <see cref=\"!:JsonSerializerSettings\"></see>. Should be either the application-wide settings\n(<xref href=\"Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings\" data-throw-if-not-resolved=\"false\"></xref>) or an instance\n<xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> initially returned.\n"
    - id: charPool
      type: ArrayPool{System.Char}
      description: The <see cref="!:ArrayPool&lt;Char>"></see>.
    - id: objectPoolProvider
      type: ObjectPoolProvider
      description: The <see cref="!:ObjectPoolProvider"></see>.
    content.vb: Public Sub New(logger As ILogger, serializerSettings As JsonSerializerSettings, charPool As ArrayPool(Of Char), objectPoolProvider As ObjectPoolProvider)
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor*
  nameWithType.vb: JsonInputFormatter.JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool(Of Char), ObjectPoolProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool(Of System.Char), ObjectPoolProvider)
  name.vb: JsonInputFormatter(ILogger, JsonSerializerSettings, ArrayPool(Of Char), ObjectPoolProvider)
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
  id: SerializerSettings
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  langs:
  - csharp
  - vb
  name: SerializerSettings
  nameWithType: JsonInputFormatter.SerializerSettings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializerSettings
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the <see cref=\"!:JsonSerializerSettings\"></see> used to configure the <see cref=\"!:JsonSerializer\"></see>.\n"
  remarks: "\nAny modifications to the <see cref=\"!:JsonSerializerSettings\"></see> object after this\n<xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter\" data-throw-if-not-resolved=\"false\"></xref> has been used will have no effect.\n"
  example: []
  syntax:
    content: protected JsonSerializerSettings SerializerSettings { get; }
    parameters: []
    return:
      type: JsonSerializerSettings
    content.vb: Protected ReadOnly Property SerializerSettings As JsonSerializerSettings
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext,System.Text.Encoding)
  id: ReadRequestBodyAsync(InputFormatterContext,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  langs:
  - csharp
  - vb
  name: ReadRequestBodyAsync(InputFormatterContext, Encoding)
  nameWithType: JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadRequestBodyAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public override Task<InputFormatterResult> ReadRequestBodyAsync(InputFormatterContext context, Encoding encoding)
    parameters:
    - id: context
      type: InputFormatterContext
    - id: encoding
      type: System.Text.Encoding
    return:
      type: System.Threading.Tasks.Task{InputFormatterResult}
    content.vb: Public Overrides Function ReadRequestBodyAsync(context As InputFormatterContext, encoding As Encoding) As Task(Of InputFormatterResult)
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer
  id: CreateJsonSerializer
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  langs:
  - csharp
  - vb
  name: CreateJsonSerializer()
  nameWithType: JsonInputFormatter.CreateJsonSerializer()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateJsonSerializer
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 175
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nCalled during deserialization to get the <see cref=\"!:JsonSerializer\"></see>.\n"
  remarks: "\nThis method works in tandem with <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)\" data-throw-if-not-resolved=\"false\"></xref> to\nmanage the lifetimes of <see cref=\"!:JsonSerializer\"></see> instances.\n"
  example: []
  syntax:
    content: protected virtual JsonSerializer CreateJsonSerializer()
    return:
      type: JsonSerializer
      description: The <see cref="!:JsonSerializer"></see> used during deserialization.
    content.vb: Protected Overridable Function CreateJsonSerializer As JsonSerializer
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  id: ReleaseJsonSerializer(JsonSerializer)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  langs:
  - csharp
  - vb
  name: ReleaseJsonSerializer(JsonSerializer)
  nameWithType: JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReleaseJsonSerializer
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonInputFormatter.cs
    startLine: 193
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReleases the <span class=\"paramref\">serializer</span> instance.\n"
  remarks: "\nThis method works in tandem with <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)\" data-throw-if-not-resolved=\"false\"></xref> to\nmanage the lifetimes of <see cref=\"!:JsonSerializer\"></see> instances.\n"
  example: []
  syntax:
    content: protected virtual void ReleaseJsonSerializer(JsonSerializer serializer)
    parameters:
    - id: serializer
      type: JsonSerializer
      description: The <see cref="!:JsonSerializer"></see> to release.
    content.vb: Protected Overridable Sub ReleaseJsonSerializer(serializer As JsonSerializer)
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: JsonInputFormatter
  nameWithType: JsonInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
- uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings
  commentId: P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor
  isExternal: false
  name: JsonInputFormatter
  nameWithType: JsonInputFormatter.JsonInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.JsonInputFormatter
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: JsonSerializerSettings
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: JsonSerializerSettings
- uid: ArrayPool{System.Char}
  commentId: '!:ArrayPool{System.Char}'
  definition: ArrayPool`1
  name: ArrayPool<Char>
  nameWithType: ArrayPool<Char>
  fullName: ArrayPool<System.Char>
  nameWithType.vb: ArrayPool(Of Char)
  fullName.vb: ArrayPool(Of System.Char)
  name.vb: ArrayPool(Of Char)
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectPoolProvider
  isExternal: true
  name: ObjectPoolProvider
  nameWithType: ObjectPoolProvider
  fullName: ObjectPoolProvider
- uid: ArrayPool`1
  isExternal: true
  name: ArrayPool<>
  nameWithType: ArrayPool<>
  fullName: ArrayPool<>
  nameWithType.vb: ArrayPool(Of )
  fullName.vb: ArrayPool(Of )
  name.vb: ArrayPool(Of )
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
  isExternal: false
  name: SerializerSettings
  nameWithType: JsonInputFormatter.SerializerSettings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync
  isExternal: false
  name: ReadRequestBodyAsync
  nameWithType: JsonInputFormatter.ReadRequestBodyAsync
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync
- uid: InputFormatterContext
  isExternal: true
  name: InputFormatterContext
  nameWithType: InputFormatterContext
  fullName: InputFormatterContext
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Threading.Tasks.Task{InputFormatterResult}
  commentId: T:System.Threading.Tasks.Task{InputFormatterResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<InputFormatterResult>
  nameWithType: Task<InputFormatterResult>
  fullName: System.Threading.Tasks.Task<InputFormatterResult>
  nameWithType.vb: Task(Of InputFormatterResult)
  fullName.vb: System.Threading.Tasks.Task(Of InputFormatterResult)
  name.vb: Task(Of InputFormatterResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: InputFormatterResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: InputFormatterResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter
  isExternal: true
  name: ReleaseJsonSerializer(JsonSerializer)
  nameWithType: JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
    name: ReleaseJsonSerializer
    nameWithType: JsonInputFormatter.ReleaseJsonSerializer
    fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(JsonSerializer)
    name: ReleaseJsonSerializer
    nameWithType: JsonInputFormatter.ReleaseJsonSerializer
    fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer
  isExternal: false
  name: CreateJsonSerializer
  nameWithType: JsonInputFormatter.CreateJsonSerializer
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer
- uid: JsonSerializer
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: JsonSerializer
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer
  isExternal: false
  name: ReleaseJsonSerializer
  nameWithType: JsonInputFormatter.ReleaseJsonSerializer
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer
shouldSkipMarkup: true
