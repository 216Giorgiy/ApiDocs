### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  id: AuthenticationHandler`1
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(AuthenticateContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(DescribeSchemesContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(SignInContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(SignOutContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,HttpContext,ILogger,UrlEncoder)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(SignInContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(SignOutContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  langs:
  - csharp
  - vb
  name: AuthenticationHandler<TOptions>
  nameWithType: AuthenticationHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nBase class for the per-request work performed by most authentication middleware.\n"
  example: []
  syntax:
    content: 'public abstract class AuthenticationHandler<TOptions> : IAuthenticationHandler where TOptions : AuthenticationOptions'
    typeParameters:
    - id: TOptions
      description: Specifies which type for of AuthenticationOptions property
    content.vb: >-
      Public MustInherit Class AuthenticationHandler(Of TOptions As AuthenticationOptions)
          Inherits IAuthenticationHandler
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
  nameWithType.vb: AuthenticationHandler(Of TOptions)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions)
  name.vb: AuthenticationHandler(Of TOptions)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  id: SignInAccepted
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignInAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignInAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAccepted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignInAccepted
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool SignInAccepted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property SignInAccepted As Boolean
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted*
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAccepted
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAccepted
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  id: SignOutAccepted
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignOutAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignOutAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAccepted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignOutAccepted
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool SignOutAccepted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property SignOutAccepted As Boolean
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted*
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAccepted
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAccepted
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  id: ChallengeCalled
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ChallengeCalled
  nameWithType: AuthenticationHandler<TOptions>.ChallengeCalled
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeCalled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ChallengeCalled
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool ChallengeCalled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property ChallengeCalled As Boolean
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled*
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeCalled
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeCalled
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  id: Context
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: AuthenticationHandler<TOptions>.Context
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Context
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpContext Context { get; }
    parameters: []
    return:
      type: HttpContext
    content.vb: Protected ReadOnly Property Context As HttpContext
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context*
  nameWithType.vb: AuthenticationHandler(Of TOptions).Context
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Context
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  id: Request
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: AuthenticationHandler<TOptions>.Request
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Request
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpRequest Request { get; }
    parameters: []
    return:
      type: HttpRequest
    content.vb: Protected ReadOnly Property Request As HttpRequest
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request*
  nameWithType.vb: AuthenticationHandler(Of TOptions).Request
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Request
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  id: Response
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: AuthenticationHandler<TOptions>.Response
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Response
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Response
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpResponse Response { get; }
    parameters: []
    return:
      type: HttpResponse
    content.vb: Protected ReadOnly Property Response As HttpResponse
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response*
  nameWithType.vb: AuthenticationHandler(Of TOptions).Response
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Response
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  id: OriginalPathBase
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: OriginalPathBase
  nameWithType: AuthenticationHandler<TOptions>.OriginalPathBase
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPathBase
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OriginalPathBase
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected PathString OriginalPathBase { get; }
    parameters: []
    return:
      type: PathString
    content.vb: Protected ReadOnly Property OriginalPathBase As PathString
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase*
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPathBase
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPathBase
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  id: OriginalPath
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: OriginalPath
  nameWithType: AuthenticationHandler<TOptions>.OriginalPath
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OriginalPath
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected PathString OriginalPath { get; }
    parameters: []
    return:
      type: PathString
    content.vb: Protected ReadOnly Property OriginalPath As PathString
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath*
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPath
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPath
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  id: Logger
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: AuthenticationHandler<TOptions>.Logger
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Logger
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger*
  nameWithType.vb: AuthenticationHandler(Of TOptions).Logger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Logger
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  id: UrlEncoder
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UrlEncoder
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected UrlEncoder UrlEncoder { get; }
    parameters: []
    return:
      type: UrlEncoder
    content.vb: Protected ReadOnly Property UrlEncoder As UrlEncoder
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder*
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  id: PriorHandler
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: PriorHandler
  nameWithType: AuthenticationHandler<TOptions>.PriorHandler
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.PriorHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: PriorHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public IAuthenticationHandler PriorHandler { get; set; }
    parameters: []
    return:
      type: IAuthenticationHandler
    content.vb: Public Property PriorHandler As IAuthenticationHandler
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler*
  nameWithType.vb: AuthenticationHandler(Of TOptions).PriorHandler
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).PriorHandler
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  id: CurrentUri
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: CurrentUri
  nameWithType: AuthenticationHandler<TOptions>.CurrentUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.CurrentUri
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CurrentUri
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected string CurrentUri { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentUri As String
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri*
  nameWithType.vb: AuthenticationHandler(Of TOptions).CurrentUri
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).CurrentUri
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  id: Options
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: AuthenticationHandler<TOptions>.Options
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Options
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected TOptions Options { get; }
    parameters: []
    return:
      type: '{TOptions}'
    content.vb: Protected ReadOnly Property Options As TOptions
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options*
  nameWithType.vb: AuthenticationHandler(Of TOptions).Options
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Options
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,HttpContext,ILogger,UrlEncoder)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,HttpContext,ILogger,UrlEncoder)
  id: InitializeAsync(`0,HttpContext,ILogger,UrlEncoder)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  nameWithType: AuthenticationHandler<TOptions>.InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: InitializeAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nInitialize is called once per request to contextualize this instance with appropriate state.\n"
  example: []
  syntax:
    content: public Task InitializeAsync(TOptions options, HttpContext context, ILogger logger, UrlEncoder encoder)
    parameters:
    - id: options
      type: '{TOptions}'
      description: The original options passed by the application control behavior
    - id: context
      type: HttpContext
      description: The utility object to observe the current request and response
    - id: logger
      type: ILogger
      description: The logging factory used to create loggers
    - id: encoder
      type: UrlEncoder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationHandler%601.UrlEncoder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: async completion
    content.vb: Public Function InitializeAsync(options As TOptions, context As HttpContext, logger As ILogger, encoder As UrlEncoder) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  id: BuildRedirectUri(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: BuildRedirectUri(String)
  nameWithType: AuthenticationHandler<TOptions>.BuildRedirectUri(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BuildRedirectUri
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected string BuildRedirectUri(string targetPath)
    parameters:
    - id: targetPath
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function BuildRedirectUri(targetPath As String) As String
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri*
  nameWithType.vb: AuthenticationHandler(Of TOptions).BuildRedirectUri(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).BuildRedirectUri(System.String)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  id: FinishResponseAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: FinishResponseAsync()
  nameWithType: AuthenticationHandler<TOptions>.FinishResponseAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.FinishResponseAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: FinishResponseAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nHook that is called when the response about to be sent\n"
  example: []
  syntax:
    content: protected virtual Task FinishResponseAsync()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Protected Overridable Function FinishResponseAsync As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).FinishResponseAsync()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).FinishResponseAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  id: HandleRequestAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleRequestAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleRequestAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRequestAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nCalled once by common code after initialization. If an authentication middleware responds directly to\nspecifically known paths it must override this virtual, compare the request path to it's known paths,\nprovide any response information as appropriate, and true to stop further processing.\n"
  example: []
  syntax:
    content: public virtual Task<bool> HandleRequestAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        Returning false will cause the common code to call the next middleware in line. Returning true will

        cause the common code to begin the async completion journey without calling the rest of the middleware

        pipeline.
    content.vb: Public Overridable Function HandleRequestAsync As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleRequestAsync()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleRequestAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(DescribeSchemesContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(DescribeSchemesContext)
  id: GetDescriptions(DescribeSchemesContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: GetDescriptions(DescribeSchemesContext)
  nameWithType: AuthenticationHandler<TOptions>.GetDescriptions(DescribeSchemesContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.GetDescriptions(DescribeSchemesContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetDescriptions
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 184
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public void GetDescriptions(DescribeSchemesContext describeContext)
    parameters:
    - id: describeContext
      type: DescribeSchemesContext
    content.vb: Public Sub GetDescriptions(describeContext As DescribeSchemesContext)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions*
  nameWithType.vb: AuthenticationHandler(Of TOptions).GetDescriptions(DescribeSchemesContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).GetDescriptions(DescribeSchemesContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  id: ShouldHandleScheme(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ShouldHandleScheme(String, Boolean)
  nameWithType: AuthenticationHandler<TOptions>.ShouldHandleScheme(String, Boolean)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ShouldHandleScheme(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ShouldHandleScheme
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 194
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public bool ShouldHandleScheme(string authenticationScheme, bool handleAutomatic)
    parameters:
    - id: authenticationScheme
      type: System.String
    - id: handleAutomatic
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function ShouldHandleScheme(authenticationScheme As String, handleAutomatic As Boolean) As Boolean
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme*
  nameWithType.vb: AuthenticationHandler(Of TOptions).ShouldHandleScheme(String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ShouldHandleScheme(System.String, System.Boolean)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(AuthenticateContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(AuthenticateContext)
  id: AuthenticateAsync(AuthenticateContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(AuthenticateContext)
  nameWithType: AuthenticationHandler<TOptions>.AuthenticateAsync(AuthenticateContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync(AuthenticateContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticateAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task AuthenticateAsync(AuthenticateContext context)
    parameters:
    - id: context
      type: AuthenticateContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AuthenticateAsync(context As AuthenticateContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).AuthenticateAsync(AuthenticateContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).AuthenticateAsync(AuthenticateContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  id: HandleAuthenticateOnceAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleAuthenticateOnceAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleAuthenticateOnceAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 235
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected Task<AuthenticateResult> HandleAuthenticateOnceAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
    content.vb: Protected Function HandleAuthenticateOnceAsync As Task(Of AuthenticateResult)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  id: HandleAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleAuthenticateAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleAuthenticateAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 244
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected abstract Task<AuthenticateResult> HandleAuthenticateAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
    content.vb: Protected MustOverride Function HandleAuthenticateAsync As Task(Of AuthenticateResult)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(SignInContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(SignInContext)
  id: SignInAsync(SignInContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignInAsync(SignInContext)
  nameWithType: AuthenticationHandler<TOptions>.SignInAsync(SignInContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAsync(SignInContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignInAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 246
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task SignInAsync(SignInContext context)
    parameters:
    - id: context
      type: SignInContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SignInAsync(context As SignInContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAsync(SignInContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAsync(SignInContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(SignInContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(SignInContext)
  id: HandleSignInAsync(SignInContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleSignInAsync(SignInContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleSignInAsync(SignInContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignInAsync(SignInContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleSignInAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 261
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task HandleSignInAsync(SignInContext context)
    parameters:
    - id: context
      type: SignInContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function HandleSignInAsync(context As SignInContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignInAsync(SignInContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignInAsync(SignInContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(SignOutContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(SignOutContext)
  id: SignOutAsync(SignOutContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignOutAsync(SignOutContext)
  nameWithType: AuthenticationHandler<TOptions>.SignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAsync(SignOutContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignOutAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 266
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task SignOutAsync(SignOutContext context)
    parameters:
    - id: context
      type: SignOutContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SignOutAsync(context As SignOutContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAsync(SignOutContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAsync(SignOutContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(SignOutContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(SignOutContext)
  id: HandleSignOutAsync(SignOutContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleSignOutAsync(SignOutContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleSignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignOutAsync(SignOutContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleSignOutAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 281
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task HandleSignOutAsync(SignOutContext context)
    parameters:
    - id: context
      type: SignOutContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function HandleSignOutAsync(context As SignOutContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignOutAsync(SignOutContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignOutAsync(SignOutContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(ChallengeContext)
  id: HandleForbiddenAsync(ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleForbiddenAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleForbiddenAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleForbiddenAsync(ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleForbiddenAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 286
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task<bool> HandleForbiddenAsync(ChallengeContext context)
    parameters:
    - id: context
      type: ChallengeContext
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function HandleForbiddenAsync(context As ChallengeContext) As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleForbiddenAsync(ChallengeContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleForbiddenAsync(ChallengeContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  id: HandleUnauthorizedAsync(ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleUnauthorizedAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleUnauthorizedAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleUnauthorizedAsync(ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleUnauthorizedAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 299
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nOverride this method to deal with 401 challenge concerns, if an authentication scheme in question\ndeals an authentication interaction as part of it's request flow. (like adding a response header, or\nchanging the 401 result to 302 of a login page or external sign-in location.)\n"
  example: []
  syntax:
    content: protected virtual Task<bool> HandleUnauthorizedAsync(ChallengeContext context)
    parameters:
    - id: context
      type: ChallengeContext
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if no other handlers should be called
    content.vb: Protected Overridable Function HandleUnauthorizedAsync(context As ChallengeContext) As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync(ChallengeContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync(ChallengeContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(ChallengeContext)
  id: ChallengeAsync(ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ChallengeAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.ChallengeAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync(ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ChallengeAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 305
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task ChallengeAsync(ChallengeContext context)
    parameters:
    - id: context
      type: ChallengeContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChallengeAsync(context As ChallengeContext) As Task
  overload: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync*
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeAsync(ChallengeContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeAsync(ChallengeContext)
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  isExternal: false
  name: SignInAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignInAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAccepted
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAccepted
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAccepted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  isExternal: false
  name: SignOutAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignOutAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAccepted
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAccepted
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAccepted
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  isExternal: false
  name: ChallengeCalled
  nameWithType: AuthenticationHandler<TOptions>.ChallengeCalled
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeCalled
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeCalled
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeCalled
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  isExternal: false
  name: Context
  nameWithType: AuthenticationHandler<TOptions>.Context
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Context
  nameWithType.vb: AuthenticationHandler(Of TOptions).Context
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Context
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  isExternal: false
  name: Request
  nameWithType: AuthenticationHandler<TOptions>.Request
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Request
  nameWithType.vb: AuthenticationHandler(Of TOptions).Request
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Request
- uid: HttpRequest
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: HttpRequest
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  isExternal: false
  name: Response
  nameWithType: AuthenticationHandler<TOptions>.Response
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Response
  nameWithType.vb: AuthenticationHandler(Of TOptions).Response
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Response
- uid: HttpResponse
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: HttpResponse
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  isExternal: false
  name: OriginalPathBase
  nameWithType: AuthenticationHandler<TOptions>.OriginalPathBase
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPathBase
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPathBase
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPathBase
- uid: PathString
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: PathString
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  isExternal: false
  name: OriginalPath
  nameWithType: AuthenticationHandler<TOptions>.OriginalPath
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPath
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPath
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPath
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  isExternal: false
  name: Logger
  nameWithType: AuthenticationHandler<TOptions>.Logger
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Logger
  nameWithType.vb: AuthenticationHandler(Of TOptions).Logger
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Logger
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  isExternal: false
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: UrlEncoder
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  isExternal: false
  name: PriorHandler
  nameWithType: AuthenticationHandler<TOptions>.PriorHandler
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.PriorHandler
  nameWithType.vb: AuthenticationHandler(Of TOptions).PriorHandler
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).PriorHandler
- uid: IAuthenticationHandler
  isExternal: true
  name: IAuthenticationHandler
  nameWithType: IAuthenticationHandler
  fullName: IAuthenticationHandler
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  isExternal: false
  name: CurrentUri
  nameWithType: AuthenticationHandler<TOptions>.CurrentUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.CurrentUri
  nameWithType.vb: AuthenticationHandler(Of TOptions).CurrentUri
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).CurrentUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  isExternal: false
  name: Options
  nameWithType: AuthenticationHandler<TOptions>.Options
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Options
  nameWithType.vb: AuthenticationHandler(Of TOptions).Options
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Options
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: TOptions
  isExternal: false
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  isExternal: false
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync
  isExternal: false
  name: InitializeAsync
  nameWithType: AuthenticationHandler<TOptions>.InitializeAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri
  isExternal: false
  name: BuildRedirectUri
  nameWithType: AuthenticationHandler<TOptions>.BuildRedirectUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri
  nameWithType.vb: AuthenticationHandler(Of TOptions).BuildRedirectUri
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).BuildRedirectUri
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  isExternal: false
  name: FinishResponseAsync
  nameWithType: AuthenticationHandler<TOptions>.FinishResponseAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.FinishResponseAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).FinishResponseAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).FinishResponseAsync
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  isExternal: false
  name: HandleRequestAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleRequestAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleRequestAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleRequestAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleRequestAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions
  isExternal: false
  name: GetDescriptions
  nameWithType: AuthenticationHandler<TOptions>.GetDescriptions
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.GetDescriptions
  nameWithType.vb: AuthenticationHandler(Of TOptions).GetDescriptions
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).GetDescriptions
- uid: DescribeSchemesContext
  isExternal: true
  name: DescribeSchemesContext
  nameWithType: DescribeSchemesContext
  fullName: DescribeSchemesContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme
  isExternal: false
  name: ShouldHandleScheme
  nameWithType: AuthenticationHandler<TOptions>.ShouldHandleScheme
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ShouldHandleScheme
  nameWithType.vb: AuthenticationHandler(Of TOptions).ShouldHandleScheme
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ShouldHandleScheme
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
  isExternal: false
  name: AuthenticateAsync
  nameWithType: AuthenticationHandler<TOptions>.AuthenticateAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).AuthenticateAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).AuthenticateAsync
- uid: AuthenticateContext
  isExternal: true
  name: AuthenticateContext
  nameWithType: AuthenticateContext
  fullName: AuthenticateContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  isExternal: false
  name: HandleAuthenticateOnceAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticateResult>
  nameWithType: Task<AuthenticateResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.AuthenticateResult>
  nameWithType.vb: Task(Of AuthenticateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.AuthenticateResult)
  name.vb: Task(Of AuthenticateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  isExternal: false
  name: HandleAuthenticateAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateAsync
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync
  isExternal: false
  name: SignInAsync
  nameWithType: AuthenticationHandler<TOptions>.SignInAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAsync
- uid: SignInContext
  isExternal: true
  name: SignInContext
  nameWithType: SignInContext
  fullName: SignInContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync
  isExternal: false
  name: HandleSignInAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleSignInAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignInAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignInAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignInAsync
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync
  isExternal: false
  name: SignOutAsync
  nameWithType: AuthenticationHandler<TOptions>.SignOutAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAsync
- uid: SignOutContext
  isExternal: true
  name: SignOutContext
  nameWithType: SignOutContext
  fullName: SignOutContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync
  isExternal: false
  name: HandleSignOutAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleSignOutAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignOutAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignOutAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignOutAsync
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync
  isExternal: false
  name: HandleForbiddenAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleForbiddenAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleForbiddenAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleForbiddenAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleForbiddenAsync
- uid: ChallengeContext
  isExternal: true
  name: ChallengeContext
  nameWithType: ChallengeContext
  fullName: ChallengeContext
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync
  isExternal: false
  name: HandleUnauthorizedAsync
  nameWithType: AuthenticationHandler<TOptions>.HandleUnauthorizedAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleUnauthorizedAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync
  isExternal: false
  name: ChallengeAsync
  nameWithType: AuthenticationHandler<TOptions>.ChallengeAsync
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeAsync
shouldSkipMarkup: true
