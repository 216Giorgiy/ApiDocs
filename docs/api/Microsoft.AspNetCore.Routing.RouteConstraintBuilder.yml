### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  commentId: T:Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  id: RouteConstraintBuilder
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteConstraintBuilder.#ctor(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,System.String)
  - Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddConstraint(System.String,System.Object)
  - Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddResolvedConstraint(System.String,System.String)
  - Microsoft.AspNetCore.Routing.RouteConstraintBuilder.Build
  - Microsoft.AspNetCore.Routing.RouteConstraintBuilder.SetOptional(System.String)
  langs:
  - csharp
  - vb
  name: RouteConstraintBuilder
  nameWithType: RouteConstraintBuilder
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: RouteConstraintBuilder
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nA builder for produding a mapping of keys to see <see cref=\"T:Microsoft.AspNetCore.Routing.IRouteConstraint\"></see>.\n"
  remarks: "\n<see cref=\"T:Microsoft.AspNetCore.Routing.RouteConstraintBuilder\"></see> allows iterative building a set of route constraints, and will\nmerge multiple entries for the same key.\n"
  example: []
  syntax:
    content: public class RouteConstraintBuilder
    content.vb: Public Class RouteConstraintBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.#ctor(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,System.String)
  commentId: M:Microsoft.AspNetCore.Routing.RouteConstraintBuilder.#ctor(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,System.String)
  id: '#ctor(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,System.String)'
  parent: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  langs:
  - csharp
  - vb
  name: RouteConstraintBuilder(IInlineConstraintResolver, String)
  nameWithType: RouteConstraintBuilder.RouteConstraintBuilder(IInlineConstraintResolver, String)
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.RouteConstraintBuilder(Microsoft.AspNetCore.Routing.IInlineConstraintResolver, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <see cref=\"T:Microsoft.AspNetCore.Routing.RouteConstraintBuilder\"></see> instance.\n"
  example: []
  syntax:
    content: public RouteConstraintBuilder(IInlineConstraintResolver inlineConstraintResolver, string displayName)
    content.vb: Public Sub New(inlineConstraintResolver As IInlineConstraintResolver, displayName As String)
    parameters:
    - id: inlineConstraintResolver
      type: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
      description: The <see cref="T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver"></see>.
    - id: displayName
      type: System.String
      description: The display name (for use in error messages).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.Build
  commentId: M:Microsoft.AspNetCore.Routing.RouteConstraintBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: RouteConstraintBuilder.Build()
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: Build
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nBuilds a mapping of constraints.\n"
  example: []
  syntax:
    content: public IDictionary<string, IRouteConstraint> Build()
    content.vb: Public Function Build As IDictionary(Of String, IRouteConstraint)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
      description: An <see cref="T:System.Collections.Generic.IDictionary`2"></see> of the constraints.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddConstraint(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddConstraint(System.String,System.Object)
  id: AddConstraint(System.String,System.Object)
  parent: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  langs:
  - csharp
  - vb
  name: AddConstraint(String, Object)
  nameWithType: RouteConstraintBuilder.AddConstraint(String, Object)
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddConstraint(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: AddConstraint
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nAdds a constraint instance for the given key.\n"
  remarks: "\nIf the <em>value</em> is a string, it will be converted to a <see cref=\"T:Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint\"></see>.\n\nFor example, the string <pre><code>Product[0-9]+</code></pre> will be converted to the regular expression\n<pre><code>^(Product[0-9]+)</code></pre>. See <see cref=\"T:System.Text.RegularExpressions.Regex\"></see> for more details.\n"
  example: []
  syntax:
    content: public void AddConstraint(string key, object value)
    content.vb: Public Sub AddConstraint(key As String, value As Object)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Object
      description: "\nThe constraint instance. Must either be a string or an instance of <see cref=\"T:Microsoft.AspNetCore.Routing.IRouteConstraint\"></see>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddResolvedConstraint(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddResolvedConstraint(System.String,System.String)
  id: AddResolvedConstraint(System.String,System.String)
  parent: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  langs:
  - csharp
  - vb
  name: AddResolvedConstraint(String, String)
  nameWithType: RouteConstraintBuilder.AddResolvedConstraint(String, String)
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.AddResolvedConstraint(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: AddResolvedConstraint
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 138
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nAdds a constraint for the given key, resolved by the <see cref=\"T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver\"></see>.\n"
  remarks: "\nThe <see cref=\"T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver\"></see> can create <see cref=\"T:Microsoft.AspNetCore.Routing.IRouteConstraint\"></see> instances\nbased on <em>constraintText</em>. See <see cref=\"P:Microsoft.AspNetCore.Routing.RouteOptions.ConstraintMap\"></see> to register\ncustom constraint types.\n"
  example: []
  syntax:
    content: public void AddResolvedConstraint(string key, string constraintText)
    content.vb: Public Sub AddResolvedConstraint(key As String, constraintText As String)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: constraintText
      type: System.String
      description: The text to be resolved by <see cref="T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver"></see>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.SetOptional(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.RouteConstraintBuilder.SetOptional(System.String)
  id: SetOptional(System.String)
  parent: Microsoft.AspNetCore.Routing.RouteConstraintBuilder
  langs:
  - csharp
  - vb
  name: SetOptional(String)
  nameWithType: RouteConstraintBuilder.SetOptional(String)
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintBuilder.SetOptional(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/routing
    id: SetOptional
    path: src/Microsoft.AspNetCore.Routing/RouteConstraintBuilder.cs
    startLine: 168
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nSets the given key as optional.\n"
  example: []
  syntax:
    content: public void SetOptional(string key)
    content.vb: Public Sub SetOptional(key As String)
    parameters:
    - id: key
      type: System.String
      description: The key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IInlineConstraintResolver
  nameWithType: IInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IRouteConstraint>
  nameWithType: IDictionary<String, IRouteConstraint>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.AspNetCore.Routing.IRouteConstraint>
  nameWithType.vb: IDictionary(Of String, IRouteConstraint)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.AspNetCore.Routing.IRouteConstraint)
  name.vb: IDictionary(Of String, IRouteConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
