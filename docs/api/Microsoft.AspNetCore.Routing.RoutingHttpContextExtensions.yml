### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions
  commentId: T:Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions
  id: RoutingHttpContextExtensions
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData(HttpContext)
  - Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue(HttpContext,System.String)
  langs:
  - csharp
  - vb
  name: RoutingHttpContextExtensions
  nameWithType: RoutingHttpContextExtensions
  fullName: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RoutingHttpContextExtensions
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nExtension methods for <see cref=\"!:HttpContext\"></see> related to routing.\n"
  example: []
  syntax:
    content: public static class RoutingHttpContextExtensions
    content.vb: Public Module RoutingHttpContextExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData(HttpContext)
  commentId: M:Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData(HttpContext)
  id: GetRouteData(HttpContext)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions
  langs:
  - csharp
  - vb
  name: GetRouteData(HttpContext)
  nameWithType: RoutingHttpContextExtensions.GetRouteData(HttpContext)
  fullName: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetRouteData
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <span class=\"paramref\">httpContext</span>.\n"
  example: []
  syntax:
    content: public static RouteData GetRouteData(this HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    return:
      type: Microsoft.AspNetCore.Routing.RouteData
      description: The <xref href="Microsoft.AspNetCore.Routing.RouteData" data-throw-if-not-resolved="false"></xref>, or null.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteData(httpContext As HttpContext) As RouteData
  overload: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue(HttpContext,System.String)
  commentId: M:Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue(HttpContext,System.String)
  id: GetRouteValue(HttpContext,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions
  langs:
  - csharp
  - vb
  name: GetRouteValue(HttpContext, String)
  nameWithType: RoutingHttpContextExtensions.GetRouteValue(HttpContext, String)
  fullName: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue(HttpContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetRouteValue
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing.Abstractions/RoutingHttpContextExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets a route value from <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Values\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided\n<span class=\"paramref\">httpContext</span>.\n"
  example: []
  syntax:
    content: public static object GetRouteValue(this HttpContext httpContext, string key)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    - id: key
      type: System.String
      description: The key of the route value.
    return:
      type: System.Object
      description: The corresponding route value, or null.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteValue(httpContext As HttpContext, key As String) As Object
  overload: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
- uid: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData*
  commentId: Overload:Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData
  isExternal: false
  name: GetRouteData
  nameWithType: RoutingHttpContextExtensions.GetRouteData
  fullName: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteData
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: Microsoft.AspNetCore.Routing.RouteData.Values
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Values
- uid: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue*
  commentId: Overload:Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue
  isExternal: false
  name: GetRouteValue
  nameWithType: RoutingHttpContextExtensions.GetRouteValue
  fullName: Microsoft.AspNetCore.Routing.RoutingHttpContextExtensions.GetRouteValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
