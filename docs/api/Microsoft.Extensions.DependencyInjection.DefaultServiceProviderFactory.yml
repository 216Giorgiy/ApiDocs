### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory
  commentId: T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory
  id: DefaultServiceProviderFactory
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: DefaultServiceProviderFactory
  nameWithType: DefaultServiceProviderFactory
  fullName: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: DefaultServiceProviderFactory
    path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
    startLine: 4
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public class DefaultServiceProviderFactory : IServiceProviderFactory<IServiceCollection>'
    content.vb: >-
      Public Class DefaultServiceProviderFactory
          Implements IServiceProviderFactory(Of IServiceCollection)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory
  langs:
  - csharp
  - vb
  name: CreateBuilder(IServiceCollection)
  nameWithType: DefaultServiceProviderFactory.CreateBuilder(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: CreateBuilder
    path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
    startLine: 6
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public IServiceCollection CreateBuilder(IServiceCollection services)
    content.vb: Public Function CreateBuilder(services As IServiceCollection) As IServiceCollection
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory
  langs:
  - csharp
  - vb
  name: CreateServiceProvider(IServiceCollection)
  nameWithType: DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: CreateServiceProvider
    path: src/Microsoft.Extensions.DependencyInjection/DefaultServiceProviderFactory.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public IServiceProvider CreateServiceProvider(IServiceCollection containerBuilder)
    content.vb: Public Function CreateServiceProvider(containerBuilder As IServiceCollection) As IServiceProvider
    parameters:
    - id: containerBuilder
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: System.IServiceProvider
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  parent: Microsoft.Extensions.DependencyInjection
  definition: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  name: IServiceProviderFactory<IServiceCollection>
  nameWithType: IServiceProviderFactory<IServiceCollection>
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>
  nameWithType.vb: IServiceProviderFactory(Of IServiceCollection)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: IServiceProviderFactory(Of IServiceCollection)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  isExternal: false
  name: IServiceProviderFactory<TContainerBuilder>
  nameWithType: IServiceProviderFactory<TContainerBuilder>
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder)
  name.vb: IServiceProviderFactory(Of TContainerBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  definition: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: CreateBuilder(IServiceCollection)
  nameWithType: IServiceProviderFactory<IServiceCollection>.CreateBuilder(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: IServiceProviderFactory(Of IServiceCollection).CreateBuilder(IServiceCollection)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of Microsoft.Extensions.DependencyInjection.IServiceCollection).CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateBuilder
    nameWithType: IServiceProviderFactory<IServiceCollection>.CreateBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>.CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateBuilder
    nameWithType: IServiceProviderFactory(Of IServiceCollection).CreateBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of Microsoft.Extensions.DependencyInjection.IServiceCollection).CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExternal: false
  name: CreateBuilder(IServiceCollection)
  nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateBuilder(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder).CreateBuilder(IServiceCollection)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateBuilder
    nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateBuilder
    nameWithType: IServiceProviderFactory(Of TContainerBuilder).CreateBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  definition: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  name: CreateServiceProvider(IServiceCollection)
  nameWithType: IServiceProviderFactory<IServiceCollection>.CreateServiceProvider(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: IServiceProviderFactory(Of IServiceCollection).CreateServiceProvider(IServiceCollection)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of Microsoft.Extensions.DependencyInjection.IServiceCollection).CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
    name: CreateServiceProvider
    nameWithType: IServiceProviderFactory<IServiceCollection>.CreateServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<Microsoft.Extensions.DependencyInjection.IServiceCollection>.CreateServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
    name: CreateServiceProvider
    nameWithType: IServiceProviderFactory(Of IServiceCollection).CreateServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of Microsoft.Extensions.DependencyInjection.IServiceCollection).CreateServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  isExternal: false
  name: CreateServiceProvider(TContainerBuilder)
  nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider(TContainerBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider(TContainerBuilder)
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider(TContainerBuilder)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider(TContainerBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
    name: CreateServiceProvider
    nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
    name: CreateServiceProvider
    nameWithType: IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: )
    nameWithType: )
    fullName: )
