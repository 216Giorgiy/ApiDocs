### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  id: MvcRazorMvcCoreBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  - Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper``1(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{``0,Microsoft.AspNetCore.Mvc.Rendering.ViewContext})
  langs:
  - csharp
  - vb
  name: MvcRazorMvcCoreBuilderExtensions
  nameWithType: MvcRazorMvcCoreBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcRazorMvcCoreBuilderExtensions
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static class MvcRazorMvcCoreBuilderExtensions
    content.vb: Public Module MvcRazorMvcCoreBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddRazorViewEngine(IMvcCoreBuilder)
  nameWithType: MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddRazorViewEngine
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddRazorViewEngine(this IMvcCoreBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRazorViewEngine(builder As IMvcCoreBuilder) As IMvcCoreBuilder
  overload: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  id: AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddRazorViewEngine(IMvcCoreBuilder, Action<RazorViewEngineOptions>)
  nameWithType: MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(IMvcCoreBuilder, Action<RazorViewEngineOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddRazorViewEngine
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddRazorViewEngine(this IMvcCoreBuilder builder, Action<RazorViewEngineOptions> setupAction)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRazorViewEngine(builder As IMvcCoreBuilder, setupAction As Action(Of RazorViewEngineOptions)) As IMvcCoreBuilder
  overload: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine*
  nameWithType.vb: MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(IMvcCoreBuilder, Action(Of RazorViewEngineOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions))
  name.vb: AddRazorViewEngine(IMvcCoreBuilder, Action(Of RazorViewEngineOptions))
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddTagHelpersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTagHelpersAsServices(IMvcCoreBuilder)
  nameWithType: MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddTagHelpersAsServices
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nRegisters discovered tag helpers as services and changes the existing <xref href=\"Microsoft.AspNetCore.Mvc.Razor.ITagHelperActivator\" data-throw-if-not-resolved=\"false\"></xref>\nfor an <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.ServiceBasedTagHelperActivator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder AddTagHelpersAsServices(this IMvcCoreBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref> instance this method extends.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref> instance this method extends.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTagHelpersAsServices(builder As IMvcCoreBuilder) As IMvcCoreBuilder
  overload: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper``1(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{``0,Microsoft.AspNetCore.Mvc.Rendering.ViewContext})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper``1(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{``0,Microsoft.AspNetCore.Mvc.Rendering.ViewContext})
  id: InitializeTagHelper``1(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{``0,Microsoft.AspNetCore.Mvc.Rendering.ViewContext})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: InitializeTagHelper<TTagHelper>(IMvcCoreBuilder, Action<TTagHelper, ViewContext>)
  nameWithType: MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper<TTagHelper>(IMvcCoreBuilder, Action<TTagHelper, ViewContext>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper<TTagHelper>(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<TTagHelper, Microsoft.AspNetCore.Mvc.Rendering.ViewContext>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InitializeTagHelper
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/DependencyInjection/MvcRazorMvcCoreBuilderExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds an initialization callback for a given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTagHelper</code>.\n"
  remarks: "\nThe callback will be invoked on any <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTagHelper</code> instance before the\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext%2cMicrosoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)\" data-throw-if-not-resolved=\"false\"></xref> method is called.\n"
  example: []
  syntax:
    content: 'public static IMvcCoreBuilder InitializeTagHelper<TTagHelper>(this IMvcCoreBuilder builder, Action<TTagHelper, ViewContext> initialize)where TTagHelper : ITagHelper'
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: initialize
      type: System.Action{{TTagHelper},Microsoft.AspNetCore.Mvc.Rendering.ViewContext}
      description: An action to initialize the <code data-dev-comment-type="typeparamref" class="typeparamref">TTagHelper</code>.
    typeParameters:
    - id: TTagHelper
      description: The type of <xref href="Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" data-throw-if-not-resolved="false"></xref> being initialized.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref> instance this method extends.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InitializeTagHelper(Of TTagHelper As ITagHelper)(builder As IMvcCoreBuilder, initialize As Action(Of TTagHelper, ViewContext)) As IMvcCoreBuilder
  overload: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper*
  nameWithType.vb: MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper(Of TTagHelper)(IMvcCoreBuilder, Action(Of TTagHelper, ViewContext))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper(Of TTagHelper)(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of TTagHelper, Microsoft.AspNetCore.Mvc.Rendering.ViewContext))
  name.vb: InitializeTagHelper(Of TTagHelper)(IMvcCoreBuilder, Action(Of TTagHelper, ViewContext))
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine
  isExternal: false
  name: AddRazorViewEngine
  nameWithType: MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddRazorViewEngine
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IMvcCoreBuilder
  nameWithType: IMvcCoreBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
- uid: System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  parent: System
  definition: System.Action`1
  name: Action<RazorViewEngineOptions>
  nameWithType: Action<RazorViewEngineOptions>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: Action(Of RazorViewEngineOptions)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: Action(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.ITagHelperActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.ITagHelperActivator
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: ITagHelperActivator
  nameWithType: ITagHelperActivator
  fullName: Microsoft.AspNetCore.Mvc.Razor.ITagHelperActivator
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.ServiceBasedTagHelperActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.ServiceBasedTagHelperActivator
  isExternal: false
  name: ServiceBasedTagHelperActivator
  nameWithType: ServiceBasedTagHelperActivator
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.ServiceBasedTagHelperActivator
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices
  isExternal: false
  name: AddTagHelpersAsServices
  nameWithType: MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.AddTagHelpersAsServices
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  isExternal: false
  name: ProcessAsync(TagHelperContext, TagHelperOutput)
  nameWithType: ITagHelper.ProcessAsync(TagHelperContext, TagHelperOutput)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: ProcessAsync
    nameWithType: ITagHelper.ProcessAsync
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: ProcessAsync
    nameWithType: ITagHelper.ProcessAsync
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper.ProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper
  isExternal: false
  name: InitializeTagHelper
  nameWithType: MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper
  fullName: Microsoft.Extensions.DependencyInjection.MvcRazorMvcCoreBuilderExtensions.InitializeTagHelper
- uid: System.Action{{TTagHelper},Microsoft.AspNetCore.Mvc.Rendering.ViewContext}
  commentId: T:System.Action{`0,Microsoft.AspNetCore.Mvc.Rendering.ViewContext}
  parent: System
  definition: System.Action`2
  name: Action<TTagHelper, ViewContext>
  nameWithType: Action<TTagHelper, ViewContext>
  fullName: System.Action<TTagHelper, Microsoft.AspNetCore.Mvc.Rendering.ViewContext>
  nameWithType.vb: Action(Of TTagHelper, ViewContext)
  fullName.vb: System.Action(Of TTagHelper, Microsoft.AspNetCore.Mvc.Rendering.ViewContext)
  name.vb: Action(Of TTagHelper, ViewContext)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTagHelper
    nameWithType: TTagHelper
    fullName: TTagHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
    name: ViewContext
    nameWithType: ViewContext
    fullName: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTagHelper
    nameWithType: TTagHelper
    fullName: TTagHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
    name: ViewContext
    nameWithType: ViewContext
    fullName: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
