### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.LoggerFactory
  commentId: T:Microsoft.Extensions.Logging.LoggerFactory
  id: LoggerFactory
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.LoggerFactory.AddProvider(ILoggerProvider)
  - Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  - Microsoft.Extensions.Logging.LoggerFactory.Dispose
  langs:
  - csharp
  - vb
  name: LoggerFactory
  nameWithType: LoggerFactory
  fullName: Microsoft.Extensions.Logging.LoggerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging/LoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactory
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging/LoggerFactory.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging
  namespace: Microsoft.Extensions.Logging
  summary: "\nSummary description for LoggerFactory\n"
  example: []
  syntax:
    content: 'public class LoggerFactory : ILoggerFactory'
    content.vb: >-
      Public Class LoggerFactory
          Inherits ILoggerFactory
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.LoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: LoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging/LoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging/LoggerFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.Logging
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: public ILogger CreateLogger(string categoryName)
    parameters:
    - id: categoryName
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(categoryName As String) As ILogger
  overload: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.AddProvider(ILoggerProvider)
  id: AddProvider(ILoggerProvider)
  parent: Microsoft.Extensions.Logging.LoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: LoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging/LoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddProvider
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging/LoggerFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.Extensions.Logging
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: public void AddProvider(ILoggerProvider provider)
    parameters:
    - id: provider
      type: ILoggerProvider
    content.vb: Public Sub AddProvider(provider As ILoggerProvider)
  overload: Microsoft.Extensions.Logging.LoggerFactory.AddProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFactory.Dispose
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Logging.LoggerFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LoggerFactory.Dispose()
  fullName: Microsoft.Extensions.Logging.LoggerFactory.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging/LoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Dispose
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging/LoggerFactory.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.Logging
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.Logging.LoggerFactory.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerFactory.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: LoggerFactory.CreateLogger
  fullName: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.Extensions.Logging.LoggerFactory.AddProvider*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerFactory.AddProvider
  isExternal: false
  name: AddProvider
  nameWithType: LoggerFactory.AddProvider
  fullName: Microsoft.Extensions.Logging.LoggerFactory.AddProvider
- uid: ILoggerProvider
  isExternal: true
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: ILoggerProvider
- uid: Microsoft.Extensions.Logging.LoggerFactory.Dispose*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerFactory.Dispose
  isExternal: false
  name: Dispose
  nameWithType: LoggerFactory.Dispose
  fullName: Microsoft.Extensions.Logging.LoggerFactory.Dispose
shouldSkipMarkup: true
