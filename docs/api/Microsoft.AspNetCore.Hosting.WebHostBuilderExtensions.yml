### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  id: WebHostBuilderExtensions
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(IWebHostBuilder,System.Action{IApplicationBuilder})
  - Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(IWebHostBuilder,System.Type)
  - Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(IWebHostBuilder)
  langs:
  - csharp
  - vb
  name: WebHostBuilderExtensions
  nameWithType: WebHostBuilderExtensions
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostBuilderExtensions
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static class WebHostBuilderExtensions
    content.vb: Public Module WebHostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(IWebHostBuilder,System.Action{IApplicationBuilder})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(IWebHostBuilder,System.Action{IApplicationBuilder})
  id: Configure(IWebHostBuilder,System.Action{IApplicationBuilder})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: Configure(IWebHostBuilder, Action<IApplicationBuilder>)
  nameWithType: WebHostBuilderExtensions.Configure(IWebHostBuilder, Action<IApplicationBuilder>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(IWebHostBuilder, System.Action<IApplicationBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Configure
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the startup method to be used to configure the web application.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder Configure(this IWebHostBuilder hostBuilder, Action<IApplicationBuilder> configureApp)
    parameters:
    - id: hostBuilder
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see> to configure.
    - id: configureApp
      type: System.Action{IApplicationBuilder}
      description: The delegate that configures the <see cref="!:IApplicationBuilder"></see>.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Configure(hostBuilder As IWebHostBuilder, configureApp As Action(Of IApplicationBuilder)) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure*
  nameWithType.vb: WebHostBuilderExtensions.Configure(IWebHostBuilder, Action(Of IApplicationBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(IWebHostBuilder, System.Action(Of IApplicationBuilder))
  name.vb: Configure(IWebHostBuilder, Action(Of IApplicationBuilder))
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(IWebHostBuilder,System.Type)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(IWebHostBuilder,System.Type)
  id: UseStartup(IWebHostBuilder,System.Type)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseStartup(IWebHostBuilder, Type)
  nameWithType: WebHostBuilderExtensions.UseStartup(IWebHostBuilder, Type)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(IWebHostBuilder, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseStartup
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the startup type to be used by the web host. \n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseStartup(this IWebHostBuilder hostBuilder, Type startupType)
    parameters:
    - id: hostBuilder
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see> to configure.
    - id: startupType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStartup(hostBuilder As IWebHostBuilder, startupType As Type) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(IWebHostBuilder)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(IWebHostBuilder)
  id: UseStartup``1(IWebHostBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseStartup<TStartup>(IWebHostBuilder)
  nameWithType: WebHostBuilderExtensions.UseStartup<TStartup>(IWebHostBuilder)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup<TStartup>(IWebHostBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseStartup
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilderExtensions.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the startup type to be used by the web host.\n"
  example: []
  syntax:
    content: 'public static IWebHostBuilder UseStartup<TStartup>(this IWebHostBuilder hostBuilder)where TStartup : class'
    parameters:
    - id: hostBuilder
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see> to configure.
    typeParameters:
    - id: TStartup
      description: The type containing the startup methods for the application.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStartup(Of TStartup As Class)(hostBuilder As IWebHostBuilder) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup*
  nameWithType.vb: WebHostBuilderExtensions.UseStartup(Of TStartup)(IWebHostBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Of TStartup)(IWebHostBuilder)
  name.vb: UseStartup(Of TStartup)(IWebHostBuilder)
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
  isExternal: false
  name: Configure
  nameWithType: WebHostBuilderExtensions.Configure
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
- uid: IWebHostBuilder
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: IWebHostBuilder
- uid: System.Action{IApplicationBuilder}
  commentId: T:System.Action{IApplicationBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApplicationBuilder>
  nameWithType: Action<IApplicationBuilder>
  fullName: System.Action<IApplicationBuilder>
  nameWithType.vb: Action(Of IApplicationBuilder)
  fullName.vb: System.Action(Of IApplicationBuilder)
  name.vb: Action(Of IApplicationBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: IApplicationBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
  isExternal: false
  name: UseStartup
  nameWithType: WebHostBuilderExtensions.UseStartup
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
shouldSkipMarkup: true
