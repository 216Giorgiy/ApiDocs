### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  id: ServiceAcceptingFactoryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
  langs:
  - csharp
  - vb
  name: ServiceAcceptingFactoryService
  nameWithType: ServiceAcceptingFactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ServiceAcceptingFactoryService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class ServiceAcceptingFactoryService : object'
    content.vb: >-
      Public Class ServiceAcceptingFactoryService
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  langs:
  - csharp
  - vb
  name: ServiceAcceptingFactoryService(ScopedFactoryService, IFactoryService)
  nameWithType: ServiceAcceptingFactoryService.ServiceAcceptingFactoryService(ScopedFactoryService, IFactoryService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ServiceAcceptingFactoryService(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ServiceAcceptingFactoryService(ScopedFactoryService scopedService, IFactoryService transientService)
    parameters:
    - id: scopedService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService
    - id: transientService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public Sub New(scopedService As ScopedFactoryService, transientService As IFactoryService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
  id: ScopedService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  langs:
  - csharp
  - vb
  name: ScopedService
  nameWithType: ServiceAcceptingFactoryService.ScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ScopedService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ScopedFactoryService ScopedService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService
    content.vb: Public ReadOnly Property ScopedService As ScopedFactoryService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
  id: TransientService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService
  langs:
  - csharp
  - vb
  name: TransientService
  nameWithType: ServiceAcceptingFactoryService.TransientService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: TransientService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ServiceAcceptingFactoryService.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFactoryService TransientService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public ReadOnly Property TransientService As IFactoryService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor
  isExternal: false
  name: ServiceAcceptingFactoryService
  nameWithType: ServiceAcceptingFactoryService.ServiceAcceptingFactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ServiceAcceptingFactoryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: ScopedFactoryService
  nameWithType: ScopedFactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFactoryService
  nameWithType: IFactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
  isExternal: false
  name: ScopedService
  nameWithType: ServiceAcceptingFactoryService.ScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
  isExternal: false
  name: TransientService
  nameWithType: ServiceAcceptingFactoryService.TransientService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService
shouldSkipMarkup: true
