### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass
  id: AnotherClass
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.FakeService
  langs:
  - csharp
  - vb
  name: AnotherClass
  nameWithType: AnotherClass
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: AnotherClass
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public class AnotherClass
    content.vb: Public Class AnotherClass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass
  langs:
  - csharp
  - vb
  name: AnotherClass(IFakeService)
  nameWithType: AnotherClass.AnotherClass(IFakeService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.AnotherClass(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: .ctor
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public AnotherClass(IFakeService fakeService)
    content.vb: Public Sub New(fakeService As IFakeService)
    parameters:
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.FakeService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.FakeService
  id: FakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass
  langs:
  - csharp
  - vb
  name: FakeService
  nameWithType: AnotherClass.FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.FakeService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: FakeService
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClass.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeService FakeService { get; }
    content.vb: Public ReadOnly Property FakeService As IFakeService
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
