### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Matcher
  id: Matcher
  parent: Microsoft.Extensions.FileSystemGlobbing
  children:
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)
  langs:
  - csharp
  - vb
  name: Matcher
  nameWithType: Matcher
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: Matcher
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 96
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nSearches the file system for files with names that match specified patterns.\n"
  remarks: "\n<p>\nPatterns specified in <seealso cref=\"M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)\"></seealso> and <seealso cref=\"M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)\"></seealso> can use\nthe following formats to match multiple files or directories.\n</p>\n<ul><li>\n        exact directory and file name\n\n<ul><li>\"one.txt\"</li><li>\"dir/two.txt\"</li></ul>\n</li><li>\nwildcards (*) in file and directory names that represent zero to many characters not including\ndirectory separators characters\n\n<ul><li>\"*.txt\"all files with .txt file extension</li><li>\"*.*\"all files with an extension</li><li>\"*\"all files in top level directory</li><li>\".*\"filenames beginning with '.'</li><li>\"readme.*\"all files named 'readme' with any file extension</li><li>\"styles/*.css\"all files with extension '.css' in the directory 'styles/'</li><li>\"scripts/*/*\"all files in 'scripts/' or one level of subdirectory under 'scripts/'</li><li>\"images*/*\"all files in a folder with name that is or begins with 'images'</li></ul>\n</li><li>arbitrary directory depth (\"/**/\")\n<ul><li>\"**/*\"all files in any subdirectory</li><li>\"dir/**/*\"all files in any subdirectory under 'dir/'</li></ul>\n</li><li>relative paths\n'../shared/*' - all files in a diretory named 'shared' at the sibling level to the base directory given\nto <see cref=\"M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)\"></see>\n</li></ul>\n"
  example: []
  syntax:
    content: public class Matcher
    content.vb: Public Class Matcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.Collections.Generic.IEnumerable{System.String})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.FileSystemGlobbing.Matcher
  langs:
  - csharp
  - vb
  name: Matcher()
  nameWithType: Matcher.Matcher()
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher.Matcher()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: .ctor
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 106
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nInitializes an instance of <see cref=\"T:Microsoft.Extensions.FileSystemGlobbing.Matcher\"></see> using case-insensitive matching\n"
  example: []
  syntax:
    content: public Matcher()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)
  id: '#ctor(System.StringComparison)'
  parent: Microsoft.Extensions.FileSystemGlobbing.Matcher
  langs:
  - csharp
  - vb
  name: Matcher(StringComparison)
  nameWithType: Matcher.Matcher(StringComparison)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher.Matcher(System.StringComparison)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: .ctor
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 115
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nInitializes an instance of <see cref=\"T:Microsoft.Extensions.FileSystemGlobbing.Matcher\"></see> using the string comparsion method specified\n"
  example: []
  syntax:
    content: public Matcher(StringComparison comparisonType)
    content.vb: Public Sub New(comparisonType As StringComparison)
    parameters:
    - id: comparisonType
      type: System.StringComparison
      description: The <see cref="T:System.StringComparison"></see> to use
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)
  id: AddInclude(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Matcher
  langs:
  - csharp
  - vb
  name: AddInclude(String)
  nameWithType: Matcher.AddInclude(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: AddInclude
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 133
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\n<p>\nAdd a file name pattern that the matcher should use to discover files. Patterns are relative to the root\ndirectory given when <see cref=\"M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)\"></see> is called.\n</p>\n<p>\nUse the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and\ndirectory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.\n</p>\n"
  example: []
  syntax:
    content: public virtual Matcher AddInclude(string pattern)
    content.vb: Public Overridable Function AddInclude(pattern As String) As Matcher
    parameters:
    - id: pattern
      type: System.String
      description: The globbing pattern
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Matcher
      description: The matcher
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)
  id: AddExclude(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Matcher
  langs:
  - csharp
  - vb
  name: AddExclude(String)
  nameWithType: Matcher.AddExclude(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: AddExclude
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 151
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\n<p>\nAdd a file name pattern for files the matcher should exclude from the results. Patterns are relative to the\nroot directory given when <see cref=\"M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)\"></see> is called.\n</p>\n<p>\nUse the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and\ndirectory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.\n</p>\n"
  example: []
  syntax:
    content: public virtual Matcher AddExclude(string pattern)
    content.vb: Public Overridable Function AddExclude(pattern As String) As Matcher
    parameters:
    - id: pattern
      type: System.String
      description: The globbing pattern
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Matcher
      description: The matcher
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)
  id: Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)
  parent: Microsoft.Extensions.FileSystemGlobbing.Matcher
  langs:
  - csharp
  - vb
  name: Execute(DirectoryInfoBase)
  nameWithType: Matcher.Execute(DirectoryInfoBase)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: Execute
    path: src/Microsoft.Extensions.FileSystemGlobbing/Matcher.cs
    startLine: 162
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nSearches the directory specified for all files matching patterns added to this instance of <see cref=\"T:Microsoft.Extensions.FileSystemGlobbing.Matcher\"></see>\n"
  example: []
  syntax:
    content: public virtual PatternMatchingResult Execute(DirectoryInfoBase directoryInfo)
    content.vb: Public Overridable Function Execute(directoryInfo As DirectoryInfoBase) As PatternMatchingResult
    parameters:
    - id: directoryInfo
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
      description: The root directory for the search
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult
      description: Always returns instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult"></see>, even if not files were matched
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Extensions.FileSystemGlobbing
  commentId: N:Microsoft.Extensions.FileSystemGlobbing
  isExternal: false
  name: Microsoft.Extensions.FileSystemGlobbing
  nameWithType: Microsoft.Extensions.FileSystemGlobbing
  fullName: Microsoft.Extensions.FileSystemGlobbing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  name: AddExcludePatterns(IEnumerable<String>[])
  nameWithType: MatcherExtensions.AddExcludePatterns(IEnumerable<String>[])
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable<System.String>[])
  nameWithType.vb: MatcherExtensions.AddExcludePatterns(IEnumerable(Of String)())
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable(Of System.String)())
  name.vb: AddExcludePatterns(IEnumerable(Of String)())
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
    name: AddExcludePatterns
    nameWithType: MatcherExtensions.AddExcludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
    name: AddExcludePatterns
    nameWithType: MatcherExtensions.AddExcludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  name: AddIncludePatterns(IEnumerable<String>[])
  nameWithType: MatcherExtensions.AddIncludePatterns(IEnumerable<String>[])
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable<System.String>[])
  nameWithType.vb: MatcherExtensions.AddIncludePatterns(IEnumerable(Of String)())
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable(Of System.String)())
  name.vb: AddIncludePatterns(IEnumerable(Of String)())
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
    name: AddIncludePatterns
    nameWithType: MatcherExtensions.AddIncludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(System.Collections.Generic.IEnumerable{System.String}[])
    name: AddIncludePatterns
    nameWithType: MatcherExtensions.AddIncludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  name: GetResultsInFullPath(String)
  nameWithType: MatcherExtensions.GetResultsInFullPath(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(System.String)
    name: GetResultsInFullPath
    nameWithType: MatcherExtensions.GetResultsInFullPath
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(System.String)
    name: GetResultsInFullPath
    nameWithType: MatcherExtensions.GetResultsInFullPath
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  name: Match(String)
  nameWithType: MatcherExtensions.Match(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
  name: Match(String, String)
  nameWithType: MatcherExtensions.Match(String, String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
  name: Match(IEnumerable<String>)
  nameWithType: MatcherExtensions.Match(IEnumerable<String>)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: MatcherExtensions.Match(IEnumerable(Of String))
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Match(IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher.Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  definition: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
  name: Match(String, IEnumerable<String>)
  nameWithType: MatcherExtensions.Match(String, IEnumerable<String>)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: MatcherExtensions.Match(String, IEnumerable(Of String))
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Match(String, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  isExternal: true
  name: AddExcludePatterns(Matcher, IEnumerable<String>[])
  nameWithType: MatcherExtensions.AddExcludePatterns(Matcher, IEnumerable<String>[])
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable<System.String>[])
  nameWithType.vb: MatcherExtensions.AddExcludePatterns(Matcher, IEnumerable(Of String)())
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable(Of System.String)())
  name.vb: AddExcludePatterns(Matcher, IEnumerable(Of String)())
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
    name: AddExcludePatterns
    nameWithType: MatcherExtensions.AddExcludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
    name: AddExcludePatterns
    nameWithType: MatcherExtensions.AddExcludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
  parent: Microsoft.Extensions.FileSystemGlobbing
  isExternal: false
  name: MatcherExtensions
  nameWithType: MatcherExtensions
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
  isExternal: true
  name: AddIncludePatterns(Matcher, IEnumerable<String>[])
  nameWithType: MatcherExtensions.AddIncludePatterns(Matcher, IEnumerable<String>[])
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable<System.String>[])
  nameWithType.vb: MatcherExtensions.AddIncludePatterns(Matcher, IEnumerable(Of String)())
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable(Of System.String)())
  name.vb: AddIncludePatterns(Matcher, IEnumerable(Of String)())
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
    name: AddIncludePatterns
    nameWithType: MatcherExtensions.AddIncludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])
    name: AddIncludePatterns
    nameWithType: MatcherExtensions.AddIncludePatterns
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  isExternal: true
  name: GetResultsInFullPath(Matcher, String)
  nameWithType: MatcherExtensions.GetResultsInFullPath(Matcher, String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
    name: GetResultsInFullPath
    nameWithType: MatcherExtensions.GetResultsInFullPath
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
    name: GetResultsInFullPath
    nameWithType: MatcherExtensions.GetResultsInFullPath
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
  isExternal: true
  name: Match(Matcher, String)
  nameWithType: MatcherExtensions.Match(Matcher, String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
  isExternal: true
  name: Match(Matcher, String, String)
  nameWithType: MatcherExtensions.Match(Matcher, String, String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: Match(Matcher, IEnumerable<String>)
  nameWithType: MatcherExtensions.Match(Matcher, IEnumerable<String>)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: MatcherExtensions.Match(Matcher, IEnumerable(Of String))
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Match(Matcher, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: Match(Matcher, String, IEnumerable<String>)
  nameWithType: MatcherExtensions.Match(Matcher, String, IEnumerable<String>)
  fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.String, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: MatcherExtensions.Match(Matcher, String, IEnumerable(Of String))
  fullname.vb: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher, System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Match(Matcher, String, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})
    name: Match
    nameWithType: MatcherExtensions.Match
    fullName: Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
    name: Matcher
    nameWithType: Matcher
    fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileSystemGlobbing.Matcher
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Matcher
  parent: Microsoft.Extensions.FileSystemGlobbing
  isExternal: false
  name: Matcher
  nameWithType: Matcher
  fullName: Microsoft.Extensions.FileSystemGlobbing.Matcher
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: DirectoryInfoBase
  nameWithType: DirectoryInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
- uid: Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult
  parent: Microsoft.Extensions.FileSystemGlobbing
  isExternal: false
  name: PatternMatchingResult
  nameWithType: PatternMatchingResult
  fullName: Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  commentId: N:Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  nameWithType: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions
