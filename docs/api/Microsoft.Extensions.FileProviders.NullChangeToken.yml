### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.NullChangeToken
  commentId: T:Microsoft.Extensions.FileProviders.NullChangeToken
  id: NullChangeToken
  parent: Microsoft.Extensions.FileProviders
  children:
  - Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
  - Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
  - Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(Action{System.Object},System.Object)
  - Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
  langs:
  - csharp
  - vb
  name: NullChangeToken
  nameWithType: NullChangeToken
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: NullChangeToken
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nAn empty change token that doesn&apos;t raise any change callbacks\n"
  example: []
  syntax:
    content: 'public class NullChangeToken : IChangeToken'
    content.vb: >-
      Public Class NullChangeToken
          Inherits IChangeToken
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
  commentId: P:Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
  id: Singleton
  parent: Microsoft.Extensions.FileProviders.NullChangeToken
  langs:
  - csharp
  - vb
  name: Singleton
  nameWithType: NullChangeToken.Singleton
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Singleton
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public static NullChangeToken Singleton { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.FileProviders.NullChangeToken
    content.vb: Public Shared ReadOnly Property Singleton As NullChangeToken
  overload: Microsoft.Extensions.FileProviders.NullChangeToken.Singleton*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
  commentId: P:Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
  id: HasChanged
  parent: Microsoft.Extensions.FileProviders.NullChangeToken
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: NullChangeToken.HasChanged
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: HasChanged
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public bool HasChanged { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasChanged As Boolean
  overload: Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
  commentId: P:Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
  id: ActiveChangeCallbacks
  parent: Microsoft.Extensions.FileProviders.NullChangeToken
  langs:
  - csharp
  - vb
  name: ActiveChangeCallbacks
  nameWithType: NullChangeToken.ActiveChangeCallbacks
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: ActiveChangeCallbacks
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public bool ActiveChangeCallbacks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ActiveChangeCallbacks As Boolean
  overload: Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(Action{System.Object},System.Object)
  commentId: M:Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(Action{System.Object},System.Object)
  id: RegisterChangeCallback(Action{System.Object},System.Object)
  parent: Microsoft.Extensions.FileProviders.NullChangeToken
  langs:
  - csharp
  - vb
  name: RegisterChangeCallback(Action<Object>, Object)
  nameWithType: NullChangeToken.RegisterChangeCallback(Action<Object>, Object)
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(Action<System.Object>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: RegisterChangeCallback
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NullChangeToken.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public IDisposable RegisterChangeCallback(Action<object> callback, object state)
    parameters:
    - id: callback
      type: Action{System.Object}
    - id: state
      type: System.Object
    return:
      type: IDisposable
    content.vb: Public Function RegisterChangeCallback(callback As Action(Of Object), state As Object) As IDisposable
  overload: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback*
  nameWithType.vb: NullChangeToken.RegisterChangeCallback(Action(Of Object), Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(Action(Of System.Object), System.Object)
  name.vb: RegisterChangeCallback(Action(Of Object), Object)
references:
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.Singleton*
  commentId: Overload:Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
  isExternal: false
  name: Singleton
  nameWithType: NullChangeToken.Singleton
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.Singleton
- uid: Microsoft.Extensions.FileProviders.NullChangeToken
  commentId: T:Microsoft.Extensions.FileProviders.NullChangeToken
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: NullChangeToken
  nameWithType: NullChangeToken
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged*
  commentId: Overload:Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
  isExternal: false
  name: HasChanged
  nameWithType: NullChangeToken.HasChanged
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks*
  commentId: Overload:Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
  isExternal: false
  name: ActiveChangeCallbacks
  nameWithType: NullChangeToken.ActiveChangeCallbacks
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks
- uid: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback*
  commentId: Overload:Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback
  isExternal: false
  name: RegisterChangeCallback
  nameWithType: NullChangeToken.RegisterChangeCallback
  fullName: Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback
- uid: Action{System.Object}
  commentId: '!:Action{System.Object}'
  definition: Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
