### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1
  commentId: T:Microsoft.AspNetCore.Hosting.StartupBase`1
  id: StartupBase`1
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.StartupBase`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0})
  - Microsoft.AspNetCore.Hosting.StartupBase`1.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureContainer(`0)
  - Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.AspNetCore.Hosting.StartupBase`1.Microsoft#AspNetCore#Hosting#IStartup#ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: StartupBase<TContainerBuilder>
  nameWithType: StartupBase<TContainerBuilder>
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: StartupBase
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: 'public abstract class StartupBase<TContainerBuilder> : IStartup'
    content.vb: >-
      Public MustInherit Class StartupBase(Of TContainerBuilder)
          Implements IStartup
    typeParameters:
    - id: TContainerBuilder
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Hosting.IStartup
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StartupBase(Of TContainerBuilder)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder)
  name.vb: StartupBase(Of TContainerBuilder)
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0})
  commentId: M:Microsoft.AspNetCore.Hosting.StartupBase`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0})
  id: '#ctor(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0})'
  parent: Microsoft.AspNetCore.Hosting.StartupBase`1
  langs:
  - csharp
  - vb
  name: StartupBase(IServiceProviderFactory<TContainerBuilder>)
  nameWithType: StartupBase<TContainerBuilder>.StartupBase(IServiceProviderFactory<TContainerBuilder>)
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>.StartupBase(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: .ctor
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public StartupBase(IServiceProviderFactory<TContainerBuilder> factory)
    content.vb: Public Sub New(factory As IServiceProviderFactory(Of TContainerBuilder))
    parameters:
    - id: factory
      type: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{{TContainerBuilder}}
  nameWithType.vb: StartupBase(Of TContainerBuilder).StartupBase(IServiceProviderFactory(Of TContainerBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder).StartupBase(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder))
  name.vb: StartupBase(IServiceProviderFactory(Of TContainerBuilder))
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Hosting.StartupBase`1.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Microsoft.AspNetCore.Hosting.StartupBase`1
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder)
  nameWithType: StartupBase<TContainerBuilder>.Configure(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: Configure
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public abstract void Configure(IApplicationBuilder app)
    content.vb: Public MustOverride Sub Configure(app As IApplicationBuilder)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
  implements:
  - Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  nameWithType.vb: StartupBase(Of TContainerBuilder).Configure(IApplicationBuilder)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder).Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Hosting.StartupBase`1
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection)
  nameWithType: StartupBase<TContainerBuilder>.ConfigureServices(IServiceCollection)
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: ConfigureServices
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public virtual void ConfigureServices(IServiceCollection services)
    content.vb: Public Overridable Sub ConfigureServices(services As IServiceCollection)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  nameWithType.vb: StartupBase(Of TContainerBuilder).ConfigureServices(IServiceCollection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder).ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1.Microsoft#AspNetCore#Hosting#IStartup#ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.StartupBase`1.Microsoft#AspNetCore#Hosting#IStartup#ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: Microsoft#AspNetCore#Hosting#IStartup#ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isEii: true
  parent: Microsoft.AspNetCore.Hosting.StartupBase`1
  langs:
  - csharp
  - vb
  name: IStartup.ConfigureServices(IServiceCollection)
  nameWithType: StartupBase<TContainerBuilder>.IStartup.ConfigureServices(IServiceCollection)
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>.Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: IServiceProvider IStartup.ConfigureServices(IServiceCollection services)
    content.vb: Function Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(services As IServiceCollection) As IServiceProvider Implements IStartup.ConfigureServices
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: System.IServiceProvider
  implements:
  - Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: StartupBase(Of TContainerBuilder).Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(IServiceCollection)
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder).Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(IServiceCollection)
- uid: Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureContainer(`0)
  commentId: M:Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureContainer(`0)
  id: ConfigureContainer(`0)
  parent: Microsoft.AspNetCore.Hosting.StartupBase`1
  langs:
  - csharp
  - vb
  name: ConfigureContainer(TContainerBuilder)
  nameWithType: StartupBase<TContainerBuilder>.ConfigureContainer(TContainerBuilder)
  fullName: Microsoft.AspNetCore.Hosting.StartupBase<TContainerBuilder>.ConfigureContainer(TContainerBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
      branch: dev
      repo: https://github.com/aspnet/hosting
    id: ConfigureContainer
    path: src/Microsoft.AspNetCore.Hosting/Startup/StartupBase.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public virtual void ConfigureContainer(TContainerBuilder containerBuilder)
    content.vb: Public Overridable Sub ConfigureContainer(containerBuilder As TContainerBuilder)
    parameters:
    - id: containerBuilder
      type: '{TContainerBuilder}'
  nameWithType.vb: StartupBase(Of TContainerBuilder).ConfigureContainer(TContainerBuilder)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Hosting.StartupBase(Of TContainerBuilder).ConfigureContainer(TContainerBuilder)
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Hosting.IStartup
  commentId: T:Microsoft.AspNetCore.Hosting.IStartup
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IStartup
  nameWithType: IStartup
  fullName: Microsoft.AspNetCore.Hosting.IStartup
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{{TContainerBuilder}}
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0}
  parent: Microsoft.Extensions.DependencyInjection
  definition: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  name: IServiceProviderFactory<TContainerBuilder>
  nameWithType: IServiceProviderFactory<TContainerBuilder>
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder)
  name.vb: IServiceProviderFactory(Of TContainerBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  isExternal: false
  name: IServiceProviderFactory<TContainerBuilder>
  nameWithType: IServiceProviderFactory<TContainerBuilder>
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder)
  fullname.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder)
  name.vb: IServiceProviderFactory(Of TContainerBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
    name: IServiceProviderFactory
    nameWithType: IServiceProviderFactory
    fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContainerBuilder
    nameWithType: TContainerBuilder
    fullName: TContainerBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Microsoft.AspNetCore.Hosting.IStartup
  isExternal: true
  name: Configure(IApplicationBuilder)
  nameWithType: IStartup.Configure(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: Configure
    nameWithType: IStartup.Configure
    fullName: Microsoft.AspNetCore.Hosting.IStartup.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: Configure
    nameWithType: IStartup.Configure
    fullName: Microsoft.AspNetCore.Hosting.IStartup.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Hosting.IStartup
  isExternal: true
  name: ConfigureServices(IServiceCollection)
  nameWithType: IStartup.ConfigureServices(IServiceCollection)
  fullName: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: ConfigureServices
    nameWithType: IStartup.ConfigureServices
    fullName: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: ConfigureServices
    nameWithType: IStartup.ConfigureServices
    fullName: Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: '{TContainerBuilder}'
  commentId: '!:TContainerBuilder'
  definition: TContainerBuilder
  name: TContainerBuilder
  nameWithType: TContainerBuilder
  fullName: TContainerBuilder
- uid: TContainerBuilder
  isExternal: false
  name: TContainerBuilder
  nameWithType: TContainerBuilder
  fullName: TContainerBuilder
