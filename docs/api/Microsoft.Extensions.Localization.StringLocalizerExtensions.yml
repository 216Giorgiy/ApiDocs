### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions
  commentId: T:Microsoft.Extensions.Localization.StringLocalizerExtensions
  id: StringLocalizerExtensions
  parent: Microsoft.Extensions.Localization
  children:
  - Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  - Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  - Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: StringLocalizerExtensions
  nameWithType: StringLocalizerExtensions
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: StringLocalizerExtensions
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  syntax:
    content: 'public static class StringLocalizerExtensions : object'
    content.vb: >-
      Public Module StringLocalizerExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  id: GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  langs:
  - csharp
  - vb
  name: GetString(IStringLocalizer, String)
  nameWithType: StringLocalizerExtensions.GetString(IStringLocalizer, String)
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: GetString
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the string resource with the given name.\n"
  example: []
  syntax:
    content: public static LocalizedString GetString(this IStringLocalizer stringLocalizer, string name)
    parameters:
    - id: stringLocalizer
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <xref href="Microsoft.Extensions.Localization.IStringLocalizer" data-throw-if-not-resolved="false"></xref>.
    - id: name
      type: System.String
      description: The name of the string resource.
    return:
      type: Microsoft.Extensions.Localization.LocalizedString
      description: The string resource as a <xref href="Microsoft.Extensions.Localization.LocalizedString" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(stringLocalizer As IStringLocalizer, name As String) As LocalizedString
  overload: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  id: GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  langs:
  - csharp
  - vb
  name: GetString(IStringLocalizer, String, Object[])
  nameWithType: StringLocalizerExtensions.GetString(IStringLocalizer, String, Object[])
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: GetString
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the string resource with the given name and formatted with the supplied arguments.\n"
  example: []
  syntax:
    content: public static LocalizedString GetString(this IStringLocalizer stringLocalizer, string name, params object[] arguments)
    parameters:
    - id: stringLocalizer
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <xref href="Microsoft.Extensions.Localization.IStringLocalizer" data-throw-if-not-resolved="false"></xref>.
    - id: name
      type: System.String
      description: The name of the string resource.
    - id: arguments
      type: System.Object[]
      description: The values to format the string with.
    return:
      type: Microsoft.Extensions.Localization.LocalizedString
      description: The formatted string resource as a <xref href="Microsoft.Extensions.Localization.LocalizedString" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(stringLocalizer As IStringLocalizer, name As String, ParamArray arguments As Object()) As LocalizedString
  overload: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString*
  nameWithType.vb: StringLocalizerExtensions.GetString(IStringLocalizer, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String, System.Object())
  name.vb: GetString(IStringLocalizer, String, Object())
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  id: GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  langs:
  - csharp
  - vb
  name: GetAllStrings(IStringLocalizer)
  nameWithType: StringLocalizerExtensions.GetAllStrings(IStringLocalizer)
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: GetAllStrings
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/StringLocalizerExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets all string resources including those for parent cultures.\n"
  example: []
  syntax:
    content: public static IEnumerable<LocalizedString> GetAllStrings(this IStringLocalizer stringLocalizer)
    parameters:
    - id: stringLocalizer
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <xref href="Microsoft.Extensions.Localization.IStringLocalizer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: IEnumerable{Microsoft.Extensions.Localization.LocalizedString}
      description: The string resources.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllStrings(stringLocalizer As IStringLocalizer) As IEnumerable(Of LocalizedString)
  overload: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Localization.IStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizer
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: IStringLocalizer
  nameWithType: IStringLocalizer
  fullName: Microsoft.Extensions.Localization.IStringLocalizer
- uid: Microsoft.Extensions.Localization.LocalizedString
  commentId: T:Microsoft.Extensions.Localization.LocalizedString
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Microsoft.Extensions.Localization.LocalizedString
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString*
  commentId: Overload:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  isExternal: false
  name: GetString
  nameWithType: StringLocalizerExtensions.GetString
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings*
  commentId: Overload:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  isExternal: false
  name: GetAllStrings
  nameWithType: StringLocalizerExtensions.GetAllStrings
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
- uid: IEnumerable{Microsoft.Extensions.Localization.LocalizedString}
  commentId: '!:IEnumerable{Microsoft.Extensions.Localization.LocalizedString}'
  definition: IEnumerable`1
  name: IEnumerable<LocalizedString>
  nameWithType: IEnumerable<LocalizedString>
  fullName: IEnumerable<Microsoft.Extensions.Localization.LocalizedString>
  nameWithType.vb: IEnumerable(Of LocalizedString)
  fullName.vb: IEnumerable(Of Microsoft.Extensions.Localization.LocalizedString)
  name.vb: IEnumerable(Of LocalizedString)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Microsoft.Extensions.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Microsoft.Extensions.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
