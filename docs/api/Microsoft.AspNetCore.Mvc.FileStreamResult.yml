### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileStreamResult
  id: FileStreamResult
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,MediaTypeHeaderValue)
  - Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)
  - Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync(ActionContext)
  - Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
  langs:
  - csharp
  - vb
  name: FileStreamResult
  nameWithType: FileStreamResult
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileStreamResult
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRepresents an <xref href=\"Microsoft.AspNetCore.Mvc.ActionResult\" data-throw-if-not-resolved=\"false\"></xref> that when executed will\nwrite a file from a stream to the response.\n"
  example: []
  syntax:
    content: 'public class FileStreamResult : FileResult'
    content.vb: >-
      Public Class FileStreamResult
          Inherits FileResult
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionResult
  - Microsoft.AspNetCore.Mvc.FileResult
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.FileResult.ContentType
  - Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  - Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: Microsoft.AspNetCore.Mvc.FileStreamResult
  langs:
  - csharp
  - vb
  name: FileStreamResult(Stream, String)
  nameWithType: FileStreamResult.FileStreamResult(Stream, String)
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStreamResult(System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.FileStreamResult\" data-throw-if-not-resolved=\"false\"></xref> instance with\nthe provided <span class=\"paramref\">fileStream</span> and the\nprovided <span class=\"paramref\">contentType</span>.\n"
  example: []
  syntax:
    content: public FileStreamResult(Stream fileStream, string contentType)
    parameters:
    - id: fileStream
      type: System.IO.Stream
      description: The stream with the file.
    - id: contentType
      type: System.String
      description: The Content-Type header of the response.
    content.vb: Public Sub New(fileStream As Stream, contentType As String)
  overload: Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,MediaTypeHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,MediaTypeHeaderValue)
  id: '#ctor(System.IO.Stream,MediaTypeHeaderValue)'
  parent: Microsoft.AspNetCore.Mvc.FileStreamResult
  langs:
  - csharp
  - vb
  name: FileStreamResult(Stream, MediaTypeHeaderValue)
  nameWithType: FileStreamResult.FileStreamResult(Stream, MediaTypeHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStreamResult(System.IO.Stream, MediaTypeHeaderValue)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.FileStreamResult\" data-throw-if-not-resolved=\"false\"></xref> instance with\nthe provided <span class=\"paramref\">fileStream</span> and the\nprovided <span class=\"paramref\">contentType</span>.\n"
  example: []
  syntax:
    content: public FileStreamResult(Stream fileStream, MediaTypeHeaderValue contentType)
    parameters:
    - id: fileStream
      type: System.IO.Stream
      description: The stream with the file.
    - id: contentType
      type: MediaTypeHeaderValue
      description: The Content-Type header of the response.
    content.vb: Public Sub New(fileStream As Stream, contentType As MediaTypeHeaderValue)
  overload: Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
  commentId: P:Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
  id: FileStream
  parent: Microsoft.AspNetCore.Mvc.FileStreamResult
  langs:
  - csharp
  - vb
  name: FileStream
  nameWithType: FileStreamResult.FileStream
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileStream
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the stream with the file that will be sent back as the response.\n"
  example: []
  syntax:
    content: public Stream FileStream { get; set; }
    parameters: []
    return:
      type: System.IO.Stream
    content.vb: Public Property FileStream As Stream
  overload: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync(ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync(ActionContext)
  id: ExecuteResultAsync(ActionContext)
  parent: Microsoft.AspNetCore.Mvc.FileStreamResult
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: FileStreamResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync(ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileStreamResult.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nExecutes the result operation of the action method asynchronously. This method is called by MVC to process\nthe result of an action method.\nThe default implementation of this method calls the <xref href=\"Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)\" data-throw-if-not-resolved=\"false\"></xref> method and\nreturns a completed task.\n"
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    parameters:
    - id: context
      type: ActionContext
      description: >-
        The context in which the result is executed. The context information includes

        information about the action that was executed and request information.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous execute operation.
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
  overridden: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  overload: Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.ActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionResult
  nameWithType: ActionResult
  fullName: Microsoft.AspNetCore.Mvc.ActionResult
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.FileResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileResult
  nameWithType: FileResult
  fullName: Microsoft.AspNetCore.Mvc.FileResult
- uid: Microsoft.AspNetCore.Mvc.FileResult.ContentType
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.ContentType
  parent: Microsoft.AspNetCore.Mvc.FileResult
  isExternal: false
  name: ContentType
  nameWithType: FileResult.ContentType
  fullName: Microsoft.AspNetCore.Mvc.FileResult.ContentType
- uid: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  parent: Microsoft.AspNetCore.Mvc.FileResult
  isExternal: false
  name: FileDownloadName
  nameWithType: FileResult.FileDownloadName
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: true
  name: ExecuteResult(ActionContext)
  nameWithType: ActionResult.ExecuteResult(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileStreamResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileStreamResult
  nameWithType: FileStreamResult
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor
  isExternal: false
  name: FileStreamResult
  nameWithType: FileStreamResult.FileStreamResult
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStreamResult
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: MediaTypeHeaderValue
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: MediaTypeHeaderValue
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
  isExternal: false
  name: FileStream
  nameWithType: FileStreamResult.FileStream
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: true
  name: ExecuteResultAsync(ActionContext)
  nameWithType: ActionResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync
  isExternal: false
  name: ExecuteResultAsync
  nameWithType: FileStreamResult.ExecuteResultAsync
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
