### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  id: ViewComponentDescriptor
  parent: Microsoft.AspNetCore.Mvc.ViewComponents
  children:
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.#ctor
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.DisplayName
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Id
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Parameters
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.TypeInfo
  langs:
  - csharp
  - vb
  name: ViewComponentDescriptor
  nameWithType: ViewComponentDescriptor
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ViewComponentDescriptor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nA descriptor for a view component.\n"
  example: []
  syntax:
    content: public class ViewComponentDescriptor
    content.vb: Public Class ViewComponentDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: ViewComponentDescriptor()
  nameWithType: ViewComponentDescriptor.ViewComponentDescriptor()
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ViewComponentDescriptor()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nCreates a new <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor\"></see>.\n"
  example: []
  syntax:
    content: public ViewComponentDescriptor()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.DisplayName
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.DisplayName
  id: DisplayName
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ViewComponentDescriptor.DisplayName
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.DisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: DisplayName
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the display name of the view component.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName
  id: FullName
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: ViewComponentDescriptor.FullName
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: FullName
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the full name.\n"
  remarks: "\n<p>\nThe full name is defaulted to the full namespace of the view component class, prepended to\nthe the class name with a '.' character as the separator. If the view component class uses\n<pre><code>ViewComponent</code></pre> as a suffix, the suffix will be omitted from the <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName\"></see>.\n</p>\n<example>\n    Class Name: Contoso.Products.LoginViewComponent\n    View Component FullName: Contoso.Products.Login\n</example>\n<example>\n    Class Name: Contoso.Blog.Tags\n    View Component FullName: Contoso.Blog.Tags\n</example>\n<p>\nIf <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name\"></see> is used to set a name, then this will be used as\nthe <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName\"></see>.\n</p>\n<example>\n    [ViewComponent(Name = \"Contoso.Forum.UsersOnline\")]\n    public class OnlineUsersViewComponent\n    {\n    }\n    View Component FullName: Contoso.Forum.UsersOnline\n</example>\n"
  example: []
  syntax:
    content: public string FullName { get; set; }
    content.vb: Public Property FullName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Id
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Id
  id: Id
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ViewComponentDescriptor.Id
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Id
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or set the generated unique identifier for this <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor\"></see>.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName
  id: ShortName
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: ShortName
  nameWithType: ViewComponentDescriptor.ShortName
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ShortName
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the short name.\n"
  remarks: "\n<p>\nThe short name is defaulted to the name of the view component class. If the view component class uses\n<pre><code>ViewComponent</code></pre> as a suffix, the suffix will be omitted from the <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName\"></see>.\n</p>\n<example>\n    Class Name: Contoso.Products.LoginViewComponent\n    View Component ShortName: Login\n</example>\n<example>\n    Class Name: Contoso.Blog.Tags\n    View Component ShortName: Tags\n</example>\n<p>\nIf <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name\"></see> is used to set a name, then the last segment of the \nvalue (using '.' as a separate) will be used as the <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName\"></see>.\n</p>\n<example>\n    [ViewComponent(Name = \"Contoso.Forum.UsersOnline\")]\n    public class OnlineUsersViewComponent\n    {\n    }\n    View Component ShortName: UsersOnline\n</example>\n"
  example: []
  syntax:
    content: public string ShortName { get; set; }
    content.vb: Public Property ShortName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.TypeInfo
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.TypeInfo
  id: TypeInfo
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: TypeInfo
  nameWithType: ViewComponentDescriptor.TypeInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.TypeInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: TypeInfo
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 122
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the <see cref=\"T:System.Reflection.TypeInfo\"></see>.\n"
  example: []
  syntax:
    content: public TypeInfo TypeInfo { get; set; }
    content.vb: Public Property TypeInfo As TypeInfo
    parameters: []
    return:
      type: System.Reflection.TypeInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo
  id: MethodInfo
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: MethodInfo
  nameWithType: ViewComponentDescriptor.MethodInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: MethodInfo
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the <see cref=\"T:System.Reflection.MethodInfo\"></see> to invoke.\n"
  example: []
  syntax:
    content: public MethodInfo MethodInfo { get; set; }
    content.vb: Public Property MethodInfo As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Parameters
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Parameters
  id: Parameters
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: ViewComponentDescriptor.Parameters
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Parameters
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentDescriptor.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets or sets the parameters associated with the method described by <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo\"></see>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ParameterInfo> Parameters { get; set; }
    content.vb: Public Property Parameters As IReadOnlyList(Of ParameterInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.ParameterInfo}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ViewComponents
  commentId: N:Microsoft.AspNetCore.Mvc.ViewComponents
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewComponents
  nameWithType: Microsoft.AspNetCore.Mvc.ViewComponents
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.ParameterInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Reflection.ParameterInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ParameterInfo>
  nameWithType: IReadOnlyList<ParameterInfo>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.ParameterInfo>
  nameWithType.vb: IReadOnlyList(Of ParameterInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Reflection.ParameterInfo)
  name.vb: IReadOnlyList(Of ParameterInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
