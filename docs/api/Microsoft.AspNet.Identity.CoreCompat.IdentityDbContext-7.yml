### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  commentId: T:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  id: IdentityDbContext`7
  parent: Microsoft.AspNet.Identity.CoreCompat
  children:
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(DbCompiledModel)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,DbCompiledModel,System.Boolean)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,DbCompiledModel)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(DbModelBuilder)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  langs:
  - csharp
  - vb
  name: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityDbContext
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: 'public class IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim> : IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim> where TUser : IdentityUser<TKey, TUserLogin, TUserRole, TUserClaim> where TRole : IdentityRole<TKey, TUserRole> where TUserLogin : IdentityUserLogin<TKey> where TUserRole : IdentityUserRole<TKey> where TUserClaim : IdentityUserClaim<TKey> where TRoleClaim : IdentityRoleClaim<TKey>'
    typeParameters:
    - id: TUser
    - id: TRole
    - id: TKey
    - id: TUserLogin
    - id: TUserRole
    - id: TUserClaim
    - id: TRoleClaim
    content.vb: >-
      Public Class IdentityDbContext(Of TUser As IdentityUser(Of TKey, TUserLogin, TUserRole, TUserClaim), TRole As IdentityRole(Of TKey, TUserRole), TKey, TUserLogin As IdentityUserLogin(Of TKey), TUserRole As IdentityUserRole(Of TKey), TUserClaim As IdentityUserClaim(Of TKey), TRoleClaim As IdentityRoleClaim(Of TKey))
          Inherits IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`1
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
  name.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  id: '#ctor'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext()
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext()
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext()
    content.vb: Public Sub New
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext()
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(DbCompiledModel)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(DbCompiledModel)
  id: '#ctor(DbCompiledModel)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbCompiledModel)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbCompiledModel)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbCompiledModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbCompiledModel model)
    parameters:
    - id: model
      type: DbCompiledModel
    content.vb: Public Sub New(model As DbCompiledModel)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbCompiledModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbCompiledModel)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(String)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(String)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(string nameOrConnectionString)
    parameters:
    - id: nameOrConnectionString
      type: System.String
    content.vb: Public Sub New(nameOrConnectionString As String)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.String)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,DbCompiledModel)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,DbCompiledModel)
  id: '#ctor(System.String,DbCompiledModel)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(String, DbCompiledModel)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(String, DbCompiledModel)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.String, DbCompiledModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(string nameOrConnectionString, DbCompiledModel model)
    parameters:
    - id: nameOrConnectionString
      type: System.String
    - id: model
      type: DbCompiledModel
    content.vb: Public Sub New(nameOrConnectionString As String, model As DbCompiledModel)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(String, DbCompiledModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.String, DbCompiledModel)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  id: '#ctor(System.Data.Common.DbConnection,System.Boolean)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbConnection, Boolean)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbConnection, Boolean)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.Data.Common.DbConnection, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbConnection existingConnection, bool contextOwnsConnection)
    parameters:
    - id: existingConnection
      type: System.Data.Common.DbConnection
    - id: contextOwnsConnection
      type: System.Boolean
    content.vb: Public Sub New(existingConnection As DbConnection, contextOwnsConnection As Boolean)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbConnection, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.Data.Common.DbConnection, System.Boolean)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,DbCompiledModel,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,DbCompiledModel,System.Boolean)
  id: '#ctor(System.Data.Common.DbConnection,DbCompiledModel,System.Boolean)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.Data.Common.DbConnection, DbCompiledModel, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbConnection existingConnection, DbCompiledModel model, bool contextOwnsConnection)
    parameters:
    - id: existingConnection
      type: System.Data.Common.DbConnection
    - id: model
      type: DbCompiledModel
    - id: contextOwnsConnection
      type: System.Boolean
    content.vb: Public Sub New(existingConnection As DbConnection, model As DbCompiledModel, contextOwnsConnection As Boolean)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.Data.Common.DbConnection, DbCompiledModel, System.Boolean)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(DbModelBuilder)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(DbModelBuilder)
  id: OnModelCreating(DbModelBuilder)
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: OnModelCreating(DbModelBuilder)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating(DbModelBuilder)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating(DbModelBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: OnModelCreating
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: protected override void OnModelCreating(DbModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: DbModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating(DbModelBuilder)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating(DbModelBuilder)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: ValidateEntity(DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity(DbEntityEntry, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ValidateEntity
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: protected override DbEntityValidationResult ValidateEntity(DbEntityEntry entityEntry, IDictionary<object, object> items)
    parameters:
    - id: entityEntry
      type: DbEntityEntry
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    return:
      type: DbEntityValidationResult
    content.vb: Protected Overrides Function ValidateEntity(entityEntry As DbEntityEntry, items As IDictionary(Of Object, Object)) As DbEntityValidationResult
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity(DbEntityEntry, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  id: RoleClaims
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: RoleClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleClaims
    path: ../aspnet/Identity/src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public virtual IDbSet<TRoleClaim> RoleClaims { get; set; }
    parameters: []
    return:
      type: IDbSet{{TRoleClaim}}
    content.vb: Public Overridable Property RoleClaims As IDbSet(Of TRoleClaim)
  overload: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
references:
- uid: Microsoft.AspNet.Identity.CoreCompat
  commentId: N:Microsoft.AspNet.Identity.CoreCompat
  isExternal: false
  name: Microsoft.AspNet.Identity.CoreCompat
  nameWithType: Microsoft.AspNet.Identity.CoreCompat
  fullName: Microsoft.AspNet.Identity.CoreCompat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor*
  commentId: Overload:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  isExternal: false
  name: IdentityDbContext
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext
- uid: DbCompiledModel
  isExternal: true
  name: DbCompiledModel
  nameWithType: DbCompiledModel
  fullName: DbCompiledModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating*
  commentId: Overload:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating
  isExternal: false
  name: OnModelCreating
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating
- uid: DbModelBuilder
  commentId: '!:DbModelBuilder'
  isExternal: true
  name: DbModelBuilder
  nameWithType: DbModelBuilder
  fullName: DbModelBuilder
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity*
  commentId: Overload:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity
  isExternal: false
  name: ValidateEntity
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity
- uid: DbEntityEntry
  commentId: '!:DbEntityEntry'
  isExternal: true
  name: DbEntityEntry
  nameWithType: DbEntityEntry
  fullName: DbEntityEntry
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DbEntityValidationResult
  commentId: '!:DbEntityValidationResult'
  isExternal: true
  name: DbEntityValidationResult
  nameWithType: DbEntityValidationResult
  fullName: DbEntityValidationResult
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims*
  commentId: Overload:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  isExternal: false
  name: RoleClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
- uid: IDbSet{{TRoleClaim}}
  commentId: '!:IDbSet{`6}'
  definition: IDbSet`1
  name: IDbSet<TRoleClaim>
  nameWithType: IDbSet<TRoleClaim>
  fullName: IDbSet<TRoleClaim>
  nameWithType.vb: IDbSet(Of TRoleClaim)
  fullName.vb: IDbSet(Of TRoleClaim)
  name.vb: IDbSet(Of TRoleClaim)
  spec.csharp:
  - uid: IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: IDbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: IDbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: IDbSet`1
  commentId: '!:IDbSet`1'
  isExternal: true
  name: IDbSet<>
  nameWithType: IDbSet<>
  fullName: IDbSet<>
  nameWithType.vb: IDbSet(Of )
  fullName.vb: IDbSet(Of )
  name.vb: IDbSet(Of )
  spec.csharp:
  - uid: IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: IDbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: IDbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
