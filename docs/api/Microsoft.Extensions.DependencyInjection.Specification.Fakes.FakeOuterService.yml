### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  id: FakeOuterService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService})
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
  langs:
  - csharp
  - vb
  name: FakeOuterService
  nameWithType: FakeOuterService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: FakeOuterService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class FakeOuterService : object, IFakeOuterService'
    content.vb: >-
      Public Class FakeOuterService
          Inherits Object
          Implements IFakeOuterService
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService})
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService})
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService})'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  langs:
  - csharp
  - vb
  name: FakeOuterService(IFakeService, IEnumerable<IFakeMultipleService>)
  nameWithType: FakeOuterService.FakeOuterService(IFakeService, IEnumerable<IFakeMultipleService>)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.FakeOuterService(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, IEnumerable<Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public FakeOuterService(IFakeService singleService, IEnumerable<IFakeMultipleService> multipleServices)
    parameters:
    - id: singleService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: multipleServices
      type: IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService}
    content.vb: Public Sub New(singleService As IFakeService, multipleServices As IEnumerable(Of IFakeMultipleService))
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor*
  nameWithType.vb: FakeOuterService.FakeOuterService(IFakeService, IEnumerable(Of IFakeMultipleService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.FakeOuterService(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, IEnumerable(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService))
  name.vb: FakeOuterService(IFakeService, IEnumerable(Of IFakeMultipleService))
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
  id: SingleService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  langs:
  - csharp
  - vb
  name: SingleService
  nameWithType: FakeOuterService.SingleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: SingleService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeService SingleService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    content.vb: Public ReadOnly Property SingleService As IFakeService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService*
  implements:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.SingleService
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
  id: MultipleServices
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService
  langs:
  - csharp
  - vb
  name: MultipleServices
  nameWithType: FakeOuterService.MultipleServices
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: MultipleServices
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeOuterService.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IEnumerable<IFakeMultipleService> MultipleServices { get; }
    parameters: []
    return:
      type: IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService}
    content.vb: Public ReadOnly Property MultipleServices As IEnumerable(Of IFakeMultipleService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices*
  implements:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.MultipleServices
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeOuterService
  nameWithType: IFakeOuterService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor
  isExternal: false
  name: FakeOuterService
  nameWithType: FakeOuterService.FakeOuterService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.FakeOuterService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
- uid: IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService}
  commentId: '!:IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService}'
  definition: IEnumerable`1
  name: IEnumerable<IFakeMultipleService>
  nameWithType: IEnumerable<IFakeMultipleService>
  fullName: IEnumerable<Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService>
  nameWithType.vb: IEnumerable(Of IFakeMultipleService)
  fullName.vb: IEnumerable(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService)
  name.vb: IEnumerable(Of IFakeMultipleService)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
    name: IFakeMultipleService
    nameWithType: IFakeMultipleService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
    name: IFakeMultipleService
    nameWithType: IFakeMultipleService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
  isExternal: false
  name: SingleService
  nameWithType: FakeOuterService.SingleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.SingleService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.SingleService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
  isExternal: false
  name: SingleService
  nameWithType: IFakeOuterService.SingleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.SingleService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
  isExternal: false
  name: MultipleServices
  nameWithType: FakeOuterService.MultipleServices
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.MultipleServices
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.MultipleServices
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService
  isExternal: false
  name: MultipleServices
  nameWithType: IFakeOuterService.MultipleServices
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.MultipleServices
shouldSkipMarkup: true
