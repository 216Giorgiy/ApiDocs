### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.JsonPatchExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.JsonPatchExtensions
  id: JsonPatchExtensions
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary,System.String)
  langs:
  - csharp
  - vb
  name: JsonPatchExtensions
  nameWithType: JsonPatchExtensions
  fullName: Microsoft.AspNetCore.Mvc.JsonPatchExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: JsonPatchExtensions
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nExtensions for <see cref=\"!:JsonPatchDocument&lt;T>\"></see>\n"
  example: []
  syntax:
    content: public static class JsonPatchExtensions
    content.vb: Public Module JsonPatchExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary)
  id: ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.JsonPatchExtensions
  langs:
  - csharp
  - vb
  name: ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary)
  nameWithType: JsonPatchExtensions.ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApplyTo
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nApplies JSON patch operations on object and logs errors in <see cref=\"!:ModelStateDictionary\"></see>.\n"
  example: []
  syntax:
    content: 'public static void ApplyTo<T>(this JsonPatchDocument<T> patchDoc, T objectToApplyTo, ModelStateDictionary modelState)where T : class'
    parameters:
    - id: patchDoc
      type: JsonPatchDocument{{T}}
      description: The <see cref="!:JsonPatchDocument&lt;T>"></see>.
    - id: objectToApplyTo
      type: '{T}'
      description: The entity on which <see cref="!:JsonPatchDocument&lt;T>"></see> is applied.
    - id: modelState
      type: ModelStateDictionary
      description: The <see cref="!:ModelStateDictionary"></see> to add errors.
    typeParameters:
    - id: T
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ApplyTo(Of T As Class)(patchDoc As JsonPatchDocument(Of T), objectToApplyTo As T, modelState As ModelStateDictionary)
  overload: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo*
  nameWithType.vb: JsonPatchExtensions.ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary)
  name.vb: ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary)
- uid: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary,System.String)
  id: ApplyTo``1(JsonPatchDocument{``0},``0,ModelStateDictionary,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.JsonPatchExtensions
  langs:
  - csharp
  - vb
  name: ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary, String)
  nameWithType: JsonPatchExtensions.ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary, String)
  fullName: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo<T>(JsonPatchDocument<T>, T, ModelStateDictionary, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApplyTo
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonPatchExtensions.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nApplies JSON patch operations on object and logs errors in <see cref=\"!:ModelStateDictionary\"></see>.\n"
  example: []
  syntax:
    content: 'public static void ApplyTo<T>(this JsonPatchDocument<T> patchDoc, T objectToApplyTo, ModelStateDictionary modelState, string prefix)where T : class'
    parameters:
    - id: patchDoc
      type: JsonPatchDocument{{T}}
      description: The <see cref="!:JsonPatchDocument&lt;T>"></see>.
    - id: objectToApplyTo
      type: '{T}'
      description: The entity on which <see cref="!:JsonPatchDocument&lt;T>"></see> is applied.
    - id: modelState
      type: ModelStateDictionary
      description: The <see cref="!:ModelStateDictionary"></see> to add errors.
    - id: prefix
      type: System.String
      description: The prefix to use when looking up values in <see cref="!:ModelStateDictionary"></see>.
    typeParameters:
    - id: T
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ApplyTo(Of T As Class)(patchDoc As JsonPatchDocument(Of T), objectToApplyTo As T, modelState As ModelStateDictionary, prefix As String)
  overload: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo*
  nameWithType.vb: JsonPatchExtensions.ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary, System.String)
  name.vb: ApplyTo(Of T)(JsonPatchDocument(Of T), T, ModelStateDictionary, String)
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo*
  commentId: Overload:Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo
  isExternal: false
  name: ApplyTo
  nameWithType: JsonPatchExtensions.ApplyTo
  fullName: Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo
- uid: JsonPatchDocument{{T}}
  commentId: '!:JsonPatchDocument{``0}'
  definition: JsonPatchDocument`1
  name: JsonPatchDocument<T>
  nameWithType: JsonPatchDocument<T>
  fullName: JsonPatchDocument<T>
  nameWithType.vb: JsonPatchDocument(Of T)
  fullName.vb: JsonPatchDocument(Of T)
  name.vb: JsonPatchDocument(Of T)
  spec.csharp:
  - uid: JsonPatchDocument`1
    name: JsonPatchDocument
    nameWithType: JsonPatchDocument
    fullName: JsonPatchDocument
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JsonPatchDocument`1
    name: JsonPatchDocument
    nameWithType: JsonPatchDocument
    fullName: JsonPatchDocument
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: ModelStateDictionary
  isExternal: true
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: ModelStateDictionary
- uid: JsonPatchDocument`1
  isExternal: true
  name: JsonPatchDocument<>
  nameWithType: JsonPatchDocument<>
  fullName: JsonPatchDocument<>
  nameWithType.vb: JsonPatchDocument(Of )
  fullName.vb: JsonPatchDocument(Of )
  name.vb: JsonPatchDocument(Of )
  spec.csharp:
  - uid: JsonPatchDocument`1
    name: JsonPatchDocument
    nameWithType: JsonPatchDocument
    fullName: JsonPatchDocument
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JsonPatchDocument`1
    name: JsonPatchDocument
    nameWithType: JsonPatchDocument
    fullName: JsonPatchDocument
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
