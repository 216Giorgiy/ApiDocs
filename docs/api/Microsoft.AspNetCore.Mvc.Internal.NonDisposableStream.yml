### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  id: NonDisposableStream
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor(System.IO.Stream)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose(System.Boolean)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead(System.IAsyncResult)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite(System.IAsyncResult)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read(System.Byte[],System.Int32,System.Int32)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek(System.Int64,System.IO.SeekOrigin)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength(System.Int64)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write(System.Byte[],System.Int32,System.Int32)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte(System.Byte)
  - Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
  langs:
  - csharp
  - vb
  name: NonDisposableStream
  nameWithType: NonDisposableStream
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NonDisposableStream
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nStream that delegates to an inner stream.\nThis Stream is present so that the inner stream is not closed\neven when Close() or Dispose() is called.\n"
  example: []
  syntax:
    content: 'public class NonDisposableStream : Stream, IDisposable'
    content.vb: >-
      Public Class NonDisposableStream
          Inherits Stream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.ObjectInvariant
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
  - System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor(System.IO.Stream)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: NonDisposableStream(Stream)
  nameWithType: NonDisposableStream.NonDisposableStream(Stream)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.NonDisposableStream(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NonDisposableStream(Stream innerStream)
    content.vb: Public Sub New(innerStream As Stream)
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: The stream which should not be closed or flushed.
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
  id: InnerStream
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: InnerStream
  nameWithType: NonDisposableStream.InnerStream
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InnerStream
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nThe inner stream this object delegates to.\n"
  example: []
  syntax:
    content: protected Stream InnerStream { get; }
    content.vb: Protected ReadOnly Property InnerStream As Stream
    parameters: []
    return:
      type: System.IO.Stream
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
  id: CanRead
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: NonDisposableStream.CanRead
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanRead
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanRead
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
  id: CanSeek
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: NonDisposableStream.CanSeek
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanSeek
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanSeek
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
  id: CanWrite
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: NonDisposableStream.CanWrite
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanWrite
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanWrite
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
  id: Length
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: NonDisposableStream.Length
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Length
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  overridden: System.IO.Stream.Length
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
  id: Position
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: NonDisposableStream.Position
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Position
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
  overridden: System.IO.Stream.Position
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
  id: ReadTimeout
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: ReadTimeout
  nameWithType: NonDisposableStream.ReadTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadTimeout
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override int ReadTimeout { get; set; }
    content.vb: Public Overrides Property ReadTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.IO.Stream.ReadTimeout
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
  id: CanTimeout
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: CanTimeout
  nameWithType: NonDisposableStream.CanTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanTimeout
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override bool CanTimeout { get; }
    content.vb: Public Overrides ReadOnly Property CanTimeout As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanTimeout
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
  id: WriteTimeout
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: WriteTimeout
  nameWithType: NonDisposableStream.WriteTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteTimeout
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override int WriteTimeout { get; set; }
    content.vb: Public Overrides Property WriteTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.IO.Stream.WriteTimeout
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: NonDisposableStream.Seek(Int64, SeekOrigin)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Seek
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: System.IO.SeekOrigin
    return:
      type: System.Int64
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: NonDisposableStream.Read(Byte[], Int32, Int32)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Read
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read*
  nameWithType.vb: NonDisposableStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: NonDisposableStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync*
  nameWithType.vb: NonDisposableStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: NonDisposableStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeginRead
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginRead(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  overridden: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead*
  nameWithType.vb: NonDisposableStream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead(System.IAsyncResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: EndRead(IAsyncResult)
  nameWithType: NonDisposableStream.EndRead(IAsyncResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: EndRead
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 122
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override int EndRead(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndRead(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
    return:
      type: System.Int32
  overridden: System.IO.Stream.EndRead(System.IAsyncResult)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte
  id: ReadByte
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: NonDisposableStream.ReadByte()
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadByte
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override int ReadByte()
    content.vb: Public Overrides Function ReadByte As Integer
    return:
      type: System.Int32
  overridden: System.IO.Stream.ReadByte
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush
  id: Flush
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: NonDisposableStream.Flush()
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Flush
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.Stream.Flush
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  id: CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: NonDisposableStream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CopyToAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
    content.vb: Public Overrides Function CopyToAsync(destination As Stream, bufferSize As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: destination
      type: System.IO.Stream
    - id: bufferSize
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: FlushAsync(CancellationToken)
  nameWithType: NonDisposableStream.FlushAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FlushAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override Task FlushAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength(System.Int64)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: NonDisposableStream.SetLength(Int64)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SetLength
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 152
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
  overridden: System.IO.Stream.SetLength(System.Int64)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: NonDisposableStream.Write(Byte[], Int32, Int32)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Write
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 158
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write*
  nameWithType.vb: NonDisposableStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: NonDisposableStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync*
  nameWithType.vb: NonDisposableStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: NonDisposableStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeginWrite
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginWrite(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  overridden: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite*
  nameWithType.vb: NonDisposableStream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite(System.IAsyncResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: EndWrite(IAsyncResult)
  nameWithType: NonDisposableStream.EndWrite(IAsyncResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: EndWrite
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 181
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void EndWrite(IAsyncResult asyncResult)
    content.vb: Public Overrides Sub EndWrite(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
  overridden: System.IO.Stream.EndWrite(System.IAsyncResult)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte(System.Byte)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: WriteByte(Byte)
  nameWithType: NonDisposableStream.WriteByte(Byte)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte(System.Byte)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteByte
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void WriteByte(byte value)
    content.vb: Public Overrides Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
  overridden: System.IO.Stream.WriteByte(System.Byte)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close
  id: Close
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: NonDisposableStream.Close()
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Close
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 193
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  overridden: System.IO.Stream.Close
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: NonDisposableStream.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/NonDisposableStream.cs
    startLine: 198
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.IO.Stream.Dispose(System.Boolean)
  overload: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: Null
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.FlushAsync
  commentId: M:System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  commentId: M:System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ObjectInvariant
  commentId: M:System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  definition: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  name: DrainAsync(CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  definition: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  name: DrainAsync(Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable<System.Int64>, System.Threading.CancellationToken)
  nameWithType.vb: StreamHelperExtensions.DrainAsync(Nullable(Of Int64), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  definition: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  name: DrainAsync(ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool<System.Byte>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  nameWithType.vb: StreamHelperExtensions.DrainAsync(ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool(Of System.Byte), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  isExternal: true
  name: DrainAsync(Stream, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  commentId: T:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  parent: Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: StreamHelperExtensions
  nameWithType: StreamHelperExtensions
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExternal: true
  name: DrainAsync(Stream, Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  nameWithType.vb: StreamHelperExtensions.DrainAsync(Stream, Nullable(Of Int64), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(Stream, Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExternal: true
  name: DrainAsync(Stream, ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Buffers.ArrayPool<System.Byte>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  nameWithType.vb: StreamHelperExtensions.DrainAsync(Stream, ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Buffers.ArrayPool(Of System.Byte), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(Stream, ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DrainAsync
    nameWithType: StreamHelperExtensions.DrainAsync
    fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
  isExternal: false
  name: NonDisposableStream
  nameWithType: NonDisposableStream
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.#ctor
  isExternal: false
  name: NonDisposableStream
  nameWithType: NonDisposableStream.NonDisposableStream
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.NonDisposableStream
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
  isExternal: false
  name: InnerStream
  nameWithType: NonDisposableStream.InnerStream
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.InnerStream
- uid: System.IO.Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  name: CanRead
  nameWithType: Stream.CanRead
  fullName: System.IO.Stream.CanRead
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
  isExternal: false
  name: CanRead
  nameWithType: NonDisposableStream.CanRead
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: NonDisposableStream.CanSeek
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanSeek
- uid: System.IO.Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  name: CanWrite
  nameWithType: Stream.CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
  isExternal: false
  name: CanWrite
  nameWithType: NonDisposableStream.CanWrite
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanWrite
- uid: System.IO.Stream.Length
  commentId: P:System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  name: Length
  nameWithType: Stream.Length
  fullName: System.IO.Stream.Length
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
  isExternal: false
  name: Length
  nameWithType: NonDisposableStream.Length
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Stream.Position
  commentId: P:System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  name: Position
  nameWithType: Stream.Position
  fullName: System.IO.Stream.Position
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
  isExternal: false
  name: Position
  nameWithType: NonDisposableStream.Position
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Position
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
  isExternal: false
  name: ReadTimeout
  nameWithType: NonDisposableStream.ReadTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
  isExternal: false
  name: CanTimeout
  nameWithType: NonDisposableStream.CanTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CanTimeout
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
  isExternal: false
  name: WriteTimeout
  nameWithType: NonDisposableStream.WriteTimeout
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteTimeout
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: Stream.Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek
  isExternal: false
  name: Seek
  nameWithType: NonDisposableStream.Seek
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Seek
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: Stream.Read(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read
  isExternal: false
  name: Read
  nameWithType: NonDisposableStream.Read
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Read
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync
  isExternal: false
  name: ReadAsync
  nameWithType: NonDisposableStream.ReadAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead
  isExternal: false
  name: BeginRead
  nameWithType: NonDisposableStream.BeginRead
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginRead
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead
  isExternal: false
  name: EndRead
  nameWithType: NonDisposableStream.EndRead
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndRead
- uid: System.IO.Stream.ReadByte
  commentId: M:System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: true
  name: ReadByte()
  nameWithType: Stream.ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte
  isExternal: false
  name: ReadByte
  nameWithType: NonDisposableStream.ReadByte
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.ReadByte
- uid: System.IO.Stream.Flush
  commentId: M:System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  name: Flush()
  nameWithType: Stream.Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush
  isExternal: false
  name: Flush
  nameWithType: NonDisposableStream.Flush
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Flush
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync
  isExternal: false
  name: CopyToAsync
  nameWithType: NonDisposableStream.CopyToAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.CopyToAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync
  isExternal: false
  name: FlushAsync
  nameWithType: NonDisposableStream.FlushAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.FlushAsync
- uid: System.IO.Stream.SetLength(System.Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: Stream.SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength
  isExternal: false
  name: SetLength
  nameWithType: NonDisposableStream.SetLength
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.SetLength
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: Stream.Write(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write
  isExternal: false
  name: Write
  nameWithType: NonDisposableStream.Write
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Write
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync
  isExternal: false
  name: WriteAsync
  nameWithType: NonDisposableStream.WriteAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteAsync
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite
  isExternal: false
  name: BeginWrite
  nameWithType: NonDisposableStream.BeginWrite
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.BeginWrite
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite
  isExternal: false
  name: EndWrite
  nameWithType: NonDisposableStream.EndWrite
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.EndWrite
- uid: System.IO.Stream.WriteByte(System.Byte)
  commentId: M:System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: Stream.WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte
  isExternal: false
  name: WriteByte
  nameWithType: NonDisposableStream.WriteByte
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.WriteByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close
  isExternal: false
  name: Close
  nameWithType: NonDisposableStream.Close
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Close
- uid: System.IO.Stream.Dispose(System.Boolean)
  commentId: M:System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Stream.Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose
  isExternal: false
  name: Dispose
  nameWithType: NonDisposableStream.Dispose
  fullName: Microsoft.AspNetCore.Mvc.Internal.NonDisposableStream.Dispose
shouldSkipMarkup: true
