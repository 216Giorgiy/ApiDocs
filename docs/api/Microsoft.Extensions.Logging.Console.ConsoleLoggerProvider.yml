### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  commentId: T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  id: ConsoleLoggerProvider
  parent: Microsoft.Extensions.Logging.Console
  children:
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(System.Func{System.String,System.LogLevel,System.Boolean},System.Boolean)
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose
  langs:
  - csharp
  - vb
  name: ConsoleLoggerProvider
  nameWithType: ConsoleLoggerProvider
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ConsoleLoggerProvider
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: 'public class ConsoleLoggerProvider : ILoggerProvider'
    content.vb: >-
      Public Class ConsoleLoggerProvider
          Inherits ILoggerProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(System.Func{System.String,System.LogLevel,System.Boolean},System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(System.Func{System.String,System.LogLevel,System.Boolean},System.Boolean)
  id: '#ctor(System.Func{System.String,System.LogLevel,System.Boolean},System.Boolean)'
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  langs:
  - csharp
  - vb
  name: ConsoleLoggerProvider(Func<String, LogLevel, Boolean>, Boolean)
  nameWithType: ConsoleLoggerProvider.ConsoleLoggerProvider(Func<String, LogLevel, Boolean>, Boolean)
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.ConsoleLoggerProvider(System.Func<System.String, System.LogLevel, System.Boolean>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public ConsoleLoggerProvider(Func<string, LogLevel, bool> filter, bool includeScopes)
    parameters:
    - id: filter
      type: System.Func{System.String,System.LogLevel,System.Boolean}
    - id: includeScopes
      type: System.Boolean
    content.vb: Public Sub New(filter As Func(Of String, LogLevel, Boolean), includeScopes As Boolean)
  overload: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor*
  nameWithType.vb: ConsoleLoggerProvider.ConsoleLoggerProvider(Func(Of String, LogLevel, Boolean), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.ConsoleLoggerProvider(System.Func(Of System.String, System.LogLevel, System.Boolean), System.Boolean)
  name.vb: ConsoleLoggerProvider(Func(Of String, LogLevel, Boolean), Boolean)
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  id: '#ctor(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)'
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  langs:
  - csharp
  - vb
  name: ConsoleLoggerProvider(IConsoleLoggerSettings)
  nameWithType: ConsoleLoggerProvider.ConsoleLoggerProvider(IConsoleLoggerSettings)
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.ConsoleLoggerProvider(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public ConsoleLoggerProvider(IConsoleLoggerSettings settings)
    parameters:
    - id: settings
      type: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    content.vb: Public Sub New(settings As IConsoleLoggerSettings)
  overload: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: ConsoleLoggerProvider.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
    startLine: 64
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public ILogger CreateLogger(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(name As String) As ILogger
  overload: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ConsoleLoggerProvider.Dispose()
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Dispose
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConsoleLoggerProvider.cs
    startLine: 111
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.Console
  commentId: N:Microsoft.Extensions.Logging.Console
  isExternal: false
  name: Microsoft.Extensions.Logging.Console
  nameWithType: Microsoft.Extensions.Logging.Console
  fullName: Microsoft.Extensions.Logging.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor
  isExternal: false
  name: ConsoleLoggerProvider
  nameWithType: ConsoleLoggerProvider.ConsoleLoggerProvider
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.ConsoleLoggerProvider
- uid: System.Func{System.String,System.LogLevel,System.Boolean}
  commentId: T:System.Func{System.String,System.LogLevel,System.Boolean}
  parent: System
  definition: System.Func`3
  name: Func<String, LogLevel, Boolean>
  nameWithType: Func<String, LogLevel, Boolean>
  fullName: System.Func<System.String, System.LogLevel, System.Boolean>
  nameWithType.vb: Func(Of String, LogLevel, Boolean)
  fullName.vb: System.Func(Of System.String, System.LogLevel, System.Boolean)
  name.vb: Func(Of String, LogLevel, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: System.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: System.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  parent: Microsoft.Extensions.Logging.Console
  isExternal: false
  name: IConsoleLoggerSettings
  nameWithType: IConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: ConsoleLoggerProvider.CreateLogger
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ConsoleLoggerProvider.Dispose
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose
shouldSkipMarkup: true
