### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions
  commentId: T:Microsoft.AspNetCore.Builder.JwtBearerOptions
  id: JwtBearerOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  langs:
  - csharp
  - vb
  name: JwtBearerOptions
  nameWithType: JwtBearerOptions
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: JwtBearerOptions
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nOptions class provides information needed to control Bearer Authentication middleware behavior\n"
  example: []
  syntax:
    content: 'public class JwtBearerOptions : AuthenticationOptions'
    content.vb: >-
      Public Class JwtBearerOptions
          Inherits AuthenticationOptions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: JwtBearerOptions()
  nameWithType: JwtBearerOptions.JwtBearerOptions()
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.JwtBearerOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nCreates an instance of bearer authentication options with default values.\n"
  example: []
  syntax:
    content: public JwtBearerOptions()
    content.vb: Public Sub New
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  id: RequireHttpsMetadata
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: RequireHttpsMetadata
  nameWithType: JwtBearerOptions.RequireHttpsMetadata
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireHttpsMetadata
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if HTTPS is required for the metadata address or authority.\nThe default is true. This should be disabled only in development environments.\n"
  example: []
  syntax:
    content: public bool RequireHttpsMetadata { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireHttpsMetadata As Boolean
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  id: MetadataAddress
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: MetadataAddress
  nameWithType: JwtBearerOptions.MetadataAddress
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: MetadataAddress
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the discovery endpoint for obtaining metadata\n"
  example: []
  syntax:
    content: public string MetadataAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MetadataAddress As String
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  id: Authority
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Authority
  nameWithType: JwtBearerOptions.Authority
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Authority
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the Authority to use when making OpenIdConnect calls.\n"
  example: []
  syntax:
    content: public string Authority { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Authority As String
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  id: Audience
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: JwtBearerOptions.Audience
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Audience
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the audience for any received OpenIdConnect token.\n"
  example: []
  syntax:
    content: public string Audience { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe expected audience for any received OpenIdConnect token.\n"
    content.vb: Public Property Audience As String
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  id: Challenge
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Challenge
  nameWithType: JwtBearerOptions.Challenge
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Challenge
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the challenge to put in the \"WWW-Authenticate\" header.\n"
  example: []
  syntax:
    content: public string Challenge { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Challenge As String
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  id: Events
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: JwtBearerOptions.Events
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Events
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe object provided by the application to process events raised by the bearer authentication middleware.\nThe application may implement the interface fully, or it may create an instance of JwtBearerAuthenticationEvents\nand assign delegates only to the events it wants to process.\n"
  example: []
  syntax:
    content: public IJwtBearerEvents Events { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
    content.vb: Public Property Events As IJwtBearerEvents
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  id: BackchannelHttpHandler
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: BackchannelHttpHandler
  nameWithType: JwtBearerOptions.BackchannelHttpHandler
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BackchannelHttpHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe HttpMessageHandler used to retrieve metadata.\nThis cannot be set at the same time as BackchannelCertificateValidator unless the value\nis a WebRequestHandler.\n"
  example: []
  syntax:
    content: public HttpMessageHandler BackchannelHttpHandler { get; set; }
    parameters: []
    return:
      type: HttpMessageHandler
    content.vb: Public Property BackchannelHttpHandler As HttpMessageHandler
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  id: BackchannelTimeout
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: BackchannelTimeout
  nameWithType: JwtBearerOptions.BackchannelTimeout
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BackchannelTimeout
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the timeout when using the backchannel to make an http call.\n"
  example: []
  syntax:
    content: public TimeSpan BackchannelTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property BackchannelTimeout As TimeSpan
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  id: Configuration
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: JwtBearerOptions.Configuration
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Configuration
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nConfiguration provided directly by the developer. If provided, then MetadataAddress and the Backchannel properties\nwill not be used. This information should not be updated during request processing.\n"
  example: []
  syntax:
    content: public OpenIdConnectConfiguration Configuration { get; set; }
    parameters: []
    return:
      type: OpenIdConnectConfiguration
    content.vb: Public Property Configuration As OpenIdConnectConfiguration
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  id: ConfigurationManager
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: JwtBearerOptions.ConfigurationManager
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ConfigurationManager
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nResponsible for retrieving, caching, and refreshing the configuration from metadata.\nIf not provided, then one will be created using the MetadataAddress and Backchannel properties.\n"
  example: []
  syntax:
    content: public IConfigurationManager<OpenIdConnectConfiguration> ConfigurationManager { get; set; }
    parameters: []
    return:
      type: IConfigurationManager{OpenIdConnectConfiguration}
    content.vb: Public Property ConfigurationManager As IConfigurationManager(Of OpenIdConnectConfiguration)
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  id: RefreshOnIssuerKeyNotFound
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: RefreshOnIssuerKeyNotFound
  nameWithType: JwtBearerOptions.RefreshOnIssuerKeyNotFound
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RefreshOnIssuerKeyNotFound
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if a metadata refresh should be attempted after a SecurityTokenSignatureKeyNotFoundException. This allows for automatic\nrecovery in the event of a signature key rollover. This is enabled by default.\n"
  example: []
  syntax:
    content: public bool RefreshOnIssuerKeyNotFound { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RefreshOnIssuerKeyNotFound As Boolean
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  id: SecurityTokenValidators
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: SecurityTokenValidators
  nameWithType: JwtBearerOptions.SecurityTokenValidators
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SecurityTokenValidators
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets the ordered list of <see cref=\"!:ISecurityTokenValidator\"></see> used to validate access tokens.\n"
  example: []
  syntax:
    content: public IList<ISecurityTokenValidator> SecurityTokenValidators { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{ISecurityTokenValidator}
    content.vb: Public ReadOnly Property SecurityTokenValidators As IList(Of ISecurityTokenValidator)
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  id: TokenValidationParameters
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: TokenValidationParameters
  nameWithType: JwtBearerOptions.TokenValidationParameters
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TokenValidationParameters
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the parameters used to validate identity tokens.\n"
  remarks: Contains the types and definitions required for validating a token.
  example: []
  syntax:
    content: public TokenValidationParameters TokenValidationParameters { get; set; }
    parameters: []
    return:
      type: TokenValidationParameters
    content.vb: Public Property TokenValidationParameters As TokenValidationParameters
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: if 'value' is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  id: SaveToken
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: SaveToken
  nameWithType: JwtBearerOptions.SaveToken
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SaveToken
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nDefines whether the bearer token should be stored in the\n<see cref=\"!:Http.Authentication.AuthenticationProperties\"></see> after a successful authorization.\n"
  example: []
  syntax:
    content: public bool SaveToken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SaveToken As Boolean
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  id: IncludeErrorDetails
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: IncludeErrorDetails
  nameWithType: JwtBearerOptions.IncludeErrorDetails
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: IncludeErrorDetails
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nDefines whether the token validation errors should be returned to the caller.\nEnabled by default, this option can be disabled to prevent the JWT middleware\nfrom returning an error and an error_description in the WWW-Authenticate header.\n"
  example: []
  syntax:
    content: public bool IncludeErrorDetails { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeErrorDetails As Boolean
  overload: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  isExternal: false
  name: JwtBearerOptions
  nameWithType: JwtBearerOptions.JwtBearerOptions
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.JwtBearerOptions
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  isExternal: false
  name: RequireHttpsMetadata
  nameWithType: JwtBearerOptions.RequireHttpsMetadata
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  isExternal: false
  name: MetadataAddress
  nameWithType: JwtBearerOptions.MetadataAddress
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  isExternal: false
  name: Authority
  nameWithType: JwtBearerOptions.Authority
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  isExternal: false
  name: Audience
  nameWithType: JwtBearerOptions.Audience
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  isExternal: false
  name: Challenge
  nameWithType: JwtBearerOptions.Challenge
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  isExternal: false
  name: Events
  nameWithType: JwtBearerOptions.Events
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
- uid: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
  commentId: T:Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
  parent: Microsoft.AspNetCore.Authentication.JwtBearer
  isExternal: false
  name: IJwtBearerEvents
  nameWithType: IJwtBearerEvents
  fullName: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
- uid: Microsoft.AspNetCore.Authentication.JwtBearer
  commentId: N:Microsoft.AspNetCore.Authentication.JwtBearer
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.JwtBearer
  nameWithType: Microsoft.AspNetCore.Authentication.JwtBearer
  fullName: Microsoft.AspNetCore.Authentication.JwtBearer
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  isExternal: false
  name: BackchannelHttpHandler
  nameWithType: JwtBearerOptions.BackchannelHttpHandler
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
- uid: HttpMessageHandler
  commentId: '!:HttpMessageHandler'
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: HttpMessageHandler
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  isExternal: false
  name: BackchannelTimeout
  nameWithType: JwtBearerOptions.BackchannelTimeout
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  isExternal: false
  name: Configuration
  nameWithType: JwtBearerOptions.Configuration
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
- uid: OpenIdConnectConfiguration
  isExternal: true
  name: OpenIdConnectConfiguration
  nameWithType: OpenIdConnectConfiguration
  fullName: OpenIdConnectConfiguration
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: JwtBearerOptions.ConfigurationManager
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
- uid: IConfigurationManager{OpenIdConnectConfiguration}
  commentId: '!:IConfigurationManager{OpenIdConnectConfiguration}'
  definition: IConfigurationManager`1
  name: IConfigurationManager<OpenIdConnectConfiguration>
  nameWithType: IConfigurationManager<OpenIdConnectConfiguration>
  fullName: IConfigurationManager<OpenIdConnectConfiguration>
  nameWithType.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  fullName.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  name.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  spec.csharp:
  - uid: IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: OpenIdConnectConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: OpenIdConnectConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IConfigurationManager`1
  isExternal: true
  name: IConfigurationManager<>
  nameWithType: IConfigurationManager<>
  fullName: IConfigurationManager<>
  nameWithType.vb: IConfigurationManager(Of )
  fullName.vb: IConfigurationManager(Of )
  name.vb: IConfigurationManager(Of )
  spec.csharp:
  - uid: IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  isExternal: false
  name: RefreshOnIssuerKeyNotFound
  nameWithType: JwtBearerOptions.RefreshOnIssuerKeyNotFound
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  isExternal: false
  name: SecurityTokenValidators
  nameWithType: JwtBearerOptions.SecurityTokenValidators
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
- uid: System.Collections.Generic.IList{ISecurityTokenValidator}
  commentId: T:System.Collections.Generic.IList{ISecurityTokenValidator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ISecurityTokenValidator>
  nameWithType: IList<ISecurityTokenValidator>
  fullName: System.Collections.Generic.IList<ISecurityTokenValidator>
  nameWithType.vb: IList(Of ISecurityTokenValidator)
  fullName.vb: System.Collections.Generic.IList(Of ISecurityTokenValidator)
  name.vb: IList(Of ISecurityTokenValidator)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ISecurityTokenValidator
    name: ISecurityTokenValidator
    nameWithType: ISecurityTokenValidator
    fullName: ISecurityTokenValidator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ISecurityTokenValidator
    name: ISecurityTokenValidator
    nameWithType: ISecurityTokenValidator
    fullName: ISecurityTokenValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  isExternal: false
  name: TokenValidationParameters
  nameWithType: JwtBearerOptions.TokenValidationParameters
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: TokenValidationParameters
  isExternal: true
  name: TokenValidationParameters
  nameWithType: TokenValidationParameters
  fullName: TokenValidationParameters
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  isExternal: false
  name: SaveToken
  nameWithType: JwtBearerOptions.SaveToken
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails*
  commentId: Overload:Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  isExternal: false
  name: IncludeErrorDetails
  nameWithType: JwtBearerOptions.IncludeErrorDetails
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
shouldSkipMarkup: true
