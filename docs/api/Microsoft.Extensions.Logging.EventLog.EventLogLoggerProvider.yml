### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  commentId: T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  id: EventLogLoggerProvider
  parent: Microsoft.Extensions.Logging.EventLog
  children:
  - Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor
  - Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  - Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)
  - Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose
  langs:
  - csharp
  - vb
  name: EventLogLoggerProvider
  nameWithType: EventLogLoggerProvider
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: EventLogLoggerProvider
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  summary: "\nThe provider for the <xref href=\"Microsoft.Extensions.Logging.EventLog.EventLogLogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class EventLogLoggerProvider : ILoggerProvider'
    content.vb: >-
      Public Class EventLogLoggerProvider
          Inherits ILoggerProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor
  commentId: M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  langs:
  - csharp
  - vb
  name: EventLogLoggerProvider()
  nameWithType: EventLogLoggerProvider.EventLogLoggerProvider()
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.EventLogLoggerProvider()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EventLogLoggerProvider()
    content.vb: Public Sub New
  overload: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  id: '#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)'
  parent: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  langs:
  - csharp
  - vb
  name: EventLogLoggerProvider(EventLogSettings)
  nameWithType: EventLogLoggerProvider.EventLogLoggerProvider(EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.EventLogLoggerProvider(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EventLogLoggerProvider(EventLogSettings settings)
    parameters:
    - id: settings
      type: Microsoft.Extensions.Logging.EventLog.EventLogSettings
      description: The <xref href="Microsoft.Extensions.Logging.EventLog.EventLogSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(settings As EventLogSettings)
  overload: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: EventLogLoggerProvider.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  example: []
  syntax:
    content: public ILogger CreateLogger(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(name As String) As ILogger
  overload: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose
  commentId: M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventLogLoggerProvider.Dispose()
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Dispose
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.EventLog/EventLogLoggerProvider.cs
    startLine: 37
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLogger
  commentId: T:Microsoft.Extensions.Logging.EventLog.EventLogLogger
  isExternal: false
  name: EventLogLogger
  nameWithType: EventLogLogger
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLogger
- uid: Microsoft.Extensions.Logging.EventLog
  commentId: N:Microsoft.Extensions.Logging.EventLog
  isExternal: false
  name: Microsoft.Extensions.Logging.EventLog
  nameWithType: Microsoft.Extensions.Logging.EventLog
  fullName: Microsoft.Extensions.Logging.EventLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  commentId: T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
  isExternal: false
  name: EventLogLoggerProvider
  nameWithType: EventLogLoggerProvider
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor*
  commentId: Overload:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor
  isExternal: false
  name: EventLogLoggerProvider
  nameWithType: EventLogLoggerProvider.EventLogLoggerProvider
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.EventLogLoggerProvider
- uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  commentId: T:Microsoft.Extensions.Logging.EventLog.EventLogSettings
  parent: Microsoft.Extensions.Logging.EventLog
  isExternal: false
  name: EventLogSettings
  nameWithType: EventLogSettings
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger*
  commentId: Overload:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: EventLogLoggerProvider.CreateLogger
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose*
  commentId: Overload:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose
  isExternal: false
  name: Dispose
  nameWithType: EventLogLoggerProvider.Dispose
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose
shouldSkipMarkup: true
