### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  id: TagHelperOutputExtensions
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute(TagHelperOutput,System.String,TagHelperContext)
  - Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes(TagHelperOutput,TagBuilder)
  - Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange(TagHelperOutput,System.Collections.Generic.IEnumerable{TagHelperAttribute})
  langs:
  - csharp
  - vb
  name: TagHelperOutputExtensions
  nameWithType: TagHelperOutputExtensions
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TagHelperOutputExtensions
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nUtility related extensions for <see cref=\"!:TagHelperOutput\"></see>.\n"
  example: []
  syntax:
    content: public static class TagHelperOutputExtensions
    content.vb: Public Module TagHelperOutputExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute(TagHelperOutput,System.String,TagHelperContext)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute(TagHelperOutput,System.String,TagHelperContext)
  id: CopyHtmlAttribute(TagHelperOutput,System.String,TagHelperContext)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  langs:
  - csharp
  - vb
  name: CopyHtmlAttribute(TagHelperOutput, String, TagHelperContext)
  nameWithType: TagHelperOutputExtensions.CopyHtmlAttribute(TagHelperOutput, String, TagHelperContext)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute(TagHelperOutput, System.String, TagHelperContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CopyHtmlAttribute
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nCopies a user-provided attribute from <span class=\"paramref\">context</span>&apos;s\n<see cref=\"!:TagHelperContext.AllAttributes\"></see> to <span class=\"paramref\">tagHelperOutput</span>&apos;s\n<see cref=\"!:TagHelperOutput.Attributes\"></see>.\n"
  remarks: "\n<p>\nOnly copies the attribute if <span class=\"paramref\">tagHelperOutput</span>&apos;s\n<see cref=\"!:TagHelperOutput.Attributes\"></see> does not contain an attribute with the given\n<span class=\"paramref\">attributeName</span>.\n</p>\n<p>\nDuplicate attributes same name in <span class=\"paramref\">context</span>&apos;s <see cref=\"!:TagHelperContext.AllAttributes\"></see>\nor <span class=\"paramref\">tagHelperOutput</span>&apos;s <see cref=\"!:TagHelperOutput.Attributes\"></see> may result in copied\nattribute order not being maintained.\n</p>"
  example: []
  syntax:
    content: public static void CopyHtmlAttribute(this TagHelperOutput tagHelperOutput, string attributeName, TagHelperContext context)
    parameters:
    - id: tagHelperOutput
      type: TagHelperOutput
      description: The <see cref="!:TagHelperOutput"></see> this method extends.
    - id: attributeName
      type: System.String
      description: The name of the bound attribute.
    - id: context
      type: TagHelperContext
      description: The <see cref="!:TagHelperContext"></see>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub CopyHtmlAttribute(tagHelperOutput As TagHelperOutput, attributeName As String, context As TagHelperContext)
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes(TagHelperOutput,TagBuilder)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes(TagHelperOutput,TagBuilder)
  id: MergeAttributes(TagHelperOutput,TagBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  langs:
  - csharp
  - vb
  name: MergeAttributes(TagHelperOutput, TagBuilder)
  nameWithType: TagHelperOutputExtensions.MergeAttributes(TagHelperOutput, TagBuilder)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes(TagHelperOutput, TagBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttributes
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nMerges the given <span class=\"paramref\">tagBuilder</span>&apos;s <see cref=\"!:TagBuilder.Attributes\"></see> into the\n<span class=\"paramref\">tagHelperOutput</span>.\n"
  remarks: >-
    Existing <see cref="!:TagHelperOutput.Attributes"></see> on the given <span class="paramref">tagHelperOutput</span>

    are not overridden; &quot;class&quot; attributes are merged with spaces.
  example: []
  syntax:
    content: public static void MergeAttributes(this TagHelperOutput tagHelperOutput, TagBuilder tagBuilder)
    parameters:
    - id: tagHelperOutput
      type: TagHelperOutput
      description: The <see cref="!:TagHelperOutput"></see> this method extends.
    - id: tagBuilder
      type: TagBuilder
      description: The <see cref="!:TagBuilder"></see> to merge attributes from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MergeAttributes(tagHelperOutput As TagHelperOutput, tagBuilder As TagBuilder)
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange(TagHelperOutput,System.Collections.Generic.IEnumerable{TagHelperAttribute})
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange(TagHelperOutput,System.Collections.Generic.IEnumerable{TagHelperAttribute})
  id: RemoveRange(TagHelperOutput,System.Collections.Generic.IEnumerable{TagHelperAttribute})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions
  langs:
  - csharp
  - vb
  name: RemoveRange(TagHelperOutput, IEnumerable<TagHelperAttribute>)
  nameWithType: TagHelperOutputExtensions.RemoveRange(TagHelperOutput, IEnumerable<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange(TagHelperOutput, System.Collections.Generic.IEnumerable<TagHelperAttribute>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RemoveRange
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/TagHelperOutputExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nRemoves the given <span class=\"paramref\">attributes</span> from <span class=\"paramref\">tagHelperOutput</span>&apos;s\n<see cref=\"!:TagHelperOutput.Attributes\"></see>.\n"
  example: []
  syntax:
    content: public static void RemoveRange(this TagHelperOutput tagHelperOutput, IEnumerable<TagHelperAttribute> attributes)
    parameters:
    - id: tagHelperOutput
      type: TagHelperOutput
      description: The <see cref="!:TagHelperOutput"></see> this method extends.
    - id: attributes
      type: System.Collections.Generic.IEnumerable{TagHelperAttribute}
      description: Attributes to remove.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveRange(tagHelperOutput As TagHelperOutput, attributes As IEnumerable(Of TagHelperAttribute))
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange*
  nameWithType.vb: TagHelperOutputExtensions.RemoveRange(TagHelperOutput, IEnumerable(Of TagHelperAttribute))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange(TagHelperOutput, System.Collections.Generic.IEnumerable(Of TagHelperAttribute))
  name.vb: RemoveRange(TagHelperOutput, IEnumerable(Of TagHelperAttribute))
references:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute
  isExternal: false
  name: CopyHtmlAttribute
  nameWithType: TagHelperOutputExtensions.CopyHtmlAttribute
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.CopyHtmlAttribute
- uid: TagHelperOutput
  isExternal: true
  name: TagHelperOutput
  nameWithType: TagHelperOutput
  fullName: TagHelperOutput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TagHelperContext
  isExternal: true
  name: TagHelperContext
  nameWithType: TagHelperContext
  fullName: TagHelperContext
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes
  isExternal: false
  name: MergeAttributes
  nameWithType: TagHelperOutputExtensions.MergeAttributes
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.MergeAttributes
- uid: TagBuilder
  commentId: '!:TagBuilder'
  isExternal: true
  name: TagBuilder
  nameWithType: TagBuilder
  fullName: TagBuilder
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange
  isExternal: false
  name: RemoveRange
  nameWithType: TagHelperOutputExtensions.RemoveRange
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.TagHelperOutputExtensions.RemoveRange
- uid: System.Collections.Generic.IEnumerable{TagHelperAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperAttribute>
  nameWithType: IEnumerable<TagHelperAttribute>
  fullName: System.Collections.Generic.IEnumerable<TagHelperAttribute>
  nameWithType.vb: IEnumerable(Of TagHelperAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TagHelperAttribute)
  name.vb: IEnumerable(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: TagHelperAttribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: TagHelperAttribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
