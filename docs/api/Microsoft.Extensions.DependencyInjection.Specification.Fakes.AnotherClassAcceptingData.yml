### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  id: AnotherClassAcceptingData
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.String)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
  langs:
  - csharp
  - vb
  name: AnotherClassAcceptingData
  nameWithType: AnotherClassAcceptingData
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: AnotherClassAcceptingData
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class AnotherClassAcceptingData : object'
    content.vb: >-
      Public Class AnotherClassAcceptingData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.String)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.String)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  langs:
  - csharp
  - vb
  name: AnotherClassAcceptingData(IFakeService, String, String)
  nameWithType: AnotherClassAcceptingData.AnotherClassAcceptingData(IFakeService, String, String)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.AnotherClassAcceptingData(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public AnotherClassAcceptingData(IFakeService fakeService, string one, string two)
    parameters:
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: one
      type: System.String
    - id: two
      type: System.String
    content.vb: Public Sub New(fakeService As IFakeService, one As String, two As String)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
  id: FakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  langs:
  - csharp
  - vb
  name: FakeService
  nameWithType: AnotherClassAcceptingData.FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: FakeService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeService FakeService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    content.vb: Public ReadOnly Property FakeService As IFakeService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
  id: One
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  langs:
  - csharp
  - vb
  name: One
  nameWithType: AnotherClassAcceptingData.One
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: One
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public string One { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property One As String
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
  id: Two
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData
  langs:
  - csharp
  - vb
  name: Two
  nameWithType: AnotherClassAcceptingData.Two
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Two
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/AnotherClassAcceptingData.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public string Two { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Two As String
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor
  isExternal: false
  name: AnotherClassAcceptingData
  nameWithType: AnotherClassAcceptingData.AnotherClassAcceptingData
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.AnotherClassAcceptingData
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
  isExternal: false
  name: FakeService
  nameWithType: AnotherClassAcceptingData.FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
  isExternal: false
  name: One
  nameWithType: AnotherClassAcceptingData.One
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
  isExternal: false
  name: Two
  nameWithType: AnotherClassAcceptingData.Two
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two
shouldSkipMarkup: true
