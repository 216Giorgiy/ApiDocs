### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  id: DiagnosticSourceAdapter
  parent: Microsoft.Extensions.DiagnosticAdapter
  children:
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean})
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter
  nameWithType: DiagnosticSourceAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: DiagnosticSourceAdapter
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: 'public class DiagnosticSourceAdapter : IObserver<KeyValuePair<string, object>>'
    content.vb: >-
      Public Class DiagnosticSourceAdapter
          Inherits IObserver(Of KeyValuePair(Of String, Object))
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target)
    parameters:
    - id: target
      type: System.Object
    content.vb: Public Sub New(target As Object)
  overload: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean})
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean})
  id: '#ctor(System.Object,Func{System.String,System.Boolean})'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object, Func<String, Boolean>)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func<String, Boolean>)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, Func<System.String, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target, Func<string, bool> isEnabled)
    parameters:
    - id: target
      type: System.Object
    - id: isEnabled
      type: Func{System.String,System.Boolean}
    content.vb: Public Sub New(target As Object, isEnabled As Func(Of String, Boolean))
  overload: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor*
  nameWithType.vb: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func(Of String, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, Func(Of System.String, System.Boolean))
  name.vb: DiagnosticSourceAdapter(Object, Func(Of String, Boolean))
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  id: '#ctor(System.Object,Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object, Func<String, Boolean>, IDiagnosticSourceMethodAdapter)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func<String, Boolean>, IDiagnosticSourceMethodAdapter)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, Func<System.String, System.Boolean>, Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target, Func<string, bool> isEnabled, IDiagnosticSourceMethodAdapter methodAdapter)
    parameters:
    - id: target
      type: System.Object
    - id: isEnabled
      type: Func{System.String,System.Boolean}
    - id: methodAdapter
      type: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
    content.vb: Public Sub New(target As Object, isEnabled As Func(Of String, Boolean), methodAdapter As IDiagnosticSourceMethodAdapter)
  overload: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor*
  nameWithType.vb: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func(Of String, Boolean), IDiagnosticSourceMethodAdapter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, Func(Of System.String, System.Boolean), Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  name.vb: DiagnosticSourceAdapter(Object, Func(Of String, Boolean), IDiagnosticSourceMethodAdapter)
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  id: IsEnabled(System.String)
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: IsEnabled(String)
  nameWithType: DiagnosticSourceAdapter.IsEnabled(String)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: IsEnabled
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 55
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public bool IsEnabled(string diagnosticName)
    parameters:
    - id: diagnosticName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsEnabled(diagnosticName As String) As Boolean
  overload: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  nameWithType: DiagnosticSourceAdapter.Write(String, Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Write
    path: ../aspnet/EventNotification/src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 67
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public void Write(string diagnosticName, object parameters)
    parameters:
    - id: diagnosticName
      type: System.String
    - id: parameters
      type: System.Object
    content.vb: Public Sub Write(diagnosticName As String, parameters As Object)
  overload: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DiagnosticAdapter
  commentId: N:Microsoft.Extensions.DiagnosticAdapter
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter
  nameWithType: Microsoft.Extensions.DiagnosticAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor*
  commentId: Overload:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor
  isExternal: false
  name: DiagnosticSourceAdapter
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter
- uid: Func{System.String,System.Boolean}
  commentId: '!:Func{System.String,System.Boolean}'
  definition: Func`2
  name: Func<String, Boolean>
  nameWithType: Func<String, Boolean>
  fullName: Func<System.String, System.Boolean>
  nameWithType.vb: Func(Of String, Boolean)
  fullName.vb: Func(Of System.String, System.Boolean)
  name.vb: Func(Of String, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
  parent: Microsoft.Extensions.DiagnosticAdapter
  isExternal: false
  name: IDiagnosticSourceMethodAdapter
  nameWithType: IDiagnosticSourceMethodAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled*
  commentId: Overload:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled
  isExternal: false
  name: IsEnabled
  nameWithType: DiagnosticSourceAdapter.IsEnabled
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write*
  commentId: Overload:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write
  isExternal: false
  name: Write
  nameWithType: DiagnosticSourceAdapter.Write
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write
shouldSkipMarkup: true
