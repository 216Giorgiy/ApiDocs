### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1
  id: ModeAttributes`1
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.#ctor(`0,System.String[])
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Attributes
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Mode
  langs:
  - csharp
  - vb
  name: ModeAttributes<TMode>
  nameWithType: ModeAttributes<TMode>
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes<TMode>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ModeAttributes
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nA mapping of a <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\"></see> mode to its required attributes.\n"
  example: []
  syntax:
    content: public class ModeAttributes<TMode>
    content.vb: Public Class ModeAttributes(Of TMode)
    typeParameters:
    - id: TMode
      description: The type representing the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"></see>'s mode.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ModeAttributes(Of TMode)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes(Of TMode)
  name.vb: ModeAttributes(Of TMode)
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.#ctor(`0,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.#ctor(`0,System.String[])
  id: '#ctor(`0,System.String[])'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1
  langs:
  - csharp
  - vb
  name: ModeAttributes(TMode, String[])
  nameWithType: ModeAttributes<TMode>.ModeAttributes(TMode, String[])
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes<TMode>.ModeAttributes(TMode, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nInitializes a new instance of <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1\"></see>.\n"
  example: []
  syntax:
    content: public ModeAttributes(TMode mode, string[] attributes)
    content.vb: Public Sub New(mode As TMode, attributes As String())
    parameters:
    - id: mode
      type: '{TMode}'
      description: The <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"></see>'s mode.
    - id: attributes
      type: System.String[]
      description: The names of attributes required for this mode.
  nameWithType.vb: ModeAttributes(Of TMode).ModeAttributes(TMode, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes(Of TMode).ModeAttributes(TMode, System.String())
  name.vb: ModeAttributes(TMode, String())
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Mode
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Mode
  id: Mode
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ModeAttributes<TMode>.Mode
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes<TMode>.Mode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Mode
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nGets the <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\"></see>'s mode.\n"
  example: []
  syntax:
    content: public TMode Mode { get; }
    content.vb: Public ReadOnly Property Mode As TMode
    parameters: []
    return:
      type: '{TMode}'
  nameWithType.vb: ModeAttributes(Of TMode).Mode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes(Of TMode).Mode
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Attributes
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1.Attributes
  id: Attributes
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes`1
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ModeAttributes<TMode>.Attributes
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes<TMode>.Attributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Attributes
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/ModeAttributesOfT.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nGets the names of attributes required for this mode.\n"
  example: []
  syntax:
    content: public string[] Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As String()
    parameters: []
    return:
      type: System.String[]
  nameWithType.vb: ModeAttributes(Of TMode).Attributes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.ModeAttributes(Of TMode).Attributes
references:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{TMode}'
  commentId: '!:TMode'
  definition: TMode
  name: TMode
  nameWithType: TMode
  fullName: TMode
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMode
  isExternal: false
  name: TMode
  nameWithType: TMode
  fullName: TMode
