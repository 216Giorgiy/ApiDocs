### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.LoggerExtensions
  commentId: T:Microsoft.Extensions.Logging.LoggerExtensions
  id: LoggerExtensions
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: LoggerExtensions
  nameWithType: LoggerExtensions
  fullName: Microsoft.Extensions.Logging.LoggerExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerExtensions
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nILogger extension methods for common scenarios.\n"
  example: []
  syntax:
    content: 'public static class LoggerExtensions : object'
    content.vb: >-
      Public Module LoggerExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogDebug
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a debug log message.\n"
  example: []
  syntax:
    content: public static void LogDebug(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogDebug(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogDebug(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogDebug
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a debug log message.\n"
  example: []
  syntax:
    content: public static void LogDebug(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogDebug(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogDebug(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogDebug
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a debug log message.\n"
  example: []
  syntax:
    content: public static void LogDebug(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogDebug(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogDebug(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogTrace
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 80
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a trace log message.\n"
  example: []
  syntax:
    content: public static void LogTrace(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogTrace(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogTrace(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogTrace
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a trace log message.\n"
  example: []
  syntax:
    content: public static void LogTrace(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogTrace(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogTrace(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogTrace
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 113
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a trace log message.\n"
  example: []
  syntax:
    content: public static void LogTrace(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogTrace(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogTrace(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogInformation
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 133
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an informational log message.\n"
  example: []
  syntax:
    content: public static void LogInformation(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogInformation(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogInformation(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogInformation
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 150
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an informational log message.\n"
  example: []
  syntax:
    content: public static void LogInformation(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogInformation(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogInformation(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogInformation
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 166
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an informational log message.\n"
  example: []
  syntax:
    content: public static void LogInformation(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogInformation(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogInformation(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogWarning
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 186
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a warning log message.\n"
  example: []
  syntax:
    content: public static void LogWarning(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogWarning(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogWarning(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogWarning
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 203
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a warning log message.\n"
  example: []
  syntax:
    content: public static void LogWarning(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogWarning(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogWarning(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogWarning
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 219
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a warning log message.\n"
  example: []
  syntax:
    content: public static void LogWarning(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogWarning(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogWarning(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogError(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogError
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 239
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an error log message.\n"
  example: []
  syntax:
    content: public static void LogError(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogError(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogError(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogError(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogError
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an error log message.\n"
  example: []
  syntax:
    content: public static void LogError(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogError(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogError(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogError(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogError
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 272
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes an error log message.\n"
  example: []
  syntax:
    content: public static void LogError(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogError(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogError(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, EventId, Exception, String, Object[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, EventId, Exception, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogCritical
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 292
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a critical log message.\n"
  example: []
  syntax:
    content: public static void LogCritical(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogCritical(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, EventId, Exception, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, Exception, System.String, System.Object())
  name.vb: LogCritical(ILogger, EventId, Exception, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, EventId, String, Object[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, EventId, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogCritical
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 309
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a critical log message.\n"
  example: []
  syntax:
    content: public static void LogCritical(this ILogger logger, EventId eventId, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogCritical(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, EventId, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  name.vb: LogCritical(ILogger, EventId, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, String, Object[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LogCritical
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 325
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats and writes a critical log message.\n"
  example: []
  syntax:
    content: public static void LogCritical(this ILogger logger, string message, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogCritical(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: LogCritical(ILogger, String, Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: BeginScope(ILogger, String, Object[])
  nameWithType: LoggerExtensions.BeginScope(ILogger, String, Object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: BeginScope
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/LoggerExtensions.cs
    startLine: 344
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nFormats the message and creates a scope.\n"
  example: []
  syntax:
    content: public static IDisposable BeginScope(this ILogger logger, string messageFormat, params object[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to create the scope in.
    - id: messageFormat
      type: System.String
      description: Format string of the scope message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    return:
      type: IDisposable
      description: A disposable scope object. Can be null.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginScope(logger As ILogger, messageFormat As String, ParamArray args As Object()) As IDisposable
  overload: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope*
  nameWithType.vb: LoggerExtensions.BeginScope(ILogger, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger, System.String, System.Object())
  name.vb: BeginScope(ILogger, String, Object())
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug
  isExternal: false
  name: LogDebug
  nameWithType: LoggerExtensions.LogDebug
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace
  isExternal: false
  name: LogTrace
  nameWithType: LoggerExtensions.LogTrace
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation
  isExternal: false
  name: LogInformation
  nameWithType: LoggerExtensions.LogInformation
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning
  isExternal: false
  name: LogWarning
  nameWithType: LoggerExtensions.LogWarning
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogError
  isExternal: false
  name: LogError
  nameWithType: LoggerExtensions.LogError
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical
  isExternal: false
  name: LogCritical
  nameWithType: LoggerExtensions.LogCritical
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical
- uid: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope
  isExternal: false
  name: BeginScope
  nameWithType: LoggerExtensions.BeginScope
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
shouldSkipMarkup: true
