### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  id: IFakeEveryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children: []
  langs:
  - csharp
  - vb
  name: IFakeEveryService
  nameWithType: IFakeEveryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/IFakeEveryService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
      commit: cab35563985febdfaeb673c380a62b967510b76f
    id: IFakeEveryService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/IFakeEveryService.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public interface IFakeEveryService : IFakeMultipleService, IFakeScopedService, IFakeServiceInstance, IFakeSingletonService, IFakeService, IFakeOpenGenericService<PocoClass>'
    content.vb: >-
      Public Interface IFakeEveryService
          Inherits IFakeService, IFakeMultipleService, IFakeScopedService, IFakeServiceInstance, IFakeSingletonService, IFakeOpenGenericService(Of PocoClass)
  inheritedMembers:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  definition: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  name: Value
  nameWithType: IFakeOpenGenericService<PocoClass>.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass>.Value
  nameWithType.vb: IFakeOpenGenericService(Of PocoClass).Value
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass).Value
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  isExternal: false
  name: Value
  nameWithType: IFakeOpenGenericService<TValue>.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<TValue>.Value
  nameWithType.vb: IFakeOpenGenericService(Of TValue).Value
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of TValue).Value
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  definition: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  name: IFakeOpenGenericService<PocoClass>
  nameWithType: IFakeOpenGenericService<PocoClass>
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass>
  nameWithType.vb: IFakeOpenGenericService(Of PocoClass)
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass)
  name.vb: IFakeOpenGenericService(Of PocoClass)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
    name: PocoClass
    nameWithType: PocoClass
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
    name: PocoClass
    nameWithType: PocoClass
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  isExternal: false
  name: IFakeOpenGenericService<TValue>
  nameWithType: IFakeOpenGenericService<TValue>
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<TValue>
  nameWithType.vb: IFakeOpenGenericService(Of TValue)
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of TValue)
  name.vb: IFakeOpenGenericService(Of TValue)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
