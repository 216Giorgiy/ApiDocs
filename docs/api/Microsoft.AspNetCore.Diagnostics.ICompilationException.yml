### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.ICompilationException
  commentId: T:Microsoft.AspNetCore.Diagnostics.ICompilationException
  id: ICompilationException
  parent: Microsoft.AspNetCore.Diagnostics
  children:
  - Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
  langs:
  - csharp
  - vb
  name: ICompilationException
  nameWithType: ICompilationException
  fullName: Microsoft.AspNetCore.Diagnostics.ICompilationException
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/ICompilationException.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ICompilationException
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Abstractions/ICompilationException.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nSpecifies the contract for an exception representing compilation failure.\n"
  remarks: "\nThis interface is implemented on exceptions thrown during compilation to enable consumers\nto read compilation-related data out of the exception\n"
  example: []
  syntax:
    content: public interface ICompilationException
    content.vb: Public Interface ICompilationException
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
  commentId: P:Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
  id: CompilationFailures
  parent: Microsoft.AspNetCore.Diagnostics.ICompilationException
  langs:
  - csharp
  - vb
  name: CompilationFailures
  nameWithType: ICompilationException.CompilationFailures
  fullName: Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/ICompilationException.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: CompilationFailures
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Abstractions/ICompilationException.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets a sequence of <xref href=\"Microsoft.AspNetCore.Diagnostics.CompilationFailure\" data-throw-if-not-resolved=\"false\"></xref> with compilation failures.\n"
  example: []
  syntax:
    content: IEnumerable<CompilationFailure> CompilationFailures { get; }
    parameters: []
    return:
      type: IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
    content.vb: ReadOnly Property CompilationFailures As IEnumerable(Of CompilationFailure)
  overload: Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Diagnostics
  commentId: N:Microsoft.AspNetCore.Diagnostics
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics
  nameWithType: Microsoft.AspNetCore.Diagnostics
  fullName: Microsoft.AspNetCore.Diagnostics
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  commentId: T:Microsoft.AspNetCore.Diagnostics.CompilationFailure
  isExternal: false
  name: CompilationFailure
  nameWithType: CompilationFailure
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
- uid: Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
  isExternal: false
  name: CompilationFailures
  nameWithType: ICompilationException.CompilationFailures
  fullName: Microsoft.AspNetCore.Diagnostics.ICompilationException.CompilationFailures
- uid: IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
  commentId: '!:IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}'
  definition: IEnumerable`1
  name: IEnumerable<CompilationFailure>
  nameWithType: IEnumerable<CompilationFailure>
  fullName: IEnumerable<Microsoft.AspNetCore.Diagnostics.CompilationFailure>
  nameWithType.vb: IEnumerable(Of CompilationFailure)
  fullName.vb: IEnumerable(Of Microsoft.AspNetCore.Diagnostics.CompilationFailure)
  name.vb: IEnumerable(Of CompilationFailure)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    name: CompilationFailure
    nameWithType: CompilationFailure
    fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    name: CompilationFailure
    nameWithType: CompilationFailure
    fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
