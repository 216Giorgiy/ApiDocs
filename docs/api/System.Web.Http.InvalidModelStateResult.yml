### YamlMime:ManagedReference
items:
- uid: System.Web.Http.InvalidModelStateResult
  commentId: T:System.Web.Http.InvalidModelStateResult
  id: InvalidModelStateResult
  parent: System.Web.Http
  children:
  - System.Web.Http.InvalidModelStateResult.#ctor(ModelStateDictionary,System.Boolean)
  - System.Web.Http.InvalidModelStateResult.ExecuteResultAsync(ActionContext)
  - System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
  - System.Web.Http.InvalidModelStateResult.ModelState
  langs:
  - csharp
  - vb
  name: InvalidModelStateResult
  nameWithType: InvalidModelStateResult
  fullName: System.Web.Http.InvalidModelStateResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InvalidModelStateResult
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nAn action result that returns a <see cref=\"!:StatusCodes.Status400BadRequest\"></see> response and performs\ncontent negotiation on an <xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> based on a <see cref=\"!:ModelStateDictionary\"></see>.\n"
  example: []
  syntax:
    content: 'public class InvalidModelStateResult : ObjectResult'
    content.vb: >-
      Public Class InvalidModelStateResult
          Inherits ObjectResult
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Web.Http.InvalidModelStateResult.#ctor(ModelStateDictionary,System.Boolean)
  commentId: M:System.Web.Http.InvalidModelStateResult.#ctor(ModelStateDictionary,System.Boolean)
  id: '#ctor(ModelStateDictionary,System.Boolean)'
  parent: System.Web.Http.InvalidModelStateResult
  langs:
  - csharp
  - vb
  name: InvalidModelStateResult(ModelStateDictionary, Boolean)
  nameWithType: InvalidModelStateResult.InvalidModelStateResult(ModelStateDictionary, Boolean)
  fullName: System.Web.Http.InvalidModelStateResult.InvalidModelStateResult(ModelStateDictionary, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: Initializes a new instance of the <xref href="System.Web.Http.InvalidModelStateResult" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public InvalidModelStateResult(ModelStateDictionary modelState, bool includeErrorDetail)
    parameters:
    - id: modelState
      type: ModelStateDictionary
      description: The model state to include in the error.
    - id: includeErrorDetail
      type: System.Boolean
      description: "\n<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the error should include exception messages; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n"
    content.vb: Public Sub New(modelState As ModelStateDictionary, includeErrorDetail As Boolean)
  overload: System.Web.Http.InvalidModelStateResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Web.Http.InvalidModelStateResult.ModelState
  commentId: P:System.Web.Http.InvalidModelStateResult.ModelState
  id: ModelState
  parent: System.Web.Http.InvalidModelStateResult
  langs:
  - csharp
  - vb
  name: ModelState
  nameWithType: InvalidModelStateResult.ModelState
  fullName: System.Web.Http.InvalidModelStateResult.ModelState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelState
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the model state to include in the error.\n"
  example: []
  syntax:
    content: public ModelStateDictionary ModelState { get; }
    parameters: []
    return:
      type: ModelStateDictionary
    content.vb: Public ReadOnly Property ModelState As ModelStateDictionary
  overload: System.Web.Http.InvalidModelStateResult.ModelState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
  commentId: P:System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
  id: IncludeErrorDetail
  parent: System.Web.Http.InvalidModelStateResult
  langs:
  - csharp
  - vb
  name: IncludeErrorDetail
  nameWithType: InvalidModelStateResult.IncludeErrorDetail
  fullName: System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IncludeErrorDetail
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets a value indicating whether the error should include exception messages.\n"
  example: []
  syntax:
    content: public bool IncludeErrorDetail { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IncludeErrorDetail As Boolean
  overload: System.Web.Http.InvalidModelStateResult.IncludeErrorDetail*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.InvalidModelStateResult.ExecuteResultAsync(ActionContext)
  commentId: M:System.Web.Http.InvalidModelStateResult.ExecuteResultAsync(ActionContext)
  id: ExecuteResultAsync(ActionContext)
  parent: System.Web.Http.InvalidModelStateResult
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: InvalidModelStateResult.ExecuteResultAsync(ActionContext)
  fullName: System.Web.Http.InvalidModelStateResult.ExecuteResultAsync(ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/InvalidModelStateResult.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    parameters:
    - id: context
      type: ActionContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
  overload: System.Web.Http.InvalidModelStateResult.ExecuteResultAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Web.Http.HttpError
  commentId: T:System.Web.Http.HttpError
  parent: System.Web.Http
  isExternal: false
  name: HttpError
  nameWithType: HttpError
  fullName: System.Web.Http.HttpError
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Web.Http.InvalidModelStateResult
  commentId: T:System.Web.Http.InvalidModelStateResult
  parent: System.Web.Http
  isExternal: false
  name: InvalidModelStateResult
  nameWithType: InvalidModelStateResult
  fullName: System.Web.Http.InvalidModelStateResult
- uid: System.Web.Http.InvalidModelStateResult.#ctor*
  commentId: Overload:System.Web.Http.InvalidModelStateResult.#ctor
  isExternal: false
  name: InvalidModelStateResult
  nameWithType: InvalidModelStateResult.InvalidModelStateResult
  fullName: System.Web.Http.InvalidModelStateResult.InvalidModelStateResult
- uid: ModelStateDictionary
  isExternal: true
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: ModelStateDictionary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Http.InvalidModelStateResult.ModelState*
  commentId: Overload:System.Web.Http.InvalidModelStateResult.ModelState
  isExternal: false
  name: ModelState
  nameWithType: InvalidModelStateResult.ModelState
  fullName: System.Web.Http.InvalidModelStateResult.ModelState
- uid: System.Web.Http.InvalidModelStateResult.IncludeErrorDetail*
  commentId: Overload:System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
  isExternal: false
  name: IncludeErrorDetail
  nameWithType: InvalidModelStateResult.IncludeErrorDetail
  fullName: System.Web.Http.InvalidModelStateResult.IncludeErrorDetail
- uid: System.Web.Http.InvalidModelStateResult.ExecuteResultAsync*
  commentId: Overload:System.Web.Http.InvalidModelStateResult.ExecuteResultAsync
  isExternal: false
  name: ExecuteResultAsync
  nameWithType: InvalidModelStateResult.ExecuteResultAsync
  fullName: System.Web.Http.InvalidModelStateResult.ExecuteResultAsync
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
