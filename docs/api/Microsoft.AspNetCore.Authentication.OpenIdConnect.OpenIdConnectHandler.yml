### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  id: OpenIdConnectHandler
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  children:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor(HttpClient,HtmlEncoder)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage,JwtSecurityToken,AuthenticationTicket)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync(SignOutContext)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync(ChallengeContext)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  langs:
  - csharp
  - vb
  name: OpenIdConnectHandler
  nameWithType: OpenIdConnectHandler
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OpenIdConnectHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nA per-request authentication handler for the OpenIdConnectAuthenticationMiddleware.\n"
  example: []
  syntax:
    content: 'public class OpenIdConnectHandler : RemoteAuthenticationHandler<OpenIdConnectOptions>'
    content.vb: >-
      Public Class OpenIdConnectHandler
          Inherits RemoteAuthenticationHandler(Of OpenIdConnectOptions)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
  id: Backchannel
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: Backchannel
  nameWithType: OpenIdConnectHandler.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Backchannel
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: protected HttpClient Backchannel { get; }
    parameters: []
    return:
      type: HttpClient
    content.vb: Protected ReadOnly Property Backchannel As HttpClient
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
  id: HtmlEncoder
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HtmlEncoder
  nameWithType: OpenIdConnectHandler.HtmlEncoder
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HtmlEncoder
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: protected HtmlEncoder HtmlEncoder { get; }
    parameters: []
    return:
      type: HtmlEncoder
    content.vb: Protected ReadOnly Property HtmlEncoder As HtmlEncoder
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor(HttpClient,HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor(HttpClient,HtmlEncoder)
  id: '#ctor(HttpClient,HtmlEncoder)'
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: OpenIdConnectHandler(HttpClient, HtmlEncoder)
  nameWithType: OpenIdConnectHandler.OpenIdConnectHandler(HttpClient, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.OpenIdConnectHandler(HttpClient, HtmlEncoder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: public OpenIdConnectHandler(HttpClient backchannel, HtmlEncoder htmlEncoder)
    parameters:
    - id: backchannel
      type: HttpClient
    - id: htmlEncoder
      type: HtmlEncoder
    content.vb: Public Sub New(backchannel As HttpClient, htmlEncoder As HtmlEncoder)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync
  id: HandleRequestAsync
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HandleRequestAsync()
  nameWithType: OpenIdConnectHandler.HandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRequestAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: public override Task<bool> HandleRequestAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overrides Function HandleRequestAsync As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync
  id: HandleRemoteSignOutAsync
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HandleRemoteSignOutAsync()
  nameWithType: OpenIdConnectHandler.HandleRemoteSignOutAsync()
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRemoteSignOutAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: protected virtual Task<bool> HandleRemoteSignOutAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function HandleRemoteSignOutAsync As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync(SignOutContext)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync(SignOutContext)
  id: HandleSignOutAsync(SignOutContext)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HandleSignOutAsync(SignOutContext)
  nameWithType: OpenIdConnectHandler.HandleSignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync(SignOutContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleSignOutAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nHandles Signout\n"
  example: []
  syntax:
    content: protected override Task HandleSignOutAsync(SignOutContext signout)
    parameters:
    - id: signout
      type: SignOutContext
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Protected Overrides Function HandleSignOutAsync(signout As SignOutContext) As Task
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync(ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync(ChallengeContext)
  id: HandleUnauthorizedAsync(ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HandleUnauthorizedAsync(ChallengeContext)
  nameWithType: OpenIdConnectHandler.HandleUnauthorizedAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync(ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleUnauthorizedAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 247
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nResponds to a 401 Challenge. Sends an OpenIdConnect message to the 'identity authority' to obtain an identity.\n"
  example: []
  syntax:
    content: protected override Task<bool> HandleUnauthorizedAsync(ChallengeContext context)
    parameters:
    - id: context
      type: ChallengeContext
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Protected Overrides Function HandleUnauthorizedAsync(context As ChallengeContext) As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync
  id: HandleRemoteAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: HandleRemoteAuthenticateAsync()
  nameWithType: OpenIdConnectHandler.HandleRemoteAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRemoteAuthenticateAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 378
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nInvoked to process incoming OpenIdConnect messages.\n"
  example: []
  syntax:
    content: protected override Task<AuthenticateResult> HandleRemoteAuthenticateAsync()
    return:
      type: System.Threading.Tasks.Task{AuthenticateResult}
      description: An <see cref="!:AuthenticationTicket"></see> if successful.
    content.vb: Protected Overrides Function HandleRemoteAuthenticateAsync As Task(Of AuthenticateResult)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  id: RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  nameWithType: OpenIdConnectHandler.RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync(OpenIdConnectMessage)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RedeemAuthorizationCodeAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 663
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nRedeems the authorization code for tokens at the token endpoint\n"
  example: []
  syntax:
    content: protected virtual Task<OpenIdConnectMessage> RedeemAuthorizationCodeAsync(OpenIdConnectMessage tokenEndpointRequest)
    parameters:
    - id: tokenEndpointRequest
      type: OpenIdConnectMessage
      description: The request that will be sent to the token endpoint and is available for customization.
    return:
      type: System.Threading.Tasks.Task{OpenIdConnectMessage}
      description: OpenIdConnect message that has tokens inside it.
    content.vb: Protected Overridable Function RedeemAuthorizationCodeAsync(tokenEndpointRequest As OpenIdConnectMessage) As Task(Of OpenIdConnectMessage)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage,JwtSecurityToken,AuthenticationTicket)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage,JwtSecurityToken,AuthenticationTicket)
  id: GetUserInformationAsync(OpenIdConnectMessage,JwtSecurityToken,AuthenticationTicket)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler
  langs:
  - csharp
  - vb
  name: GetUserInformationAsync(OpenIdConnectMessage, JwtSecurityToken, AuthenticationTicket)
  nameWithType: OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage, JwtSecurityToken, AuthenticationTicket)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage, JwtSecurityToken, AuthenticationTicket)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetUserInformationAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs
    startLine: 682
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nGoes to UserInfo endpoint to retrieve additional claims and add any unique claims to the given identity.\n"
  example: []
  syntax:
    content: protected virtual Task<AuthenticateResult> GetUserInformationAsync(OpenIdConnectMessage message, JwtSecurityToken jwt, AuthenticationTicket ticket)
    parameters:
    - id: message
      type: OpenIdConnectMessage
      description: message that is being processed
    - id: jwt
      type: JwtSecurityToken
      description: The <see cref="!:JwtSecurityToken"></see>.
    - id: ticket
      type: AuthenticationTicket
      description: authentication ticket with claims principal and identities
    return:
      type: System.Threading.Tasks.Task{AuthenticateResult}
      description: Authentication ticket with identity with additional claims, if any.
    content.vb: Protected Overridable Function GetUserInformationAsync(message As OpenIdConnectMessage, jwt As JwtSecurityToken, ticket As AuthenticationTicket) As Task(Of AuthenticateResult)
  overload: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect
  commentId: N:Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.OpenIdConnect
  nameWithType: Microsoft.AspNetCore.Authentication.OpenIdConnect
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
  isExternal: false
  name: Backchannel
  nameWithType: OpenIdConnectHandler.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.Backchannel
- uid: HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: HttpClient
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
  isExternal: false
  name: HtmlEncoder
  nameWithType: OpenIdConnectHandler.HtmlEncoder
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HtmlEncoder
- uid: HtmlEncoder
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: HtmlEncoder
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.#ctor
  isExternal: false
  name: OpenIdConnectHandler
  nameWithType: OpenIdConnectHandler.OpenIdConnectHandler
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.OpenIdConnectHandler
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync
  isExternal: false
  name: HandleRequestAsync
  nameWithType: OpenIdConnectHandler.HandleRequestAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRequestAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync
  isExternal: false
  name: HandleRemoteSignOutAsync
  nameWithType: OpenIdConnectHandler.HandleRemoteSignOutAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteSignOutAsync
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync
  isExternal: false
  name: HandleSignOutAsync
  nameWithType: OpenIdConnectHandler.HandleSignOutAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleSignOutAsync
- uid: SignOutContext
  isExternal: true
  name: SignOutContext
  nameWithType: SignOutContext
  fullName: SignOutContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync
  isExternal: false
  name: HandleUnauthorizedAsync
  nameWithType: OpenIdConnectHandler.HandleUnauthorizedAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleUnauthorizedAsync
- uid: ChallengeContext
  isExternal: true
  name: ChallengeContext
  nameWithType: ChallengeContext
  fullName: ChallengeContext
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync
  isExternal: false
  name: HandleRemoteAuthenticateAsync
  nameWithType: OpenIdConnectHandler.HandleRemoteAuthenticateAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync
- uid: System.Threading.Tasks.Task{AuthenticateResult}
  commentId: T:System.Threading.Tasks.Task{AuthenticateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticateResult>
  nameWithType: Task<AuthenticateResult>
  fullName: System.Threading.Tasks.Task<AuthenticateResult>
  nameWithType.vb: Task(Of AuthenticateResult)
  fullName.vb: System.Threading.Tasks.Task(Of AuthenticateResult)
  name.vb: Task(Of AuthenticateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: AuthenticateResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: AuthenticateResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync
  isExternal: false
  name: RedeemAuthorizationCodeAsync
  nameWithType: OpenIdConnectHandler.RedeemAuthorizationCodeAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.RedeemAuthorizationCodeAsync
- uid: OpenIdConnectMessage
  isExternal: true
  name: OpenIdConnectMessage
  nameWithType: OpenIdConnectMessage
  fullName: OpenIdConnectMessage
- uid: System.Threading.Tasks.Task{OpenIdConnectMessage}
  commentId: T:System.Threading.Tasks.Task{OpenIdConnectMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OpenIdConnectMessage>
  nameWithType: Task<OpenIdConnectMessage>
  fullName: System.Threading.Tasks.Task<OpenIdConnectMessage>
  nameWithType.vb: Task(Of OpenIdConnectMessage)
  fullName.vb: System.Threading.Tasks.Task(Of OpenIdConnectMessage)
  name.vb: Task(Of OpenIdConnectMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenIdConnectMessage
    name: OpenIdConnectMessage
    nameWithType: OpenIdConnectMessage
    fullName: OpenIdConnectMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenIdConnectMessage
    name: OpenIdConnectMessage
    nameWithType: OpenIdConnectMessage
    fullName: OpenIdConnectMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync
  isExternal: false
  name: GetUserInformationAsync
  nameWithType: OpenIdConnectHandler.GetUserInformationAsync
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync
- uid: JwtSecurityToken
  isExternal: true
  name: JwtSecurityToken
  nameWithType: JwtSecurityToken
  fullName: JwtSecurityToken
- uid: AuthenticationTicket
  isExternal: true
  name: AuthenticationTicket
  nameWithType: AuthenticationTicket
  fullName: AuthenticationTicket
shouldSkipMarkup: true
