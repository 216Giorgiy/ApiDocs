### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  id: InjectChunk
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
  - Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
  langs:
  - csharp
  - vb
  name: InjectChunk
  nameWithType: InjectChunk
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InjectChunk
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  syntax:
    content: 'public class InjectChunk : Chunk'
    content.vb: >-
      Public Class InjectChunk
          Inherits Chunk
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  langs:
  - csharp
  - vb
  name: InjectChunk(String, String)
  nameWithType: InjectChunk.InjectChunk(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.InjectChunk(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nRepresents the chunk for an @inject statement.\n"
  example: []
  syntax:
    content: public InjectChunk(string typeName, string propertyName)
    parameters:
    - id: typeName
      type: System.String
      description: The type name of the property to be injected
    - id: propertyName
      type: System.String
      description: The member name of the property to be injected.
    content.vb: Public Sub New(typeName As String, propertyName As String)
  overload: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
  id: TypeName
  parent: Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  langs:
  - csharp
  - vb
  name: TypeName
  nameWithType: InjectChunk.TypeName
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TypeName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the type name of the property to be injected.\n"
  example: []
  syntax:
    content: public string TypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TypeName As String
  overload: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
  id: MemberName
  parent: Microsoft.AspNetCore.Mvc.Razor.InjectChunk
  langs:
  - csharp
  - vb
  name: MemberName
  nameWithType: InjectChunk.MemberName
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MemberName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/InjectChunk.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the name of the property to be injected.\n"
  example: []
  syntax:
    content: public string MemberName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MemberName As String
  overload: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.#ctor
  isExternal: false
  name: InjectChunk
  nameWithType: InjectChunk.InjectChunk
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.InjectChunk
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
  isExternal: false
  name: TypeName
  nameWithType: InjectChunk.TypeName
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.TypeName
- uid: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
  isExternal: false
  name: MemberName
  nameWithType: InjectChunk.MemberName
  fullName: Microsoft.AspNetCore.Mvc.Razor.InjectChunk.MemberName
shouldSkipMarkup: true
