### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  id: TagHelperOutput
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList,System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}})
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(HtmlEncoder)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean,HtmlEncoder)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize(System.String,TagMode)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo(System.IO.TextWriter,HtmlEncoder)
  langs:
  - csharp
  - vb
  name: TagHelperOutput
  nameWithType: TagHelperOutput
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperOutput
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nClass used to represent the output of an <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class TagHelperOutput : IHtmlContentContainer'
    content.vb: >-
      Public Class TagHelperOutput
          Inherits IHtmlContentContainer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList,System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}})
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList,System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}})
  id: '#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList,System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}})'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: TagHelperOutput(String, TagHelperAttributeList, Func<Boolean, HtmlEncoder, Task<TagHelperContent>>)
  nameWithType: TagHelperOutput.TagHelperOutput(String, TagHelperAttributeList, Func<Boolean, HtmlEncoder, Task<TagHelperContent>>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagHelperOutput(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList, System.Func<System.Boolean, HtmlEncoder, System.Threading.Tasks.Task<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent>>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TagHelperOutput(string tagName, TagHelperAttributeList attributes, Func<bool, HtmlEncoder, Task<TagHelperContent>> getChildContentAsync)
    parameters:
    - id: tagName
      type: System.String
      description: The HTML element's tag name.
    - id: attributes
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
      description: The HTML attributes.
    - id: getChildContentAsync
      type: System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}}
      description: "\nA delegate used to execute children asynchronously with the given <see cref=\"!:HtmlEncoder\"></see> in scope and\nreturn their rendered content.\n"
    content.vb: Public Sub New(tagName As String, attributes As TagHelperAttributeList, getChildContentAsync As Func(Of Boolean, HtmlEncoder, Task(Of TagHelperContent)))
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor*
  nameWithType.vb: TagHelperOutput.TagHelperOutput(String, TagHelperAttributeList, Func(Of Boolean, HtmlEncoder, Task(Of TagHelperContent)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagHelperOutput(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList, System.Func(Of System.Boolean, HtmlEncoder, System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent)))
  name.vb: TagHelperOutput(String, TagHelperAttributeList, Func(Of Boolean, HtmlEncoder, Task(Of TagHelperContent)))
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  id: TagName
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: TagName
  nameWithType: TagHelperOutput.TagName
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagName
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nThe HTML element's tag name.\n"
  remarks: "\nA whitespace or <code>null</code> value results in no start or end tag being rendered.\n"
  example: []
  syntax:
    content: public string TagName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TagName As String
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  id: PreElement
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: PreElement
  nameWithType: TagHelperOutput.PreElement
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PreElement
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nContent that precedes the HTML element.\n"
  remarks: Value is rendered before the HTML element.
  example: []
  syntax:
    content: public TagHelperContent PreElement { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    content.vb: Public ReadOnly Property PreElement As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  id: PreContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: PreContent
  nameWithType: TagHelperOutput.PreContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PreContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nThe HTML element's pre content.\n"
  remarks: Value is prepended to the <xref href="Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" data-throw-if-not-resolved="false"></xref>'s final output.
  example: []
  syntax:
    content: public TagHelperContent PreContent { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    content.vb: Public ReadOnly Property PreContent As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  id: Content
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: TagHelperOutput.Content
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Content
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGet or set the HTML element's main content.\n"
  remarks: >-
    Value occurs in the <xref href="Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" data-throw-if-not-resolved="false"></xref>'s final output after <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent" data-throw-if-not-resolved="false"></xref> and

    before <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public TagHelperContent Content { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    content.vb: Public Property Content As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  id: PostContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: PostContent
  nameWithType: TagHelperOutput.PostContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PostContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nThe HTML element's post content.\n"
  remarks: Value is appended to the <xref href="Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" data-throw-if-not-resolved="false"></xref>'s final output.
  example: []
  syntax:
    content: public TagHelperContent PostContent { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    content.vb: Public ReadOnly Property PostContent As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  id: PostElement
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: PostElement
  nameWithType: TagHelperOutput.PostElement
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PostElement
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nContent that follows the HTML element.\n"
  remarks: Value is rendered after the HTML element.
  example: []
  syntax:
    content: public TagHelperContent PostElement { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    content.vb: Public ReadOnly Property PostElement As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
  id: IsContentModified
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: IsContentModified
  nameWithType: TagHelperOutput.IsContentModified
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsContentModified
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 169
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\n<code>true</code> if <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content\" data-throw-if-not-resolved=\"false\"></xref> has been set, <code>false</code> otherwise.\n"
  example: []
  syntax:
    content: public bool IsContentModified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentModified As Boolean
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  id: TagMode
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: TagMode
  nameWithType: TagHelperOutput.TagMode
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagMode
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 180
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nSyntax of the element in the generated HTML.\n"
  example: []
  syntax:
    content: public TagMode TagMode { get; set; }
    parameters: []
    return:
      type: TagMode
    content.vb: Public Property TagMode As TagMode
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
  id: Attributes
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TagHelperOutput.Attributes
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Attributes
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 190
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nThe HTML element's attributes.\n"
  remarks: "\nMVC will HTML encode <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values when generating the start tag. It will not HTML encode\na <code>Microsoft.AspNetCore.Mvc.Rendering.HtmlString</code> instance. MVC converts most other types to a\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>, then HTML encodes the result.\n"
  example: []
  syntax:
    content: public TagHelperAttributeList Attributes { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
    content.vb: Public ReadOnly Property Attributes As TagHelperAttributeList
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize(System.String,TagMode)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize(System.String,TagMode)
  id: Reinitialize(System.String,TagMode)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: Reinitialize(String, TagMode)
  nameWithType: TagHelperOutput.Reinitialize(String, TagMode)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize(System.String, TagMode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reinitialize
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 197
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nClears the <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput\" data-throw-if-not-resolved=\"false\"></xref> and updates its state with the provided values.\n"
  example: []
  syntax:
    content: public void Reinitialize(string tagName, TagMode tagMode)
    parameters:
    - id: tagName
      type: System.String
      description: The tag name to use.
    - id: tagMode
      type: TagMode
      description: The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode" data-throw-if-not-resolved="false"></xref> to use.
    content.vb: Public Sub Reinitialize(tagName As String, tagMode As TagMode)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput
  id: SuppressOutput
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: SuppressOutput()
  nameWithType: TagHelperOutput.SuppressOutput()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SuppressOutput
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 219
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nChanges <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput\" data-throw-if-not-resolved=\"false\"></xref> to generate nothing.\n"
  remarks: "\nSets <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName\" data-throw-if-not-resolved=\"false\"></xref> to <code>null</code>, and clears <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement\" data-throw-if-not-resolved=\"false\"></xref> to suppress output.\n"
  example: []
  syntax:
    content: public void SuppressOutput()
    content.vb: Public Sub SuppressOutput
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync
  id: GetChildContentAsync
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: GetChildContentAsync()
  nameWithType: TagHelperOutput.GetChildContentAsync()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetChildContentAsync
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 238
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nExecutes children asynchronously and returns their rendered content.\n"
  remarks: "\nThis method is memoized. Multiple calls will not cause children to re-execute with the page's original\n<see cref=\"!:HtmlEncoder\"></see>.\n"
  example: []
  syntax:
    content: public Task<TagHelperContent> GetChildContentAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns content rendered by children.
    content.vb: Public Function GetChildContentAsync As Task(Of TagHelperContent)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean)
  id: GetChildContentAsync(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: GetChildContentAsync(Boolean)
  nameWithType: TagHelperOutput.GetChildContentAsync(Boolean)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetChildContentAsync
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 251
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nExecutes children asynchronously and returns their rendered content.\n"
  example: []
  syntax:
    content: public Task<TagHelperContent> GetChildContentAsync(bool useCachedResult)
    parameters:
    - id: useCachedResult
      type: System.Boolean
      description: "\nIf <code>true</code>, multiple calls will not cause children to re-execute with the page's original\n<see cref=\"!:HtmlEncoder\"></see>; returns cached content.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns content rendered by children.
    content.vb: Public Function GetChildContentAsync(useCachedResult As Boolean) As Task(Of TagHelperContent)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(HtmlEncoder)
  id: GetChildContentAsync(HtmlEncoder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: GetChildContentAsync(HtmlEncoder)
  nameWithType: TagHelperOutput.GetChildContentAsync(HtmlEncoder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetChildContentAsync
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 269
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nExecutes children asynchronously with the given <span class=\"paramref\">encoder</span> in scope and returns their\nrendered content.\n"
  remarks: "\nThis method is memoized. Multiple calls with the same <see cref=\"!:HtmlEncoder\"></see> instance will not cause\nchildren to re-execute with that encoder in scope.\n"
  example: []
  syntax:
    content: public Task<TagHelperContent> GetChildContentAsync(HtmlEncoder encoder)
    parameters:
    - id: encoder
      type: HtmlEncoder
      description: "\nThe <see cref=\"!:HtmlEncoder\"></see> to use when the page handles non-<see cref=\"!:IHtmlContent\"></see> C# expressions.\nIf <code>null</code>, executes children with the page's current <see cref=\"!:HtmlEncoder\"></see>.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns content rendered by children.
    content.vb: Public Function GetChildContentAsync(encoder As HtmlEncoder) As Task(Of TagHelperContent)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean,HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean,HtmlEncoder)
  id: GetChildContentAsync(System.Boolean,HtmlEncoder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: GetChildContentAsync(Boolean, HtmlEncoder)
  nameWithType: TagHelperOutput.GetChildContentAsync(Boolean, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean, HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetChildContentAsync
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 287
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nExecutes children asynchronously with the given <span class=\"paramref\">encoder</span> in scope and returns their\nrendered content.\n"
  example: []
  syntax:
    content: public Task<TagHelperContent> GetChildContentAsync(bool useCachedResult, HtmlEncoder encoder)
    parameters:
    - id: useCachedResult
      type: System.Boolean
      description: "\nIf <code>true</code>, multiple calls with the same <see cref=\"!:HtmlEncoder\"></see> will not cause children to\nre-execute; returns cached content.\n"
    - id: encoder
      type: HtmlEncoder
      description: "\nThe <see cref=\"!:HtmlEncoder\"></see> to use when the page handles non-<see cref=\"!:IHtmlContent\"></see> C# expressions.\nIf <code>null</code>, executes children with the page's current <see cref=\"!:HtmlEncoder\"></see>.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns content rendered by children.
    content.vb: Public Function GetChildContentAsync(useCachedResult As Boolean, encoder As HtmlEncoder) As Task(Of TagHelperContent)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo(System.IO.TextWriter,HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo(System.IO.TextWriter,HtmlEncoder)
  id: WriteTo(System.IO.TextWriter,HtmlEncoder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: TagHelperOutput.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo(System.IO.TextWriter, HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteTo
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperOutput.cs
    startLine: 398
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  syntax:
    content: public void WriteTo(TextWriter writer, HtmlEncoder encoder)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: encoder
      type: HtmlEncoder
    content.vb: Public Sub WriteTo(writer As TextWriter, encoder As HtmlEncoder)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperOutput
  nameWithType: TagHelperOutput
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor
  isExternal: false
  name: TagHelperOutput
  nameWithType: TagHelperOutput.TagHelperOutput
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagHelperOutput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperAttributeList
  nameWithType: TagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
- uid: System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}}
  commentId: T:System.Func{System.Boolean,HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}}
  parent: System
  definition: System.Func`3
  name: Func<Boolean, HtmlEncoder, Task<TagHelperContent>>
  nameWithType: Func<Boolean, HtmlEncoder, Task<TagHelperContent>>
  fullName: System.Func<System.Boolean, HtmlEncoder, System.Threading.Tasks.Task<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent>>
  nameWithType.vb: Func(Of Boolean, HtmlEncoder, Task(Of TagHelperContent))
  fullName.vb: System.Func(Of System.Boolean, HtmlEncoder, System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent))
  name.vb: Func(Of Boolean, HtmlEncoder, Task(Of TagHelperContent))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: HtmlEncoder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    name: TagHelperContent
    nameWithType: TagHelperContent
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: HtmlEncoder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    name: TagHelperContent
    nameWithType: TagHelperContent
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  isExternal: false
  name: TagName
  nameWithType: TagHelperOutput.TagName
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  isExternal: false
  name: PreElement
  nameWithType: TagHelperOutput.PreElement
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperContent
  nameWithType: TagHelperContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  isExternal: false
  name: PreContent
  nameWithType: TagHelperOutput.PreContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  isExternal: false
  name: Content
  nameWithType: TagHelperOutput.Content
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
  isExternal: false
  name: PostContent
  nameWithType: TagHelperOutput.PostContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  isExternal: false
  name: PostElement
  nameWithType: TagHelperOutput.PostElement
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
  isExternal: false
  name: IsContentModified
  nameWithType: TagHelperOutput.IsContentModified
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  isExternal: false
  name: TagMode
  nameWithType: TagHelperOutput.TagMode
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
- uid: TagMode
  isExternal: true
  name: TagMode
  nameWithType: TagMode
  fullName: TagMode
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
  isExternal: false
  name: Attributes
  nameWithType: TagHelperOutput.Attributes
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize
  isExternal: false
  name: Reinitialize
  nameWithType: TagHelperOutput.Reinitialize
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput
  isExternal: false
  name: SuppressOutput
  nameWithType: TagHelperOutput.SuppressOutput
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync
  isExternal: false
  name: GetChildContentAsync
  nameWithType: TagHelperOutput.GetChildContentAsync
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TagHelperContent>
  nameWithType: Task<TagHelperContent>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent>
  nameWithType.vb: Task(Of TagHelperContent)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent)
  name.vb: Task(Of TagHelperContent)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    name: TagHelperContent
    nameWithType: TagHelperContent
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
    name: TagHelperContent
    nameWithType: TagHelperContent
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: HtmlEncoder
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: HtmlEncoder
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: TagHelperOutput.WriteTo
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
shouldSkipMarkup: true
