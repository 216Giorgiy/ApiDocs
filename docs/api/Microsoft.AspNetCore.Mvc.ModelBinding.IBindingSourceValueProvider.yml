### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider
  id: IBindingSourceValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(BindingSource)
  langs:
  - csharp
  - vb
  name: IBindingSourceValueProvider
  nameWithType: IBindingSourceValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IBindingSourceValueProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IBindingSourceValueProvider
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IBindingSourceValueProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA value provider which can filter its contents based on <see cref=\"!:BindingSource\"></see>.\n"
  remarks: "\nValue providers are by-default included. If a model does not specify a <see cref=\"!:BindingSource\"></see>\nthen all value providers are valid.\n"
  example: []
  syntax:
    content: 'public interface IBindingSourceValueProvider : IValueProvider'
    content.vb: >-
      Public Interface IBindingSourceValueProvider
          Inherits IValueProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(BindingSource)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(BindingSource)
  id: Filter(BindingSource)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider
  langs:
  - csharp
  - vb
  name: Filter(BindingSource)
  nameWithType: IBindingSourceValueProvider.Filter(BindingSource)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(BindingSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IBindingSourceValueProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IBindingSourceValueProvider.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nFilters the value provider based on <span class=\"paramref\">bindingSource</span>.\n"
  example: []
  syntax:
    content: IValueProvider Filter(BindingSource bindingSource)
    parameters:
    - id: bindingSource
      type: BindingSource
      description: The <see cref="!:BindingSource"></see> associated with a model.
    return:
      type: IValueProvider
      description: "\nThe filtered value provider, or <code>null</code> if the value provider does not match\n<span class=\"paramref\">bindingSource</span>.\n"
    content.vb: Function Filter(bindingSource As BindingSource) As IValueProvider
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter*
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter
  isExternal: false
  name: Filter
  nameWithType: IBindingSourceValueProvider.Filter
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter
- uid: BindingSource
  isExternal: true
  name: BindingSource
  nameWithType: BindingSource
  fullName: BindingSource
- uid: IValueProvider
  isExternal: true
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: IValueProvider
shouldSkipMarkup: true
