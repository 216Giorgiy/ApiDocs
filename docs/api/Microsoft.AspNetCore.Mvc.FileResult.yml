### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.FileResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileResult
  id: FileResult
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.FileResult.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.FileResult.ContentType
  - Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  langs:
  - csharp
  - vb
  name: FileResult
  nameWithType: FileResult
  fullName: Microsoft.AspNetCore.Mvc.FileResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileResult
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRepresents an <xref href=\"Microsoft.AspNetCore.Mvc.ActionResult\" data-throw-if-not-resolved=\"false\"></xref> that when executed will\nwrite a file as the response.\n"
  example: []
  syntax:
    content: 'public abstract class FileResult : ActionResult'
    content.vb: >-
      Public MustInherit Class FileResult
          Inherits ActionResult
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionResult
  derivedClasses:
  - Microsoft.AspNetCore.Mvc.FileContentResult
  - Microsoft.AspNetCore.Mvc.FileStreamResult
  - Microsoft.AspNetCore.Mvc.PhysicalFileResult
  - Microsoft.AspNetCore.Mvc.VirtualFileResult
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  - Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.FileResult.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.FileResult.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.FileResult
  langs:
  - csharp
  - vb
  name: FileResult(String)
  nameWithType: FileResult.FileResult(String)
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileResult(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.FileResult\" data-throw-if-not-resolved=\"false\"></xref> instance with\nthe provided <span class=\"paramref\">contentType</span>.\n"
  example: []
  syntax:
    content: protected FileResult(string contentType)
    parameters:
    - id: contentType
      type: System.String
      description: The Content-Type header of the response.
    content.vb: Protected Sub New(contentType As String)
  overload: Microsoft.AspNetCore.Mvc.FileResult.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Mvc.FileResult.ContentType
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.ContentType
  id: ContentType
  parent: Microsoft.AspNetCore.Mvc.FileResult
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: FileResult.ContentType
  fullName: Microsoft.AspNetCore.Mvc.FileResult.ContentType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ContentType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the Content-Type header for the response.\n"
  example: []
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentType As String
  overload: Microsoft.AspNetCore.Mvc.FileResult.ContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  id: FileDownloadName
  parent: Microsoft.AspNetCore.Mvc.FileResult
  langs:
  - csharp
  - vb
  name: FileDownloadName
  nameWithType: FileResult.FileDownloadName
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileDownloadName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/FileResult.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the file name that will be used in the Content-Disposition header of the response.\n"
  example: []
  syntax:
    content: public string FileDownloadName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileDownloadName As String
  overload: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionResult
  nameWithType: ActionResult
  fullName: Microsoft.AspNetCore.Mvc.ActionResult
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: true
  name: ExecuteResultAsync(ActionContext)
  nameWithType: ActionResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: true
  name: ExecuteResult(ActionContext)
  nameWithType: ActionResult.ExecuteResult(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.FileResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileResult
  nameWithType: FileResult
  fullName: Microsoft.AspNetCore.Mvc.FileResult
- uid: Microsoft.AspNetCore.Mvc.FileResult.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileResult.#ctor
  isExternal: false
  name: FileResult
  nameWithType: FileResult.FileResult
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.FileResult.ContentType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileResult.ContentType
  isExternal: false
  name: ContentType
  nameWithType: FileResult.ContentType
  fullName: Microsoft.AspNetCore.Mvc.FileResult.ContentType
- uid: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  isExternal: false
  name: FileDownloadName
  nameWithType: FileResult.FileDownloadName
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
shouldSkipMarkup: true
