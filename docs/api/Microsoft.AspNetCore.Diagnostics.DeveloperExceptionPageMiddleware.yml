### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  commentId: T:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  id: DeveloperExceptionPageMiddleware
  parent: Microsoft.AspNetCore.Diagnostics
  children:
  - Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor(RequestDelegate,IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions},ILoggerFactory,IHostingEnvironment,System.Diagnostics.DiagnosticSource)
  - Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext)
  langs:
  - csharp
  - vb
  name: DeveloperExceptionPageMiddleware
  nameWithType: DeveloperExceptionPageMiddleware
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: DeveloperExceptionPageMiddleware
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nCaptures synchronous and asynchronous exceptions from the pipeline and generates HTML error responses.\n"
  example: []
  syntax:
    content: public class DeveloperExceptionPageMiddleware
    content.vb: Public Class DeveloperExceptionPageMiddleware
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor(RequestDelegate,IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions},ILoggerFactory,IHostingEnvironment,System.Diagnostics.DiagnosticSource)
  commentId: M:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor(RequestDelegate,IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions},ILoggerFactory,IHostingEnvironment,System.Diagnostics.DiagnosticSource)
  id: '#ctor(RequestDelegate,IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions},ILoggerFactory,IHostingEnvironment,System.Diagnostics.DiagnosticSource)'
  parent: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  langs:
  - csharp
  - vb
  name: DeveloperExceptionPageMiddleware(RequestDelegate, IOptions<DeveloperExceptionPageOptions>, ILoggerFactory, IHostingEnvironment, DiagnosticSource)
  nameWithType: DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware(RequestDelegate, IOptions<DeveloperExceptionPageOptions>, ILoggerFactory, IHostingEnvironment, DiagnosticSource)
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware(RequestDelegate, IOptions<Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions>, ILoggerFactory, IHostingEnvironment, System.Diagnostics.DiagnosticSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public DeveloperExceptionPageMiddleware(RequestDelegate next, IOptions<DeveloperExceptionPageOptions> options, ILoggerFactory loggerFactory, IHostingEnvironment hostingEnvironment, DiagnosticSource diagnosticSource)
    parameters:
    - id: next
      type: RequestDelegate
      description: ''
    - id: options
      type: IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions}
      description: ''
    - id: loggerFactory
      type: ILoggerFactory
      description: ''
    - id: hostingEnvironment
      type: IHostingEnvironment
      description: ''
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
      description: ''
    content.vb: Public Sub New(next As RequestDelegate, options As IOptions(Of DeveloperExceptionPageOptions), loggerFactory As ILoggerFactory, hostingEnvironment As IHostingEnvironment, diagnosticSource As DiagnosticSource)
  overload: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor*
  nameWithType.vb: DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware(RequestDelegate, IOptions(Of DeveloperExceptionPageOptions), ILoggerFactory, IHostingEnvironment, DiagnosticSource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware(RequestDelegate, IOptions(Of Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions), ILoggerFactory, IHostingEnvironment, System.Diagnostics.DiagnosticSource)
  name.vb: DeveloperExceptionPageMiddleware(RequestDelegate, IOptions(Of DeveloperExceptionPageOptions), ILoggerFactory, IHostingEnvironment, DiagnosticSource)
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext)
  commentId: M:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext)
  id: Invoke(HttpContext)
  parent: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  langs:
  - csharp
  - vb
  name: Invoke(HttpContext)
  nameWithType: DeveloperExceptionPageMiddleware.Invoke(HttpContext)
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Invoke
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/DeveloperExceptionPageMiddleware.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nProcess an individual request.\n"
  example: []
  syntax:
    content: public Task Invoke(HttpContext context)
    parameters:
    - id: context
      type: HttpContext
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Invoke(context As HttpContext) As Task
  overload: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics
  commentId: N:Microsoft.AspNetCore.Diagnostics
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics
  nameWithType: Microsoft.AspNetCore.Diagnostics
  fullName: Microsoft.AspNetCore.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  commentId: T:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
  isExternal: false
  name: DeveloperExceptionPageMiddleware
  nameWithType: DeveloperExceptionPageMiddleware
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.#ctor
  isExternal: false
  name: DeveloperExceptionPageMiddleware
  nameWithType: DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.DeveloperExceptionPageMiddleware
- uid: RequestDelegate
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: RequestDelegate
- uid: IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions}'
  definition: IOptions`1
  name: IOptions<DeveloperExceptionPageOptions>
  nameWithType: IOptions<DeveloperExceptionPageOptions>
  fullName: IOptions<Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions>
  nameWithType.vb: IOptions(Of DeveloperExceptionPageOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions)
  name.vb: IOptions(Of DeveloperExceptionPageOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
    name: DeveloperExceptionPageOptions
    nameWithType: DeveloperExceptionPageOptions
    fullName: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
    name: DeveloperExceptionPageOptions
    nameWithType: DeveloperExceptionPageOptions
    fullName: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: IHostingEnvironment
- uid: System.Diagnostics.DiagnosticSource
  commentId: '!:System.Diagnostics.DiagnosticSource'
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: System.Diagnostics.DiagnosticSource
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke
  isExternal: false
  name: Invoke
  nameWithType: DeveloperExceptionPageMiddleware.Invoke
  fullName: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
