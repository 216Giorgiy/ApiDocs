### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  id: CommandLineConfigurationProvider
  parent: Microsoft.Extensions.Configuration.CommandLine
  children:
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(IEnumerable{System.String},IDictionary{System.String,System.String})
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationProvider
  nameWithType: CommandLineConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CommandLineConfigurationProvider
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nA command line based <see cref=\"!:ConfigurationProvider\"></see>.\n"
  example: []
  syntax:
    content: 'public class CommandLineConfigurationProvider : ConfigurationProvider'
    content.vb: >-
      Public Class CommandLineConfigurationProvider
          Inherits ConfigurationProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(IEnumerable{System.String},IDictionary{System.String,System.String})
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(IEnumerable{System.String},IDictionary{System.String,System.String})
  id: '#ctor(IEnumerable{System.String},IDictionary{System.String,System.String})'
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationProvider(IEnumerable<String>, IDictionary<String, String>)
  nameWithType: CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable<String>, IDictionary<String, String>)
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable<System.String>, IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public CommandLineConfigurationProvider(IEnumerable<string> args, IDictionary<string, string> switchMappings = null)
    parameters:
    - id: args
      type: IEnumerable{System.String}
      description: The command line args.
    - id: switchMappings
      type: IDictionary{System.String,System.String}
      description: The switch mappings.
    content.vb: Public Sub New(args As IEnumerable(Of String), switchMappings As IDictionary(Of String, String) = Nothing)
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor*
  nameWithType.vb: CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable(Of String), IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable(Of System.String), IDictionary(Of System.String, System.String))
  name.vb: CommandLineConfigurationProvider(IEnumerable(Of String), IDictionary(Of String, String))
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  id: Args
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: CommandLineConfigurationProvider.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Args
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 38
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nThe command line arguments.\n"
  example: []
  syntax:
    content: protected IEnumerable<string> Args { get; }
    parameters: []
    return:
      type: IEnumerable{System.String}
    content.vb: Protected ReadOnly Property Args As IEnumerable(Of String)
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  id: Load
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: CommandLineConfigurationProvider.Load()
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Load
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nLoads the configuration data from the command line args.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Extensions.Configuration.CommandLine
  commentId: N:Microsoft.Extensions.Configuration.CommandLine
  isExternal: false
  name: Microsoft.Extensions.Configuration.CommandLine
  nameWithType: Microsoft.Extensions.Configuration.CommandLine
  fullName: Microsoft.Extensions.Configuration.CommandLine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor
  isExternal: false
  name: CommandLineConfigurationProvider
  nameWithType: CommandLineConfigurationProvider.CommandLineConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.CommandLineConfigurationProvider
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  isExternal: false
  name: Args
  nameWithType: CommandLineConfigurationProvider.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  isExternal: false
  name: Load
  nameWithType: CommandLineConfigurationProvider.Load
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
shouldSkipMarkup: true
