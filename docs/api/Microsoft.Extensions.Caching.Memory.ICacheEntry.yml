### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
  commentId: T:Microsoft.Extensions.Caching.Memory.ICacheEntry
  id: ICacheEntry
  parent: Microsoft.Extensions.Caching.Memory
  children:
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
  langs:
  - csharp
  - vb
  name: ICacheEntry
  nameWithType: ICacheEntry
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: ICacheEntry
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nRepresents an entry in the <xref href=\"Microsoft.Extensions.Caching.Memory.IMemoryCache\" data-throw-if-not-resolved=\"false\"></xref> implementation.\n"
  example: []
  syntax:
    content: 'public interface ICacheEntry : IDisposable'
    content.vb: >-
      Public Interface ICacheEntry
          Inherits IDisposable
  extensionMethods:
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(IChangeToken)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(System.Object)
  - Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
  id: Key
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: ICacheEntry.Key
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Key
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets the key of the cache entry.\n"
  example: []
  syntax:
    content: object Key { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property Key As Object
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.Key*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
  id: Value
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ICacheEntry.Value
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Value
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or set the value of the cache entry.\n"
  example: []
  syntax:
    content: object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property Value As Object
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.Value*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
  id: AbsoluteExpiration
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: AbsoluteExpiration
  nameWithType: ICacheEntry.AbsoluteExpiration
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: AbsoluteExpiration
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets an absolute expiration date for the cache entry.\n"
  example: []
  syntax:
    content: DateTimeOffset? AbsoluteExpiration { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Property AbsoluteExpiration As DateTimeOffset?
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
  id: AbsoluteExpirationRelativeToNow
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: AbsoluteExpirationRelativeToNow
  nameWithType: ICacheEntry.AbsoluteExpirationRelativeToNow
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: AbsoluteExpirationRelativeToNow
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets an absolute expiration time, relative to now.\n"
  example: []
  syntax:
    content: TimeSpan? AbsoluteExpirationRelativeToNow { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Property AbsoluteExpirationRelativeToNow As TimeSpan?
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
  id: SlidingExpiration
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: SlidingExpiration
  nameWithType: ICacheEntry.SlidingExpiration
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SlidingExpiration
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 38
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets how long a cache entry can be inactive (e.g. not accessed) before it will be removed.\nThis will not extend the entry lifetime beyond the absolute expiration (if set).\n"
  example: []
  syntax:
    content: TimeSpan? SlidingExpiration { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Property SlidingExpiration As TimeSpan?
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
  id: ExpirationTokens
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: ExpirationTokens
  nameWithType: ICacheEntry.ExpirationTokens
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: ExpirationTokens
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets the <see cref=\"!:IChangeToken\"></see> instances which cause the cache entry to expire.\n"
  example: []
  syntax:
    content: IList<IChangeToken> ExpirationTokens { get; }
    parameters: []
    return:
      type: IList{IChangeToken}
    content.vb: ReadOnly Property ExpirationTokens As IList(Of IChangeToken)
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
  id: PostEvictionCallbacks
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: PostEvictionCallbacks
  nameWithType: ICacheEntry.PostEvictionCallbacks
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: PostEvictionCallbacks
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 48
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets the callbacks will be fired after the cache entry is evicted from the cache.\n"
  example: []
  syntax:
    content: IList<PostEvictionCallbackRegistration> PostEvictionCallbacks { get; }
    parameters: []
    return:
      type: IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}
    content.vb: ReadOnly Property PostEvictionCallbacks As IList(Of PostEvictionCallbackRegistration)
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
  commentId: P:Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
  id: Priority
  parent: Microsoft.Extensions.Caching.Memory.ICacheEntry
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: ICacheEntry.Priority
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Priority
    path: ../aspnet/Caching/src/Microsoft.Extensions.Caching.Abstractions/ICacheEntry.cs
    startLine: 54
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets the priority for keeping the cache entry in the cache during a\nmemory pressure triggered cleanup. The default is <xref href=\"Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: CacheItemPriority Priority { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    content.vb: Property Priority As CacheItemPriority
  overload: Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority*
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  name: SetPriority(CacheItemPriority)
  nameWithType: CacheEntryExtensions.SetPriority(CacheItemPriority)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: CacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: CacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(IChangeToken)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
  name: AddExpirationToken(IChangeToken)
  nameWithType: CacheEntryExtensions.AddExpirationToken(IChangeToken)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(IChangeToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(IChangeToken)
    name: AddExpirationToken
    nameWithType: CacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(IChangeToken)
    name: AddExpirationToken
    nameWithType: CacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  name: SetAbsoluteExpiration(TimeSpan)
  nameWithType: CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
  name: SetAbsoluteExpiration(DateTimeOffset)
  nameWithType: CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  name: SetSlidingExpiration(TimeSpan)
  nameWithType: CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
    name: SetSlidingExpiration
    nameWithType: CacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(TimeSpan)
    name: SetSlidingExpiration
    nameWithType: CacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  name: RegisterPostEvictionCallback(PostEvictionDelegate)
  nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback(PostEvictionDelegate)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  name: RegisterPostEvictionCallback(PostEvictionDelegate, Object)
  nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback(PostEvictionDelegate, Object)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
  name: SetValue(Object)
  nameWithType: CacheEntryExtensions.SetValue(Object)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(System.Object)
    name: SetValue
    nameWithType: CacheEntryExtensions.SetValue
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(System.Object)
    name: SetValue
    nameWithType: CacheEntryExtensions.SetValue
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  parent: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  name: SetOptions(MemoryCacheEntryOptions)
  nameWithType: CacheEntryExtensions.SetOptions(MemoryCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
    name: SetOptions
    nameWithType: CacheEntryExtensions.SetOptions
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
    name: SetOptions
    nameWithType: CacheEntryExtensions.SetOptions
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  isExternal: false
  name: SetPriority(ICacheEntry, CacheItemPriority)
  nameWithType: CacheEntryExtensions.SetPriority(ICacheEntry, CacheItemPriority)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry, Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: CacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: CacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  commentId: T:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: CacheEntryExtensions
  nameWithType: CacheEntryExtensions
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
  isExternal: true
  name: AddExpirationToken(ICacheEntry, IChangeToken)
  nameWithType: CacheEntryExtensions.AddExpirationToken(ICacheEntry, IChangeToken)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry, IChangeToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
    name: AddExpirationToken
    nameWithType: CacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.ICacheEntry,IChangeToken)
    name: AddExpirationToken
    nameWithType: CacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  isExternal: true
  name: SetAbsoluteExpiration(ICacheEntry, TimeSpan)
  nameWithType: CacheEntryExtensions.SetAbsoluteExpiration(ICacheEntry, TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry, TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
  isExternal: true
  name: SetAbsoluteExpiration(ICacheEntry, DateTimeOffset)
  nameWithType: CacheEntryExtensions.SetAbsoluteExpiration(ICacheEntry, DateTimeOffset)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry, DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: CacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
  isExternal: true
  name: SetSlidingExpiration(ICacheEntry, TimeSpan)
  nameWithType: CacheEntryExtensions.SetSlidingExpiration(ICacheEntry, TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry, TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
    name: SetSlidingExpiration
    nameWithType: CacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,TimeSpan)
    name: SetSlidingExpiration
    nameWithType: CacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  isExternal: false
  name: RegisterPostEvictionCallback(ICacheEntry, PostEvictionDelegate)
  nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback(ICacheEntry, PostEvictionDelegate)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  isExternal: true
  name: RegisterPostEvictionCallback(ICacheEntry, PostEvictionDelegate, Object)
  nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback(ICacheEntry, PostEvictionDelegate, Object)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: CacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
  isExternal: true
  name: SetValue(ICacheEntry, Object)
  nameWithType: CacheEntryExtensions.SetValue(ICacheEntry, Object)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
    name: SetValue
    nameWithType: CacheEntryExtensions.SetValue
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Object)
    name: SetValue
    nameWithType: CacheEntryExtensions.SetValue
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  isExternal: false
  name: SetOptions(ICacheEntry, MemoryCacheEntryOptions)
  nameWithType: CacheEntryExtensions.SetOptions(ICacheEntry, MemoryCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry, Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
    name: SetOptions
    nameWithType: CacheEntryExtensions.SetOptions
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions(Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions)
    name: SetOptions
    nameWithType: CacheEntryExtensions.SetOptions
    fullName: Microsoft.Extensions.Caching.Memory.CacheEntryExtensions.SetOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.ICacheEntry
    name: ICacheEntry
    nameWithType: ICacheEntry
    fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Key*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
  isExternal: false
  name: Key
  nameWithType: ICacheEntry.Key
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Key
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Value*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
  isExternal: false
  name: Value
  nameWithType: ICacheEntry.Value
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Value
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
  isExternal: false
  name: AbsoluteExpiration
  nameWithType: ICacheEntry.AbsoluteExpiration
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpiration
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
  isExternal: false
  name: AbsoluteExpirationRelativeToNow
  nameWithType: ICacheEntry.AbsoluteExpirationRelativeToNow
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.AbsoluteExpirationRelativeToNow
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
  isExternal: false
  name: SlidingExpiration
  nameWithType: ICacheEntry.SlidingExpiration
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.SlidingExpiration
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
  isExternal: false
  name: ExpirationTokens
  nameWithType: ICacheEntry.ExpirationTokens
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.ExpirationTokens
- uid: IList{IChangeToken}
  commentId: '!:IList{IChangeToken}'
  definition: IList`1
  name: IList<IChangeToken>
  nameWithType: IList<IChangeToken>
  fullName: IList<IChangeToken>
  nameWithType.vb: IList(Of IChangeToken)
  fullName.vb: IList(Of IChangeToken)
  name.vb: IList(Of IChangeToken)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
  isExternal: false
  name: PostEvictionCallbacks
  nameWithType: ICacheEntry.PostEvictionCallbacks
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.PostEvictionCallbacks
- uid: IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}
  commentId: '!:IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}'
  definition: IList`1
  name: IList<PostEvictionCallbackRegistration>
  nameWithType: IList<PostEvictionCallbackRegistration>
  fullName: IList<Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration>
  nameWithType.vb: IList(Of PostEvictionCallbackRegistration)
  fullName.vb: IList(Of Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration)
  name.vb: IList(Of PostEvictionCallbackRegistration)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
    name: PostEvictionCallbackRegistration
    nameWithType: PostEvictionCallbackRegistration
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
    name: PostEvictionCallbackRegistration
    nameWithType: PostEvictionCallbackRegistration
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal
  commentId: F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal
- uid: Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority*
  commentId: Overload:Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
  isExternal: false
  name: Priority
  nameWithType: ICacheEntry.Priority
  fullName: Microsoft.Extensions.Caching.Memory.ICacheEntry.Priority
- uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  commentId: T:Microsoft.Extensions.Caching.Memory.CacheItemPriority
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
shouldSkipMarkup: true
