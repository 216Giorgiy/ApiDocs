### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  id: AzureWebAppDiagnosticsSettings
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  children:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BackgroundQueueSize
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobBatchSize
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobCommitPeriod
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobName
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.FileSizeLimit
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.OutputTemplate
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.RetainedFileCountLimit
  langs:
  - csharp
  - vb
  name: AzureWebAppDiagnosticsSettings
  nameWithType: AzureWebAppDiagnosticsSettings
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: AzureWebAppDiagnosticsSettings
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nSettings for <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsLoggerProvider\"></see>.\n"
  example: []
  syntax:
    content: public class AzureWebAppDiagnosticsSettings
    content.vb: Public Class AzureWebAppDiagnosticsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.FileSizeLimit
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.FileSizeLimit
  id: FileSizeLimit
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: FileSizeLimit
  nameWithType: AzureWebAppDiagnosticsSettings.FileSizeLimit
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.FileSizeLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: FileSizeLimit
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets a strictly positive value representing the maximum log size in bytes. Once the log is full, no more message will be appended.\n"
  example: []
  syntax:
    content: public int FileSizeLimit { get; set; }
    content.vb: Public Property FileSizeLimit As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.RetainedFileCountLimit
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.RetainedFileCountLimit
  id: RetainedFileCountLimit
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: RetainedFileCountLimit
  nameWithType: AzureWebAppDiagnosticsSettings.RetainedFileCountLimit
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.RetainedFileCountLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: RetainedFileCountLimit
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets a strictly positive value representing the maximum retained file count.\n"
  example: []
  syntax:
    content: public int RetainedFileCountLimit { get; set; }
    content.vb: Public Property RetainedFileCountLimit As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.OutputTemplate
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.OutputTemplate
  id: OutputTemplate
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: OutputTemplate
  nameWithType: AzureWebAppDiagnosticsSettings.OutputTemplate
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.OutputTemplate
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: OutputTemplate
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets a message template describing the output messages.\n"
  example: []
  syntax:
    content: public string OutputTemplate { get; set; }
    content.vb: Public Property OutputTemplate As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobBatchSize
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobBatchSize
  id: BlobBatchSize
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: BlobBatchSize
  nameWithType: AzureWebAppDiagnosticsSettings.BlobBatchSize
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobBatchSize
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: BlobBatchSize
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets a maximum number of events to include in a single blob append batch.\n"
  example: []
  syntax:
    content: public int BlobBatchSize { get; set; }
    content.vb: Public Property BlobBatchSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobCommitPeriod
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobCommitPeriod
  id: BlobCommitPeriod
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: BlobCommitPeriod
  nameWithType: AzureWebAppDiagnosticsSettings.BlobCommitPeriod
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobCommitPeriod
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: BlobCommitPeriod
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets a time to wait between checking for blob log batches.\n"
  example: []
  syntax:
    content: public TimeSpan BlobCommitPeriod { get; set; }
    content.vb: Public Property BlobCommitPeriod As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobName
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobName
  id: BlobName
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: BlobName
  nameWithType: AzureWebAppDiagnosticsSettings.BlobName
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BlobName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: BlobName
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 40
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  summary: "\nGets or sets the last section of log blob name.\n"
  example: []
  syntax:
    content: public string BlobName { get; set; }
    content.vb: Public Property BlobName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BackgroundQueueSize
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BackgroundQueueSize
  id: BackgroundQueueSize
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings
  langs:
  - csharp
  - vb
  name: BackgroundQueueSize
  nameWithType: AzureWebAppDiagnosticsSettings.BackgroundQueueSize
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.AzureWebAppDiagnosticsSettings.BackgroundQueueSize
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: BackgroundQueueSize
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/AzureWebAppDiagnosticsSettings.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  example: []
  syntax:
    content: public int BackgroundQueueSize { get; set; }
    content.vb: Public Property BackgroundQueueSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  commentId: N:Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  isExternal: false
  name: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  nameWithType: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
