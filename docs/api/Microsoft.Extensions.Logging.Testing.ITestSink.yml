### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Testing.ITestSink
  commentId: T:Microsoft.Extensions.Logging.Testing.ITestSink
  id: ITestSink
  parent: Microsoft.Extensions.Logging.Testing
  children:
  - Microsoft.Extensions.Logging.Testing.ITestSink.Begin(Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  - Microsoft.Extensions.Logging.Testing.ITestSink.BeginEnabled
  - Microsoft.Extensions.Logging.Testing.ITestSink.Scopes
  - Microsoft.Extensions.Logging.Testing.ITestSink.Write(Microsoft.Extensions.Logging.Testing.WriteContext)
  - Microsoft.Extensions.Logging.Testing.ITestSink.WriteEnabled
  - Microsoft.Extensions.Logging.Testing.ITestSink.Writes
  langs:
  - csharp
  - vb
  name: ITestSink
  nameWithType: ITestSink
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: ITestSink
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: public interface ITestSink
    content.vb: Public Interface ITestSink
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.WriteEnabled
  commentId: P:Microsoft.Extensions.Logging.Testing.ITestSink.WriteEnabled
  id: WriteEnabled
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: WriteEnabled
  nameWithType: ITestSink.WriteEnabled
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.WriteEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: WriteEnabled
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: Func<WriteContext, bool> WriteEnabled { get; set; }
    content.vb: Property WriteEnabled As Func(Of WriteContext, Boolean)
    parameters: []
    return:
      type: System.Func{Microsoft.Extensions.Logging.Testing.WriteContext,System.Boolean}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.BeginEnabled
  commentId: P:Microsoft.Extensions.Logging.Testing.ITestSink.BeginEnabled
  id: BeginEnabled
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: BeginEnabled
  nameWithType: ITestSink.BeginEnabled
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.BeginEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: BeginEnabled
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: Func<BeginScopeContext, bool> BeginEnabled { get; set; }
    content.vb: Property BeginEnabled As Func(Of BeginScopeContext, Boolean)
    parameters: []
    return:
      type: System.Func{Microsoft.Extensions.Logging.Testing.BeginScopeContext,System.Boolean}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.Scopes
  commentId: P:Microsoft.Extensions.Logging.Testing.ITestSink.Scopes
  id: Scopes
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: ITestSink.Scopes
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.Scopes
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Scopes
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: List<BeginScopeContext> Scopes { get; set; }
    content.vb: Property Scopes As List(Of BeginScopeContext)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.BeginScopeContext}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.Writes
  commentId: P:Microsoft.Extensions.Logging.Testing.ITestSink.Writes
  id: Writes
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: Writes
  nameWithType: ITestSink.Writes
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.Writes
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Writes
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: List<WriteContext> Writes { get; set; }
    content.vb: Property Writes As List(Of WriteContext)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.WriteContext}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.Write(Microsoft.Extensions.Logging.Testing.WriteContext)
  commentId: M:Microsoft.Extensions.Logging.Testing.ITestSink.Write(Microsoft.Extensions.Logging.Testing.WriteContext)
  id: Write(Microsoft.Extensions.Logging.Testing.WriteContext)
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: Write(WriteContext)
  nameWithType: ITestSink.Write(WriteContext)
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.Write(Microsoft.Extensions.Logging.Testing.WriteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Write
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: void Write(WriteContext context)
    content.vb: Sub Write(context As WriteContext)
    parameters:
    - id: context
      type: Microsoft.Extensions.Logging.Testing.WriteContext
- uid: Microsoft.Extensions.Logging.Testing.ITestSink.Begin(Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  commentId: M:Microsoft.Extensions.Logging.Testing.ITestSink.Begin(Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  id: Begin(Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  parent: Microsoft.Extensions.Logging.Testing.ITestSink
  langs:
  - csharp
  - vb
  name: Begin(BeginScopeContext)
  nameWithType: ITestSink.Begin(BeginScopeContext)
  fullName: Microsoft.Extensions.Logging.Testing.ITestSink.Begin(Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Begin
    path: src/Microsoft.Extensions.Logging.Testing/ITestSink.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: void Begin(BeginScopeContext context)
    content.vb: Sub Begin(context As BeginScopeContext)
    parameters:
    - id: context
      type: Microsoft.Extensions.Logging.Testing.BeginScopeContext
references:
- uid: Microsoft.Extensions.Logging.Testing
  commentId: N:Microsoft.Extensions.Logging.Testing
  isExternal: false
  name: Microsoft.Extensions.Logging.Testing
  nameWithType: Microsoft.Extensions.Logging.Testing
  fullName: Microsoft.Extensions.Logging.Testing
- uid: System.Func{Microsoft.Extensions.Logging.Testing.WriteContext,System.Boolean}
  commentId: T:System.Func{Microsoft.Extensions.Logging.Testing.WriteContext,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<WriteContext, Boolean>
  nameWithType: Func<WriteContext, Boolean>
  fullName: System.Func<Microsoft.Extensions.Logging.Testing.WriteContext, System.Boolean>
  nameWithType.vb: Func(Of WriteContext, Boolean)
  fullname.vb: System.Func(Of Microsoft.Extensions.Logging.Testing.WriteContext, System.Boolean)
  name.vb: Func(Of WriteContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.Testing.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Microsoft.Extensions.Logging.Testing.WriteContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.Testing.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Microsoft.Extensions.Logging.Testing.WriteContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{Microsoft.Extensions.Logging.Testing.BeginScopeContext,System.Boolean}
  commentId: T:System.Func{Microsoft.Extensions.Logging.Testing.BeginScopeContext,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<BeginScopeContext, Boolean>
  nameWithType: Func<BeginScopeContext, Boolean>
  fullName: System.Func<Microsoft.Extensions.Logging.Testing.BeginScopeContext, System.Boolean>
  nameWithType.vb: Func(Of BeginScopeContext, Boolean)
  fullname.vb: System.Func(Of Microsoft.Extensions.Logging.Testing.BeginScopeContext, System.Boolean)
  name.vb: Func(Of BeginScopeContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.Testing.BeginScopeContext
    name: BeginScopeContext
    nameWithType: BeginScopeContext
    fullName: Microsoft.Extensions.Logging.Testing.BeginScopeContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.Testing.BeginScopeContext
    name: BeginScopeContext
    nameWithType: BeginScopeContext
    fullName: Microsoft.Extensions.Logging.Testing.BeginScopeContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.BeginScopeContext}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.BeginScopeContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BeginScopeContext>
  nameWithType: List<BeginScopeContext>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.Logging.Testing.BeginScopeContext>
  nameWithType.vb: List(Of BeginScopeContext)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.Logging.Testing.BeginScopeContext)
  name.vb: List(Of BeginScopeContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.Testing.BeginScopeContext
    name: BeginScopeContext
    nameWithType: BeginScopeContext
    fullName: Microsoft.Extensions.Logging.Testing.BeginScopeContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.Testing.BeginScopeContext
    name: BeginScopeContext
    nameWithType: BeginScopeContext
    fullName: Microsoft.Extensions.Logging.Testing.BeginScopeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.WriteContext}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.Logging.Testing.WriteContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<WriteContext>
  nameWithType: List<WriteContext>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.Logging.Testing.WriteContext>
  nameWithType.vb: List(Of WriteContext)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.Logging.Testing.WriteContext)
  name.vb: List(Of WriteContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.Testing.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Microsoft.Extensions.Logging.Testing.WriteContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.Testing.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Microsoft.Extensions.Logging.Testing.WriteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Testing.WriteContext
  commentId: T:Microsoft.Extensions.Logging.Testing.WriteContext
  parent: Microsoft.Extensions.Logging.Testing
  isExternal: false
  name: WriteContext
  nameWithType: WriteContext
  fullName: Microsoft.Extensions.Logging.Testing.WriteContext
- uid: Microsoft.Extensions.Logging.Testing.BeginScopeContext
  commentId: T:Microsoft.Extensions.Logging.Testing.BeginScopeContext
  parent: Microsoft.Extensions.Logging.Testing
  isExternal: false
  name: BeginScopeContext
  nameWithType: BeginScopeContext
  fullName: Microsoft.Extensions.Logging.Testing.BeginScopeContext
