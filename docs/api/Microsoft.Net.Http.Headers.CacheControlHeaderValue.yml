### YamlMime:ManagedReference
items:
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  parent: Microsoft.Net.Http.Headers
  children:
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString
  - Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  - vb
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: CacheControlHeaderValue
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 11
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: 'public class CacheControlHeaderValue : object'
    content.vb: >-
      Public Class CacheControlHeaderValue
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 53
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public CacheControlHeaderValue()
    content.vb: Public Sub New
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: NoCache
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 58
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool NoCache { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoCache As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: NoCacheHeaders
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 64
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public ICollection<string> NoCacheHeaders { get; }
    parameters: []
    return:
      type: ICollection{System.String}
    content.vb: Public ReadOnly Property NoCacheHeaders As ICollection(Of String)
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: NoStore
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 76
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool NoStore { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoStore As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MaxAge
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 82
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public TimeSpan? MaxAge { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public Property MaxAge As TimeSpan?
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SharedMaxAge
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 88
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public TimeSpan? SharedMaxAge { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public Property SharedMaxAge As TimeSpan?
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MaxStale
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 94
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool MaxStale { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MaxStale As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MaxStaleLimit
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 100
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public TimeSpan? MaxStaleLimit { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public Property MaxStaleLimit As TimeSpan?
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MinFresh
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 106
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public TimeSpan? MinFresh { get; set; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public Property MinFresh As TimeSpan?
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: NoTransform
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 112
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool NoTransform { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoTransform As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: OnlyIfCached
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 118
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool OnlyIfCached { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OnlyIfCached As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Public
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 124
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool Public { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Public As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Private
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 130
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool Private { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Private As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: PrivateHeaders
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 136
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public ICollection<string> PrivateHeaders { get; }
    parameters: []
    return:
      type: ICollection{System.String}
    content.vb: Public ReadOnly Property PrivateHeaders As ICollection(Of String)
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MustRevalidate
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 148
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool MustRevalidate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MustRevalidate As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ProxyRevalidate
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 154
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ProxyRevalidate As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
  commentId: P:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Extensions
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 160
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public IList<NameValueHeaderValue> Extensions { get; }
    parameters: []
    return:
      type: IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}
    content.vb: Public ReadOnly Property Extensions As IList(Of NameValueHeaderValue)
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 172
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 241
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 280
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Parse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 324
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static CacheControlHeaderValue Parse(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: Microsoft.Net.Http.Headers.CacheControlHeaderValue
    content.vb: Public Shared Function Parse(input As String) As CacheControlHeaderValue
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.CacheControlHeaderValue@)
  commentId: M:Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,Microsoft.Net.Http.Headers.CacheControlHeaderValue@)
  parent: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String, out CacheControlHeaderValue)
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String, out Microsoft.Net.Http.Headers.CacheControlHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/CacheControlHeaderValue.cs
    startLine: 336
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParse(string input, out CacheControlHeaderValue parsedValue)
    parameters:
    - id: input
      type: System.String
    - id: parsedValue
      type: Microsoft.Net.Http.Headers.CacheControlHeaderValue
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As CacheControlHeaderValue) As Boolean
  overload: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  nameWithType.vb: CacheControlHeaderValue.TryParse(String, ByRef CacheControlHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String, ByRef Microsoft.Net.Http.Headers.CacheControlHeaderValue)
  name.vb: TryParse(String, ByRef CacheControlHeaderValue)
references:
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.#ctor
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: ICollection{System.String}
  commentId: '!:ICollection{System.String}'
  definition: ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}
  commentId: '!:IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}'
  definition: IList`1
  name: IList<NameValueHeaderValue>
  nameWithType: IList<NameValueHeaderValue>
  fullName: IList<Microsoft.Net.Http.Headers.NameValueHeaderValue>
  nameWithType.vb: IList(Of NameValueHeaderValue)
  fullName.vb: IList(Of Microsoft.Net.Http.Headers.NameValueHeaderValue)
  name.vb: IList(Of NameValueHeaderValue)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: Microsoft.Net.Http.Headers.NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: Microsoft.Net.Http.Headers.NameValueHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Equals
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.Parse
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.CacheControlHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue
- uid: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  commentId: Overload:Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
  fullName: Microsoft.Net.Http.Headers.CacheControlHeaderValue.TryParse
shouldSkipMarkup: true
