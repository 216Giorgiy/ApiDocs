### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  id: DefaultCorsPolicyProvider
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor(IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  - Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  langs:
  - csharp
  - vb
  name: DefaultCorsPolicyProvider
  nameWithType: DefaultCorsPolicyProvider
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: DefaultCorsPolicyProvider
    path: ../aspnet/CORS/src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nA type which can provide a <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy\" data-throw-if-not-resolved=\"false\"></xref> for a particular <see cref=\"!:HttpContext\"></see>.\n"
  example: []
  syntax:
    content: 'public class DefaultCorsPolicyProvider : ICorsPolicyProvider'
    content.vb: >-
      Public Class DefaultCorsPolicyProvider
          Implements ICorsPolicyProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor(IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor(IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  id: '#ctor(IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})'
  parent: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  langs:
  - csharp
  - vb
  name: DefaultCorsPolicyProvider(IOptions<CorsOptions>)
  nameWithType: DefaultCorsPolicyProvider.DefaultCorsPolicyProvider(IOptions<CorsOptions>)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.DefaultCorsPolicyProvider(IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: .ctor
    path: ../aspnet/CORS/src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DefaultCorsPolicyProvider(IOptions<CorsOptions> options)
    parameters:
    - id: options
      type: IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}
      description: The options configured for the application.
    content.vb: Public Sub New(options As IOptions(Of CorsOptions))
  overload: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor*
  nameWithType.vb: DefaultCorsPolicyProvider.DefaultCorsPolicyProvider(IOptions(Of CorsOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.DefaultCorsPolicyProvider(IOptions(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions))
  name.vb: DefaultCorsPolicyProvider(IOptions(Of CorsOptions))
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  id: GetPolicyAsync(HttpContext,System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(HttpContext, String)
  nameWithType: DefaultCorsPolicyProvider.GetPolicyAsync(HttpContext, String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(HttpContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: GetPolicyAsync
    path: ../aspnet/CORS/src/Microsoft.AspNetCore.Cors/Infrastructure/DefaultCorsPolicyProvider.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets a <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy\" data-throw-if-not-resolved=\"false\"></xref> from the given <code data-dev-comment-type=\"paramref\">context</code>\n"
  example: []
  syntax:
    content: public Task<CorsPolicy> GetPolicyAsync(HttpContext context, string policyName)
    parameters:
    - id: context
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with this call.
    - id: policyName
      type: System.String
      description: An optional policy name to look for.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
      description: A <xref href="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetPolicyAsync(context As HttpContext, policyName As String) As Task(Of CorsPolicy)
  overload: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync*
  implements:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: ICorsPolicyProvider
  nameWithType: ICorsPolicyProvider
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
  isExternal: false
  name: DefaultCorsPolicyProvider
  nameWithType: DefaultCorsPolicyProvider
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.#ctor
  isExternal: false
  name: DefaultCorsPolicyProvider
  nameWithType: DefaultCorsPolicyProvider.DefaultCorsPolicyProvider
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.DefaultCorsPolicyProvider
- uid: IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}'
  definition: IOptions`1
  name: IOptions<CorsOptions>
  nameWithType: IOptions<CorsOptions>
  fullName: IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions>
  nameWithType.vb: IOptions(Of CorsOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions)
  name.vb: IOptions(Of CorsOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
    name: CorsOptions
    nameWithType: CorsOptions
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
    name: CorsOptions
    nameWithType: CorsOptions
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync*
  commentId: Overload:Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync
  isExternal: false
  name: GetPolicyAsync
  nameWithType: DefaultCorsPolicyProvider.GetPolicyAsync
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  isExternal: true
  name: GetPolicyAsync(HttpContext, String)
  nameWithType: ICorsPolicyProvider.GetPolicyAsync(HttpContext, String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
    name: GetPolicyAsync
    nameWithType: ICorsPolicyProvider.GetPolicyAsync
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(HttpContext,System.String)
    name: GetPolicyAsync
    nameWithType: ICorsPolicyProvider.GetPolicyAsync
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CorsPolicy>
  nameWithType: Task<CorsPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy>
  nameWithType.vb: Task(Of CorsPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  name.vb: Task(Of CorsPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
