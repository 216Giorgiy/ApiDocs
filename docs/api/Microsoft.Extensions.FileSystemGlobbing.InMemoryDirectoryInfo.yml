### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  id: InMemoryDirectoryInfo
  parent: Microsoft.Extensions.FileSystemGlobbing
  children:
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name
  - Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory
  langs:
  - csharp
  - vb
  name: InMemoryDirectoryInfo
  nameWithType: InMemoryDirectoryInfo
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: InMemoryDirectoryInfo
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nAvoids using disk for uses like Pattern Matching.\n"
  example: []
  syntax:
    content: 'public class InMemoryDirectoryInfo : DirectoryInfoBase'
    content.vb: >-
      Public Class InMemoryDirectoryInfo
          Inherits DirectoryInfoBase
  inheritance:
  - System.Object
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: InMemoryDirectoryInfo(String, IEnumerable<String>)
  nameWithType: InMemoryDirectoryInfo.InMemoryDirectoryInfo(String, IEnumerable<String>)
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: .ctor
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nCreates a new InMemoryDirectoryInfo with the root directory and files given.\n"
  example: []
  syntax:
    content: public InMemoryDirectoryInfo(string rootDir, IEnumerable<string> files)
    content.vb: Public Sub New(rootDir As String, files As IEnumerable(Of String))
    parameters:
    - id: rootDir
      type: System.String
      description: The root directory that this FileSystem will use.
    - id: files
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Collection of file names. If relative paths <em>rootDir</em> will be prepended to the paths.
  nameWithType.vb: InMemoryDirectoryInfo.InMemoryDirectoryInfo(String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: InMemoryDirectoryInfo(String, IEnumerable(Of String))
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName
  id: FullName
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: InMemoryDirectoryInfo.FullName
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: FullName
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 65
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  example: []
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name
  id: Name
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InMemoryDirectoryInfo.Name
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: Name
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 68
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  example: []
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory
  id: ParentDirectory
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: ParentDirectory
  nameWithType: InMemoryDirectoryInfo.ParentDirectory
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: ParentDirectory
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 71
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  example: []
  syntax:
    content: public override DirectoryInfoBase ParentDirectory { get; }
    content.vb: Public Overrides ReadOnly Property ParentDirectory As DirectoryInfoBase
    parameters: []
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos
  id: EnumerateFileSystemInfos
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: EnumerateFileSystemInfos()
  nameWithType: InMemoryDirectoryInfo.EnumerateFileSystemInfos()
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: EnumerateFileSystemInfos
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 80
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  example: []
  syntax:
    content: public override IEnumerable<FileSystemInfoBase> EnumerateFileSystemInfos()
    content.vb: Public Overrides Function EnumerateFileSystemInfos As IEnumerable(Of FileSystemInfoBase)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: GetDirectory(String)
  nameWithType: InMemoryDirectoryInfo.GetDirectory(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: GetDirectory
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 131
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  example: []
  syntax:
    content: public override DirectoryInfoBase GetDirectory(string path)
    content.vb: Public Overrides Function GetDirectory(path As String) As DirectoryInfoBase
    parameters:
    - id: path
      type: System.String
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)
  id: GetFile(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo
  langs:
  - csharp
  - vb
  name: GetFile(String)
  nameWithType: InMemoryDirectoryInfo.GetFile(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
      branch: dev
      repo: https://github.com/aspnet/filesystem
    id: GetFile
    path: src/Microsoft.Extensions.FileSystemGlobbing/InMemoryDirectoryInfo.cs
    startLine: 149
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing
  summary: "\nReturns an instance of <see cref=\"T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase\"></see> that matches the <em>path</em> given.\n"
  example: []
  syntax:
    content: public override FileInfoBase GetFile(string path)
    content.vb: Public Overrides Function GetFile(path As String) As FileInfoBase
    parameters:
    - id: path
      type: System.String
      description: The filename.
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
      description: Instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase"></see> if the file exists, null otherwise.
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Extensions.FileSystemGlobbing
  commentId: N:Microsoft.Extensions.FileSystemGlobbing
  isExternal: false
  name: Microsoft.Extensions.FileSystemGlobbing
  nameWithType: Microsoft.Extensions.FileSystemGlobbing
  fullName: Microsoft.Extensions.FileSystemGlobbing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: FileSystemInfoBase
  nameWithType: FileSystemInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: DirectoryInfoBase
  nameWithType: DirectoryInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  commentId: N:Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  nameWithType: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfoBase.FullName
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: Name
  nameWithType: FileSystemInfoBase.Name
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: ParentDirectory
  nameWithType: FileSystemInfoBase.ParentDirectory
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: false
  name: EnumerateFileSystemInfos()
  nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos()
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos()
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
    name: EnumerateFileSystemInfos
    nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
    name: EnumerateFileSystemInfos
    nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileSystemInfoBase>
  nameWithType: IEnumerable<FileSystemInfoBase>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase>
  nameWithType.vb: IEnumerable(Of FileSystemInfoBase)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase)
  name.vb: IEnumerable(Of FileSystemInfoBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
    name: FileSystemInfoBase
    nameWithType: FileSystemInfoBase
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
    name: FileSystemInfoBase
    nameWithType: FileSystemInfoBase
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: true
  name: GetDirectory(String)
  nameWithType: DirectoryInfoBase.GetDirectory(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
    name: GetDirectory
    nameWithType: DirectoryInfoBase.GetDirectory
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
    name: GetDirectory
    nameWithType: DirectoryInfoBase.GetDirectory
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: true
  name: GetFile(String)
  nameWithType: DirectoryInfoBase.GetFile(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
    name: GetFile
    nameWithType: DirectoryInfoBase.GetFile
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
    name: GetFile
    nameWithType: DirectoryInfoBase.GetFile
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: FileInfoBase
  nameWithType: FileInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
