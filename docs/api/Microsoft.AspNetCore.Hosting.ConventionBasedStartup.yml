### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  commentId: T:Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  id: ConventionBasedStartup
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor(Microsoft.AspNetCore.Hosting.Internal.StartupMethods)
  - Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder)
  - Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection)
  langs:
  - csharp
  - vb
  name: ConventionBasedStartup
  nameWithType: ConventionBasedStartup
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConventionBasedStartup
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: 'public class ConventionBasedStartup : IStartup'
    content.vb: >-
      Public Class ConventionBasedStartup
          Inherits IStartup
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor(Microsoft.AspNetCore.Hosting.Internal.StartupMethods)
  commentId: M:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor(Microsoft.AspNetCore.Hosting.Internal.StartupMethods)
  id: '#ctor(Microsoft.AspNetCore.Hosting.Internal.StartupMethods)'
  parent: Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  langs:
  - csharp
  - vb
  name: ConventionBasedStartup(StartupMethods)
  nameWithType: ConventionBasedStartup.ConventionBasedStartup(StartupMethods)
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConventionBasedStartup(Microsoft.AspNetCore.Hosting.Internal.StartupMethods)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public ConventionBasedStartup(StartupMethods methods)
    parameters:
    - id: methods
      type: Microsoft.AspNetCore.Hosting.Internal.StartupMethods
    content.vb: Public Sub New(methods As StartupMethods)
  overload: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder)
  id: Configure(IApplicationBuilder)
  parent: Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder)
  nameWithType: ConventionBasedStartup.Configure(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Configure
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public void Configure(IApplicationBuilder app)
    parameters:
    - id: app
      type: IApplicationBuilder
    content.vb: Public Sub Configure(app As IApplicationBuilder)
  overload: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection)
  id: ConfigureServices(IServiceCollection)
  parent: Microsoft.AspNetCore.Hosting.ConventionBasedStartup
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection)
  nameWithType: ConventionBasedStartup.ConfigureServices(IServiceCollection)
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureServices
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Startup/ConventionBasedStartup.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public IServiceProvider ConfigureServices(IServiceCollection services)
    parameters:
    - id: services
      type: IServiceCollection
    return:
      type: System.IServiceProvider
    content.vb: Public Function ConfigureServices(services As IServiceCollection) As IServiceProvider
  overload: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.#ctor
  isExternal: false
  name: ConventionBasedStartup
  nameWithType: ConventionBasedStartup.ConventionBasedStartup
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConventionBasedStartup
- uid: Microsoft.AspNetCore.Hosting.Internal.StartupMethods
  commentId: T:Microsoft.AspNetCore.Hosting.Internal.StartupMethods
  parent: Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: StartupMethods
  nameWithType: StartupMethods
  fullName: Microsoft.AspNetCore.Hosting.Internal.StartupMethods
- uid: Microsoft.AspNetCore.Hosting.Internal
  commentId: N:Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Internal
  nameWithType: Microsoft.AspNetCore.Hosting.Internal
  fullName: Microsoft.AspNetCore.Hosting.Internal
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure*
  commentId: Overload:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure
  isExternal: false
  name: Configure
  nameWithType: ConventionBasedStartup.Configure
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure
- uid: IApplicationBuilder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: IApplicationBuilder
- uid: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices*
  commentId: Overload:Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices
  isExternal: false
  name: ConfigureServices
  nameWithType: ConventionBasedStartup.ConfigureServices
  fullName: Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
shouldSkipMarkup: true
