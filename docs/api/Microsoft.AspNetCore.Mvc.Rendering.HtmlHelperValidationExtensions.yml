### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  id: HtmlHelperValidationExtensions
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  langs:
  - csharp
  - vb
  name: HtmlHelperValidationExtensions
  nameWithType: HtmlHelperValidationExtensions
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlHelperValidationExtensions
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nValidation-related extensions for <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HtmlHelperValidationExtensions
    content.vb: Public Module HtmlHelperValidationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessage(IHtmlHelper, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  remarks: "\nMethod extracts an error string from the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message\nwill always be visible but client-side validation may update the associated CSS class.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessage(this IHtmlHelper htmlHelper, string expression)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessage(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessage(IHtmlHelper, String, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessage(this IHtmlHelper htmlHelper, string expression, string message)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessage(htmlHelper As IHtmlHelper, expression As String, message As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessage(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  remarks: "\nMethod extracts an error string from the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message\nwill always be visible but client-side validation may update the associated CSS class.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessage(this IHtmlHelper htmlHelper, string expression, object htmlAttributes)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the\n(<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref>) element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessage(htmlHelper As IHtmlHelper, expression As String, htmlAttributes As Object) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  id: ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessage(IHtmlHelper, String, String, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage(IHtmlHelper, String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessage(this IHtmlHelper htmlHelper, string expression, string message, string tag)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    - id: tag
      type: System.String
      description: "\nThe tag to wrap the <span class=\"paramref\">message</span> in the generated HTML. Its default value is\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <span class=\"paramref\">tag</span> element. <code>null</code> if the\n<span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessage(htmlHelper As IHtmlHelper, expression As String, message As String, tag As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  id: ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessage(IHtmlHelper, String, String, Object)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage(IHtmlHelper, String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessage(this IHtmlHelper htmlHelper, string expression, string message, object htmlAttributes)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the\n(<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref>) element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessage(htmlHelper As IHtmlHelper, expression As String, message As String, htmlAttributes As Object) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessageFor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 185
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  remarks: "\nMethod extracts an error string from the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message\nwill always be visible but client-side validation may update the associated CSS class.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessageFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <span class="paramref">expression</span> result.
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessageFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor*
  nameWithType.vb: HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  id: ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessageFor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 219
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessageFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string message)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <span class="paramref">expression</span> result.
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessageFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), message As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor*
  nameWithType.vb: HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String)
  name.vb: ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  id: ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, Object)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessageFor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 260
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessageFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string message, object htmlAttributes)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the\n(<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref>) element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <span class="paramref">expression</span> result.
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element.\n<code>null</code> if the <span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessageFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), message As String, htmlAttributes As Object) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor*
  nameWithType.vb: HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String, System.Object)
  name.vb: ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  id: ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationMessageFor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 300
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the validation message if an error exists in the <see cref=\"!:ModelBinding.ModelStateDictionary\"></see>\nobject for the specified <span class=\"paramref\">expression</span>.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationMessageFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string message, string tag)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: message
      type: System.String
      description: "\nThe message to be displayed. If <code>null</code> or empty, method extracts an error string from the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object. Message will always be visible but client-side\nvalidation may update the associated CSS class.\n"
    - id: tag
      type: System.String
      description: "\nThe tag to wrap the <span class=\"paramref\">message</span> in the generated HTML. Its default value is\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <span class="paramref">expression</span> result.
    return:
      type: IHtmlContent
      description: "\nA new <see cref=\"!:IHtmlContent\"></see> containing the <span class=\"paramref\">tag</span> element. <code>null</code> if the\n<span class=\"paramref\">expression</span> is valid and client-side validation is disabled.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationMessageFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), message As String, tag As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor*
  nameWithType.vb: HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String, System.String)
  name.vb: ValidationMessageFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 328
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the &lt;ul> element.\n<see cref=\"!:HtmlString.Empty\"></see> if the current model is valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, Boolean)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 354
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, bool excludePropertyErrors)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: excludePropertyErrors
      type: System.Boolean
      description: "\nIf <code>true</code>, display model-level errors only; otherwise display all errors.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the &lt;ul> element.\n<see cref=\"!:HtmlString.Empty\"></see> if the current model is valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, excludePropertyErrors As Boolean) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 380
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, string message)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element (which wraps the\n<span class=\"paramref\">message</span>) and the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model\nis valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, message As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, String, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 409
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, string message, string tag)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    - id: tag
      type: System.String
      description: "\nThe tag to wrap the <span class=\"paramref\">message</span> in the generated HTML. Its default value is\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the <span class=\"paramref\">tag</span> element\nand the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model is valid and client-side\nvalidation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, message As String, tag As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, Boolean, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, Boolean, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 438
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, bool excludePropertyErrors, string message)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: excludePropertyErrors
      type: System.Boolean
      description: "\nIf <code>true</code>, display model-level errors only; otherwise display all errors.\n"
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element (which, in turn, wraps the\n<span class=\"paramref\">message</span>) and the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model\nis valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, excludePropertyErrors As Boolean, message As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 472
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, string message, object htmlAttributes)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the topmost (&lt;div>) element.\nAlternatively, an <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing\nthe HTML attributes.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element (which wraps the\n<span class=\"paramref\">message</span>) and the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model\nis valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, message As String, htmlAttributes As Object) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, String, Object, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, String, Object, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 509
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, string message, object htmlAttributes, string tag)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the topmost (&lt;div>) element.\nAlternatively, an <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing\nthe HTML attributes.\n"
    - id: tag
      type: System.String
      description: "\nThe tag to wrap the <span class=\"paramref\">message</span> in the generated HTML. Its default value is\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the <span class=\"paramref\">tag</span> element\nand the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model is valid and client-side\nvalidation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, message As String, htmlAttributes As Object, tag As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.String)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, Boolean, String, String)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, Boolean, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 545
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, bool excludePropertyErrors, string message, string tag)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: excludePropertyErrors
      type: System.Boolean
      description: "\nIf <code>true</code>, display model-level errors only; otherwise display all errors.\n"
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    - id: tag
      type: System.String
      description: "\nThe tag to wrap the <span class=\"paramref\">message</span> in the generated HTML. Its default value is\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the <span class=\"paramref\">tag</span> element\nand the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model is valid and client-side\nvalidation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, excludePropertyErrors As Boolean, message As String, tag As String) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.Object)
  id: ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions
  langs:
  - csharp
  - vb
  name: ValidationSummary(IHtmlHelper, Boolean, String, Object)
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary(IHtmlHelper, Boolean, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.Boolean, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationSummary
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperValidationExtensions.cs
    startLine: 583
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an unordered list (&lt;ul> element) of validation messages that are in the\n<see cref=\"!:ModelBinding.ModelStateDictionary\"></see> object.\n"
  example: []
  syntax:
    content: public static IHtmlContent ValidationSummary(this IHtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes)
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: excludePropertyErrors
      type: System.Boolean
      description: "\nIf <code>true</code>, display model-level errors only; otherwise display all errors.\n"
    - id: message
      type: System.String
      description: The message to display with the validation summary.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the topmost (&lt;div>) element.\nAlternatively, an <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing\nthe HTML attributes.\n"
    return:
      type: IHtmlContent
      description: "\nNew <see cref=\"!:IHtmlContent\"></see> containing a &lt;div> element wrapping the\n<xref href=\"Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement\" data-throw-if-not-resolved=\"false\"></xref> element (which wraps the\n<span class=\"paramref\">message</span>) and the &lt;ul> element. <see cref=\"!:HtmlString.Empty\"></see> if the current model\nis valid and client-side validation is disabled).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidationSummary(htmlHelper As IHtmlHelper, excludePropertyErrors As Boolean, message As String, htmlAttributes As Object) As IHtmlContent
  overload: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: IHtmlHelper
  nameWithType: IHtmlHelper
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  isExternal: false
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage
  isExternal: false
  name: ValidationMessage
  nameWithType: HtmlHelperValidationExtensions.ValidationMessage
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IHtmlContent
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: IHtmlContent
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor
  isExternal: false
  name: ValidationMessageFor
  nameWithType: HtmlHelperValidationExtensions.ValidationMessageFor
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{`0}
  parent: Microsoft.AspNetCore.Mvc.Rendering
  definition: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, TResult>>
  nameWithType: Expression<Func<TModel, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, TResult>>
  nameWithType.vb: Expression(Of Func(Of TModel, TResult))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult))
  name.vb: Expression(Of Func(Of TModel, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary
  isExternal: false
  name: ValidationSummary
  nameWithType: HtmlHelperValidationExtensions.ValidationSummary
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement
shouldSkipMarkup: true
