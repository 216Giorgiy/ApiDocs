### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  commentId: T:Microsoft.Extensions.FileProviders.NotFoundFileInfo
  id: NotFoundFileInfo
  parent: Microsoft.Extensions.FileProviders
  children:
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor(System.String)
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
  - Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
  langs:
  - csharp
  - vb
  name: NotFoundFileInfo
  nameWithType: NotFoundFileInfo
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: NotFoundFileInfo
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nRepresents a non-existing file.\n"
  example: []
  syntax:
    content: 'public class NotFoundFileInfo : object, IFileInfo'
    content.vb: >-
      Public Class NotFoundFileInfo
          Inherits Object
          Implements IFileInfo
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: NotFoundFileInfo(String)
  nameWithType: NotFoundFileInfo.NotFoundFileInfo(String)
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.NotFoundFileInfo(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public NotFoundFileInfo(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
  id: Exists
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: NotFoundFileInfo.Exists
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Exists
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Exists As Boolean
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.Exists
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
  id: IsDirectory
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: IsDirectory
  nameWithType: NotFoundFileInfo.IsDirectory
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: IsDirectory
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public bool IsDirectory { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDirectory As Boolean
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
  id: LastModified
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: NotFoundFileInfo.LastModified
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: LastModified
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public DateTimeOffset LastModified { get; }
    parameters: []
    return:
      type: DateTimeOffset
    content.vb: Public ReadOnly Property LastModified As DateTimeOffset
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.LastModified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
  id: Length
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: NotFoundFileInfo.Length
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Length
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 24
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Length As Long
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.Length
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
  id: Name
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NotFoundFileInfo.Name
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Name
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
  commentId: P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
  id: PhysicalPath
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: PhysicalPath
  nameWithType: NotFoundFileInfo.PhysicalPath
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: PhysicalPath
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public string PhysicalPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PhysicalPath As String
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream
  commentId: M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream
  id: CreateReadStream
  parent: Microsoft.Extensions.FileProviders.NotFoundFileInfo
  langs:
  - csharp
  - vb
  name: CreateReadStream()
  nameWithType: NotFoundFileInfo.CreateReadStream()
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: CreateReadStream
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/NotFoundFileInfo.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public Stream CreateReadStream()
    return:
      type: Stream
    content.vb: Public Function CreateReadStream As Stream
  overload: Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream*
  implements:
  - Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.FileProviders.IFileInfo
  commentId: T:Microsoft.Extensions.FileProviders.IFileInfo
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IFileInfo
  nameWithType: IFileInfo
  fullName: Microsoft.Extensions.FileProviders.IFileInfo
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor
  isExternal: false
  name: NotFoundFileInfo
  nameWithType: NotFoundFileInfo.NotFoundFileInfo
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.NotFoundFileInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
  isExternal: false
  name: Exists
  nameWithType: NotFoundFileInfo.Exists
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists
- uid: Microsoft.Extensions.FileProviders.IFileInfo.Exists
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.Exists
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: Exists
  nameWithType: IFileInfo.Exists
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: NotFoundFileInfo.IsDirectory
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory
- uid: Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: IsDirectory
  nameWithType: IFileInfo.IsDirectory
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
  isExternal: false
  name: LastModified
  nameWithType: NotFoundFileInfo.LastModified
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified
- uid: Microsoft.Extensions.FileProviders.IFileInfo.LastModified
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.LastModified
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: LastModified
  nameWithType: IFileInfo.LastModified
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.LastModified
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: DateTimeOffset
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
  isExternal: false
  name: Length
  nameWithType: NotFoundFileInfo.Length
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length
- uid: Microsoft.Extensions.FileProviders.IFileInfo.Length
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.Length
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: Length
  nameWithType: IFileInfo.Length
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
  isExternal: false
  name: Name
  nameWithType: NotFoundFileInfo.Name
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name
- uid: Microsoft.Extensions.FileProviders.IFileInfo.Name
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.Name
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: Name
  nameWithType: IFileInfo.Name
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.Name
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
  isExternal: false
  name: PhysicalPath
  nameWithType: NotFoundFileInfo.PhysicalPath
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath
- uid: Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath
  commentId: P:Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: PhysicalPath
  nameWithType: IFileInfo.PhysicalPath
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath
- uid: Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream*
  commentId: Overload:Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream
  isExternal: false
  name: CreateReadStream
  nameWithType: NotFoundFileInfo.CreateReadStream
  fullName: Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream
- uid: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
  commentId: M:Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
  parent: Microsoft.Extensions.FileProviders.IFileInfo
  isExternal: false
  name: CreateReadStream()
  nameWithType: IFileInfo.CreateReadStream()
  fullName: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream()
  spec.csharp:
  - uid: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
    name: CreateReadStream
    nameWithType: IFileInfo.CreateReadStream
    fullName: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
    name: CreateReadStream
    nameWithType: IFileInfo.CreateReadStream
    fullName: Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
shouldSkipMarkup: true
