### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  id: ILoggerFactory
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  - Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  langs:
  - csharp
  - vb
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ILoggerFactory
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nRepresents a type used to configure the logging system and create instances of <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref> from\nthe registered <xref href=\"Microsoft.Extensions.Logging.ILoggerProvider\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public interface ILoggerFactory : IDisposable'
    content.vb: >-
      Public Interface ILoggerFactory
          Inherits IDisposable
  extensionMethods:
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Type)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: ILoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nCreates a new <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: ILogger CreateLogger(string categoryName)
    parameters:
    - id: categoryName
      type: System.String
      description: The category name for messages produced by the logger.
    return:
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function CreateLogger(categoryName As String) As ILogger
  overload: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger*
- uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  id: AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: ILoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddProvider
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 24
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nAdds an <xref href=\"Microsoft.Extensions.Logging.ILoggerProvider\" data-throw-if-not-resolved=\"false\"></xref> to the logging system.\n"
  example: []
  syntax:
    content: void AddProvider(ILoggerProvider provider)
    parameters:
    - id: provider
      type: Microsoft.Extensions.Logging.ILoggerProvider
      description: The <xref href="Microsoft.Extensions.Logging.ILoggerProvider" data-throw-if-not-resolved="false"></xref>.
    content.vb: Sub AddProvider(provider As ILoggerProvider)
  overload: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider*
references:
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging.ILoggerProvider
  commentId: T:Microsoft.Extensions.Logging.ILoggerProvider
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: Microsoft.Extensions.Logging.ILoggerProvider
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  name: CreateLogger<T>()
  nameWithType: LoggerFactoryExtensions.CreateLogger<T>()
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>()
  nameWithType.vb: LoggerFactoryExtensions.CreateLogger(Of T)()
  fullName.vb: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)()
  name.vb: CreateLogger(Of T)()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
    name: CreateLogger<T>
    nameWithType: LoggerFactoryExtensions.CreateLogger<T>
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
    name: CreateLogger(Of T)
    nameWithType: LoggerFactoryExtensions.CreateLogger(Of T)
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Type)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
  parent: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
  name: CreateLogger(Type)
  nameWithType: LoggerFactoryExtensions.CreateLogger(Type)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Type)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: CreateLogger<T>(ILoggerFactory)
  nameWithType: LoggerFactoryExtensions.CreateLogger<T>(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>(Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType.vb: LoggerFactoryExtensions.CreateLogger(Of T)(ILoggerFactory)
  fullName.vb: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)(Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: CreateLogger(Of T)(ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateLogger<T>
    nameWithType: LoggerFactoryExtensions.CreateLogger<T>
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateLogger(Of T)
    nameWithType: LoggerFactoryExtensions.CreateLogger(Of T)
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.LoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LoggerFactoryExtensions
  nameWithType: LoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
  isExternal: true
  name: CreateLogger(ILoggerFactory, Type)
  nameWithType: LoggerFactoryExtensions.CreateLogger(ILoggerFactory, Type)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory, Type)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger*
  commentId: Overload:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: ILoggerFactory.CreateLogger
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider*
  commentId: Overload:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider
  isExternal: false
  name: AddProvider
  nameWithType: ILoggerFactory.AddProvider
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider
shouldSkipMarkup: true
