### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.IFormFileCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormFileCollection
  id: IFormFileCollection
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.IFormFileCollection.GetFile(System.String)
  - Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles(System.String)
  - Microsoft.AspNetCore.Http.IFormFileCollection.Item(System.String)
  langs:
  - csharp
  - vb
  name: IFormFileCollection
  nameWithType: IFormFileCollection
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IFormFileCollection
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRepresents the collection of files sent with the HttpRequest.\n"
  example: []
  syntax:
    content: 'public interface IFormFileCollection : IReadOnlyList<IFormFile>, IReadOnlyCollection<IFormFile>, IEnumerable<IFormFile>, IEnumerable'
    content.vb: >-
      Public Interface IFormFileCollection
          Inherits IReadOnlyList(Of IFormFile)
  inheritedMembers:
  - System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}.Item(System.Int32)
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}.Count
  - System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.IFormFileCollection.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Http.IFormFileCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IFormFileCollection.Item[String]
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: IFormFile this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Http.IFormFile
    content.vb: ReadOnly Property Item(name As String) As IFormFile
  overload: Microsoft.AspNetCore.Http.IFormFileCollection.Item*
  nameWithType.vb: IFormFileCollection.Item(String)
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Http.IFormFileCollection.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.GetFile(System.String)
  commentId: M:Microsoft.AspNetCore.Http.IFormFileCollection.GetFile(System.String)
  id: GetFile(System.String)
  parent: Microsoft.AspNetCore.Http.IFormFileCollection
  langs:
  - csharp
  - vb
  name: GetFile(String)
  nameWithType: IFormFileCollection.GetFile(String)
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.GetFile(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetFile
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: IFormFile GetFile(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Http.IFormFile
    content.vb: Function GetFile(name As String) As IFormFile
  overload: Microsoft.AspNetCore.Http.IFormFileCollection.GetFile*
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles(System.String)
  commentId: M:Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.AspNetCore.Http.IFormFileCollection
  langs:
  - csharp
  - vb
  name: GetFiles(String)
  nameWithType: IFormFileCollection.GetFiles(String)
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetFiles
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Features/IFormFileCollection.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: IReadOnlyList<IFormFile> GetFiles(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}
    content.vb: Function GetFiles(name As String) As IReadOnlyList(Of IFormFile)
  overload: Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles*
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IReadOnlyList<IFormFile>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Http.IFormFile>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of IFormFile).Item(Int32)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Http.IFormFile).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<IFormFile>.Item
    fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Http.IFormFile>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of IFormFile).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Http.IFormFile).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<IFormFile>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.AspNetCore.Http.IFormFile>.Count
  nameWithType.vb: IReadOnlyCollection(Of IFormFile).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.AspNetCore.Http.IFormFile).Count
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IFormFile>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Http.IFormFile>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IFormFile).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Http.IFormFile).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IFormFile>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Http.IFormFile>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IFormFile).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Http.IFormFile).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IReadOnlyList<T>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<T>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<T>.Item
    fullName: System.Collections.Generic.IReadOnlyList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of T).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.IFormFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IFormFile>
  nameWithType: IReadOnlyList<IFormFile>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Http.IFormFile>
  nameWithType.vb: IReadOnlyList(Of IFormFile)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Http.IFormFile)
  name.vb: IReadOnlyList(Of IFormFile)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IFormFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IFormFile>
  nameWithType: IReadOnlyCollection<IFormFile>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.AspNetCore.Http.IFormFile>
  nameWithType.vb: IReadOnlyCollection(Of IFormFile)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.AspNetCore.Http.IFormFile)
  name.vb: IReadOnlyCollection(Of IFormFile)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFormFile>
  nameWithType: IEnumerable<IFormFile>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Http.IFormFile>
  nameWithType.vb: IEnumerable(Of IFormFile)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Http.IFormFile)
  name.vb: IEnumerable(Of IFormFile)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.Item*
  commentId: Overload:Microsoft.AspNetCore.Http.IFormFileCollection.Item
  isExternal: false
  name: Item
  nameWithType: IFormFileCollection.Item
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.GetFile*
  commentId: Overload:Microsoft.AspNetCore.Http.IFormFileCollection.GetFile
  isExternal: false
  name: GetFile
  nameWithType: IFormFileCollection.GetFile
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.GetFile
- uid: Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles*
  commentId: Overload:Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles
  isExternal: false
  name: GetFiles
  nameWithType: IFormFileCollection.GetFiles
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection.GetFiles
shouldSkipMarkup: true
