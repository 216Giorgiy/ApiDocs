### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager
  commentId: T:Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager
  id: DefaultKeyVaultSecretManager
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault
  children:
  - Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  - Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  langs:
  - csharp
  - vb
  name: DefaultKeyVaultSecretManager
  nameWithType: DefaultKeyVaultSecretManager
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: DefaultKeyVaultSecretManager
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration.Azure.KeyVault
  summary: "\nDefault implementation of <see cref=\"T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager\"></see> that loads all secrets\nand replaces '__' with ':\" in key names.\n"
  example: []
  syntax:
    content: 'public class DefaultKeyVaultSecretManager : IKeyVaultSecretManager'
    content.vb: >-
      Public Class DefaultKeyVaultSecretManager
          Implements IKeyVaultSecretManager
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  commentId: M:Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  id: GetKey(Microsoft.Azure.KeyVault.Secret)
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager
  langs:
  - csharp
  - vb
  name: GetKey(Secret)
  nameWithType: DefaultKeyVaultSecretManager.GetKey(Secret)
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: GetKey
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration.Azure.KeyVault
  example: []
  syntax:
    content: public virtual string GetKey(Secret secret)
    content.vb: Public Overridable Function GetKey(secret As Secret) As String
    parameters:
    - id: secret
      type: Microsoft.Azure.KeyVault.Secret
    return:
      type: System.String
  implements:
  - Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  commentId: M:Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  id: Load(Microsoft.Azure.KeyVault.SecretItem)
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager
  langs:
  - csharp
  - vb
  name: Load(SecretItem)
  nameWithType: DefaultKeyVaultSecretManager.Load(SecretItem)
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.DefaultKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: Load
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/DefaultKeyVaultSecretManager.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration.Azure.KeyVault
  example: []
  syntax:
    content: public virtual bool Load(SecretItem secret)
    content.vb: Public Overridable Function Load(secret As SecretItem) As Boolean
    parameters:
    - id: secret
      type: Microsoft.Azure.KeyVault.SecretItem
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault
  commentId: N:Microsoft.Extensions.Configuration.Azure.KeyVault
  isExternal: false
  name: Microsoft.Extensions.Configuration.Azure.KeyVault
  nameWithType: Microsoft.Extensions.Configuration.Azure.KeyVault
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  commentId: T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault
  isExternal: false
  name: IKeyVaultSecretManager
  nameWithType: IKeyVaultSecretManager
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  commentId: M:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  isExternal: true
  name: GetKey(Secret)
  nameWithType: IKeyVaultSecretManager.GetKey(Secret)
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
    name: GetKey
    nameWithType: IKeyVaultSecretManager.GetKey
    fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.Secret
    name: Secret
    nameWithType: Secret
    fullName: Microsoft.Azure.KeyVault.Secret
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey(Microsoft.Azure.KeyVault.Secret)
    name: GetKey
    nameWithType: IKeyVaultSecretManager.GetKey
    fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.Secret
    name: Secret
    nameWithType: Secret
    fullName: Microsoft.Azure.KeyVault.Secret
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Secret
  commentId: T:Microsoft.Azure.KeyVault.Secret
  parent: Microsoft.Azure.KeyVault
  isExternal: true
  name: Secret
  nameWithType: Secret
  fullName: Microsoft.Azure.KeyVault.Secret
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  commentId: M:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  isExternal: true
  name: Load(SecretItem)
  nameWithType: IKeyVaultSecretManager.Load(SecretItem)
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
    name: Load
    nameWithType: IKeyVaultSecretManager.Load
    fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.SecretItem
    name: SecretItem
    nameWithType: SecretItem
    fullName: Microsoft.Azure.KeyVault.SecretItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load(Microsoft.Azure.KeyVault.SecretItem)
    name: Load
    nameWithType: IKeyVaultSecretManager.Load
    fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.SecretItem
    name: SecretItem
    nameWithType: SecretItem
    fullName: Microsoft.Azure.KeyVault.SecretItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SecretItem
  commentId: T:Microsoft.Azure.KeyVault.SecretItem
  parent: Microsoft.Azure.KeyVault
  isExternal: true
  name: SecretItem
  nameWithType: SecretItem
  fullName: Microsoft.Azure.KeyVault.SecretItem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
