### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Session.DistributedSession
  commentId: T:Microsoft.AspNetCore.Session.DistributedSession
  id: DistributedSession
  parent: Microsoft.AspNetCore.Session
  children:
  - Microsoft.AspNetCore.Session.DistributedSession.#ctor(IDistributedCache,System.String,System.TimeSpan,System.Func{System.Boolean},ILoggerFactory,System.Boolean)
  - Microsoft.AspNetCore.Session.DistributedSession.Clear
  - Microsoft.AspNetCore.Session.DistributedSession.CommitAsync
  - Microsoft.AspNetCore.Session.DistributedSession.Id
  - Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
  - Microsoft.AspNetCore.Session.DistributedSession.Keys
  - Microsoft.AspNetCore.Session.DistributedSession.LoadAsync
  - Microsoft.AspNetCore.Session.DistributedSession.Remove(System.String)
  - Microsoft.AspNetCore.Session.DistributedSession.Set(System.String,System.Byte[])
  - Microsoft.AspNetCore.Session.DistributedSession.TryGetValue(System.String,System.Byte[]@)
  langs:
  - csharp
  - vb
  name: DistributedSession
  nameWithType: DistributedSession
  fullName: Microsoft.AspNetCore.Session.DistributedSession
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: DistributedSession
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: 'public class DistributedSession : ISession'
    content.vb: >-
      Public Class DistributedSession
          Inherits ISession
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Session.DistributedSession.#ctor(IDistributedCache,System.String,System.TimeSpan,System.Func{System.Boolean},ILoggerFactory,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.#ctor(IDistributedCache,System.String,System.TimeSpan,System.Func{System.Boolean},ILoggerFactory,System.Boolean)
  id: '#ctor(IDistributedCache,System.String,System.TimeSpan,System.Func{System.Boolean},ILoggerFactory,System.Boolean)'
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: DistributedSession(IDistributedCache, String, TimeSpan, Func<Boolean>, ILoggerFactory, Boolean)
  nameWithType: DistributedSession.DistributedSession(IDistributedCache, String, TimeSpan, Func<Boolean>, ILoggerFactory, Boolean)
  fullName: Microsoft.AspNetCore.Session.DistributedSession.DistributedSession(IDistributedCache, System.String, System.TimeSpan, System.Func<System.Boolean>, ILoggerFactory, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: .ctor
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public DistributedSession(IDistributedCache cache, string sessionKey, TimeSpan idleTimeout, Func<bool> tryEstablishSession, ILoggerFactory loggerFactory, bool isNewSessionKey)
    parameters:
    - id: cache
      type: IDistributedCache
    - id: sessionKey
      type: System.String
    - id: idleTimeout
      type: System.TimeSpan
    - id: tryEstablishSession
      type: System.Func{System.Boolean}
    - id: loggerFactory
      type: ILoggerFactory
    - id: isNewSessionKey
      type: System.Boolean
    content.vb: Public Sub New(cache As IDistributedCache, sessionKey As String, idleTimeout As TimeSpan, tryEstablishSession As Func(Of Boolean), loggerFactory As ILoggerFactory, isNewSessionKey As Boolean)
  overload: Microsoft.AspNetCore.Session.DistributedSession.#ctor*
  nameWithType.vb: DistributedSession.DistributedSession(IDistributedCache, String, TimeSpan, Func(Of Boolean), ILoggerFactory, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Session.DistributedSession.DistributedSession(IDistributedCache, System.String, System.TimeSpan, System.Func(Of System.Boolean), ILoggerFactory, System.Boolean)
  name.vb: DistributedSession(IDistributedCache, String, TimeSpan, Func(Of Boolean), ILoggerFactory, Boolean)
- uid: Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
  commentId: P:Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
  id: IsAvailable
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: DistributedSession.IsAvailable
  fullName: Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: IsAvailable
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public bool IsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAvailable As Boolean
  overload: Microsoft.AspNetCore.Session.DistributedSession.IsAvailable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Session.DistributedSession.Id
  commentId: P:Microsoft.AspNetCore.Session.DistributedSession.Id
  id: Id
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: DistributedSession.Id
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: Id
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Microsoft.AspNetCore.Session.DistributedSession.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Session.DistributedSession.Keys
  commentId: P:Microsoft.AspNetCore.Session.DistributedSession.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: DistributedSession.Keys
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: Keys
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public IEnumerable<string> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Keys As IEnumerable(Of String)
  overload: Microsoft.AspNetCore.Session.DistributedSession.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue(System.String,System.Byte[]@)
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.TryGetValue(System.String,System.Byte[]@)
  id: TryGetValue(System.String,System.Byte[]@)
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out Byte[])
  nameWithType: DistributedSession.TryGetValue(String, out Byte[])
  fullName: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue(System.String, out System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: TryGetValue
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public bool TryGetValue(string key, out byte[] value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As String, ByRef value As Byte()) As Boolean
  overload: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue*
  nameWithType.vb: DistributedSession.TryGetValue(String, ByRef Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue(System.String, ByRef System.Byte())
  name.vb: TryGetValue(String, ByRef Byte())
- uid: Microsoft.AspNetCore.Session.DistributedSession.Set(System.String,System.Byte[])
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.Set(System.String,System.Byte[])
  id: Set(System.String,System.Byte[])
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: Set(String, Byte[])
  nameWithType: DistributedSession.Set(String, Byte[])
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Set(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: Set
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public void Set(string key, byte[] value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Byte[]
    content.vb: Public Sub Set(key As String, value As Byte())
  overload: Microsoft.AspNetCore.Session.DistributedSession.Set*
  nameWithType.vb: DistributedSession.Set(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Session.DistributedSession.Set(System.String, System.Byte())
  name.vb: Set(String, Byte())
- uid: Microsoft.AspNetCore.Session.DistributedSession.Remove(System.String)
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: DistributedSession.Remove(String)
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: Remove
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public void Remove(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub Remove(key As String)
  overload: Microsoft.AspNetCore.Session.DistributedSession.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Session.DistributedSession.Clear
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DistributedSession.Clear()
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: Clear
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 156
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.AspNetCore.Session.DistributedSession.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Session.DistributedSession.LoadAsync
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.LoadAsync
  id: LoadAsync
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: LoadAsync()
  nameWithType: DistributedSession.LoadAsync()
  fullName: Microsoft.AspNetCore.Session.DistributedSession.LoadAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: LoadAsync
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 196
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public Task LoadAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function LoadAsync As Task
  overload: Microsoft.AspNetCore.Session.DistributedSession.LoadAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Session.DistributedSession.CommitAsync
  commentId: M:Microsoft.AspNetCore.Session.DistributedSession.CommitAsync
  id: CommitAsync
  parent: Microsoft.AspNetCore.Session.DistributedSession
  langs:
  - csharp
  - vb
  name: CommitAsync()
  nameWithType: DistributedSession.CommitAsync()
  fullName: Microsoft.AspNetCore.Session.DistributedSession.CommitAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Session/DistributedSession.cs
      branch: master
      repo: https://github.com/aspnet/Session.git
    id: CommitAsync
    path: ../aspnet/Session/src/Microsoft.AspNetCore.Session/DistributedSession.cs
    startLine: 214
  assemblies:
  - Microsoft.AspNetCore.Session
  namespace: Microsoft.AspNetCore.Session
  syntax:
    content: public Task CommitAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CommitAsync As Task
  overload: Microsoft.AspNetCore.Session.DistributedSession.CommitAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Session
  commentId: N:Microsoft.AspNetCore.Session
  isExternal: false
  name: Microsoft.AspNetCore.Session
  nameWithType: Microsoft.AspNetCore.Session
  fullName: Microsoft.AspNetCore.Session
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Session.DistributedSession.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.#ctor
  isExternal: false
  name: DistributedSession
  nameWithType: DistributedSession.DistributedSession
  fullName: Microsoft.AspNetCore.Session.DistributedSession.DistributedSession
- uid: IDistributedCache
  isExternal: true
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: IDistributedCache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Session.DistributedSession.IsAvailable*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
  isExternal: false
  name: IsAvailable
  nameWithType: DistributedSession.IsAvailable
  fullName: Microsoft.AspNetCore.Session.DistributedSession.IsAvailable
- uid: Microsoft.AspNetCore.Session.DistributedSession.Id*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.Id
  isExternal: false
  name: Id
  nameWithType: DistributedSession.Id
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Id
- uid: Microsoft.AspNetCore.Session.DistributedSession.Keys*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.Keys
  isExternal: false
  name: Keys
  nameWithType: DistributedSession.Keys
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Keys
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: DistributedSession.TryGetValue
  fullName: Microsoft.AspNetCore.Session.DistributedSession.TryGetValue
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Session.DistributedSession.Set*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.Set
  isExternal: false
  name: Set
  nameWithType: DistributedSession.Set
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Set
- uid: Microsoft.AspNetCore.Session.DistributedSession.Remove*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.Remove
  isExternal: false
  name: Remove
  nameWithType: DistributedSession.Remove
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Remove
- uid: Microsoft.AspNetCore.Session.DistributedSession.Clear*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.Clear
  isExternal: false
  name: Clear
  nameWithType: DistributedSession.Clear
  fullName: Microsoft.AspNetCore.Session.DistributedSession.Clear
- uid: Microsoft.AspNetCore.Session.DistributedSession.LoadAsync*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.LoadAsync
  isExternal: false
  name: LoadAsync
  nameWithType: DistributedSession.LoadAsync
  fullName: Microsoft.AspNetCore.Session.DistributedSession.LoadAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Session.DistributedSession.CommitAsync*
  commentId: Overload:Microsoft.AspNetCore.Session.DistributedSession.CommitAsync
  isExternal: false
  name: CommitAsync
  nameWithType: DistributedSession.CommitAsync
  fullName: Microsoft.AspNetCore.Session.DistributedSession.CommitAsync
shouldSkipMarkup: true
