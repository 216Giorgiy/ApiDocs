### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  commentId: T:Microsoft.AspNetCore.Diagnostics.CompilationFailure
  id: CompilationFailure
  parent: Microsoft.AspNetCore.Diagnostics
  children:
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage})
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage},System.String)
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompiledContent
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.FailureSummary
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.Messages
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFileContent
  - Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFilePath
  langs:
  - csharp
  - vb
  name: CompilationFailure
  nameWithType: CompilationFailure
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: CompilationFailure
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nDescribes a failure compiling a specific file.\n"
  example: []
  syntax:
    content: public class CompilationFailure
    content.vb: Public Class CompilationFailure
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage})
  commentId: M:Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage})'
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: CompilationFailure(String, String, String, IEnumerable<DiagnosticMessage>)
  nameWithType: CompilationFailure.CompilationFailure(String, String, String, IEnumerable<DiagnosticMessage>)
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompilationFailure(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.DiagnosticMessage>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: .ctor
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nInitializes a new instance of <see cref=\"T:Microsoft.AspNetCore.Diagnostics.CompilationFailure\"></see>.\n"
  example: []
  syntax:
    content: public CompilationFailure(string sourceFilePath, string sourceFileContent, string compiledContent, IEnumerable<DiagnosticMessage> messages)
    content.vb: Public Sub New(sourceFilePath As String, sourceFileContent As String, compiledContent As String, messages As IEnumerable(Of DiagnosticMessage))
    parameters:
    - id: sourceFilePath
      type: System.String
      description: Path for the file that produced the compilation failure.
    - id: sourceFileContent
      type: System.String
      description: Contents of the file being compiled.
    - id: compiledContent
      type: System.String
      description: >
        For templated languages (such as Asp.Net Core Razor), the generated content.
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage}
      description: One or or more <see cref="T:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage"></see> instances.
  nameWithType.vb: CompilationFailure.CompilationFailure(String, String, String, IEnumerable(Of DiagnosticMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompilationFailure(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.DiagnosticMessage))
  name.vb: CompilationFailure(String, String, String, IEnumerable(Of DiagnosticMessage))
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage},System.String)
  commentId: M:Microsoft.AspNetCore.Diagnostics.CompilationFailure.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage},System.String)
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage},System.String)'
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: CompilationFailure(String, String, String, IEnumerable<DiagnosticMessage>, String)
  nameWithType: CompilationFailure.CompilationFailure(String, String, String, IEnumerable<DiagnosticMessage>, String)
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompilationFailure(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.DiagnosticMessage>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: .ctor
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nInitializes a new instance of <see cref=\"T:Microsoft.AspNetCore.Diagnostics.CompilationFailure\"></see>.\n"
  example: []
  syntax:
    content: public CompilationFailure(string sourceFilePath, string sourceFileContent, string compiledContent, IEnumerable<DiagnosticMessage> messages, string failureSummary)
    content.vb: Public Sub New(sourceFilePath As String, sourceFileContent As String, compiledContent As String, messages As IEnumerable(Of DiagnosticMessage), failureSummary As String)
    parameters:
    - id: sourceFilePath
      type: System.String
      description: Path for the file that produced the compilation failure.
    - id: sourceFileContent
      type: System.String
      description: Contents of the file being compiled.
    - id: compiledContent
      type: System.String
      description: >
        For templated languages (such as Asp.Net Core Razor), the generated content.
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage}
      description: One or or more <see cref="T:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage"></see> instances.
    - id: failureSummary
      type: System.String
      description: Summary message or instructions to fix the failure.
  nameWithType.vb: CompilationFailure.CompilationFailure(String, String, String, IEnumerable(Of DiagnosticMessage), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompilationFailure(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.DiagnosticMessage), System.String)
  name.vb: CompilationFailure(String, String, String, IEnumerable(Of DiagnosticMessage), String)
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFilePath
  commentId: P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFilePath
  id: SourceFilePath
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: SourceFilePath
  nameWithType: CompilationFailure.SourceFilePath
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: SourceFilePath
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nPath of the file that produced the compilation failure.\n"
  example: []
  syntax:
    content: public string SourceFilePath { get; }
    content.vb: Public ReadOnly Property SourceFilePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFileContent
  commentId: P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFileContent
  id: SourceFileContent
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: SourceFileContent
  nameWithType: CompilationFailure.SourceFileContent
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFileContent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: SourceFileContent
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nContents of the file.\n"
  example: []
  syntax:
    content: public string SourceFileContent { get; }
    content.vb: Public ReadOnly Property SourceFileContent As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompiledContent
  commentId: P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompiledContent
  id: CompiledContent
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: CompiledContent
  nameWithType: CompilationFailure.CompiledContent
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompiledContent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: CompiledContent
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nContents being compiled.\n"
  remarks: "\nFor templated files, the <see cref=\"P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.SourceFileContent\"></see> represents the original content and\n<see cref=\"P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.CompiledContent\"></see> represents the transformed content. This property can be null if\nthe exception is encountered during transformation.\n"
  example: []
  syntax:
    content: public string CompiledContent { get; }
    content.vb: Public ReadOnly Property CompiledContent As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.Messages
  commentId: P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.Messages
  id: Messages
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: CompilationFailure.Messages
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.Messages
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: Messages
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets a sequence of <see cref=\"T:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage\"></see> produced as a result of compilation.\n"
  example: []
  syntax:
    content: public IEnumerable<DiagnosticMessage> Messages { get; }
    content.vb: Public ReadOnly Property Messages As IEnumerable(Of DiagnosticMessage)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure.FailureSummary
  commentId: P:Microsoft.AspNetCore.Diagnostics.CompilationFailure.FailureSummary
  id: FailureSummary
  parent: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  langs:
  - csharp
  - vb
  name: FailureSummary
  nameWithType: CompilationFailure.FailureSummary
  fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure.FailureSummary
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
      branch: dev
      repo: https://github.com/aspnet/diagnostics
    id: FailureSummary
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/CompilationFailure.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nSummary message or instructions to fix the failure.\n"
  example: []
  syntax:
    content: public string FailureSummary { get; }
    content.vb: Public ReadOnly Property FailureSummary As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Diagnostics
  commentId: N:Microsoft.AspNetCore.Diagnostics
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics
  nameWithType: Microsoft.AspNetCore.Diagnostics
  fullName: Microsoft.AspNetCore.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.DiagnosticMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DiagnosticMessage>
  nameWithType: IEnumerable<DiagnosticMessage>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.DiagnosticMessage>
  nameWithType.vb: IEnumerable(Of DiagnosticMessage)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.DiagnosticMessage)
  name.vb: IEnumerable(Of DiagnosticMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
    name: DiagnosticMessage
    nameWithType: DiagnosticMessage
    fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
    name: DiagnosticMessage
    nameWithType: DiagnosticMessage
    fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
