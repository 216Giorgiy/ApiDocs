### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  commentId: T:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  id: AzureKeyVaultConfigurationExtensions
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  - Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  - Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String)
  - Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  langs:
  - csharp
  - vb
  name: AzureKeyVaultConfigurationExtensions
  nameWithType: AzureKeyVaultConfigurationExtensions
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AzureKeyVaultConfigurationExtensions
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nExtension methods for registering <see cref=\"T:Microsoft.Extensions.Configuration.Azure.KeyVault.AzureKeyVaultConfigurationProvider\"></see> with <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationBuilder\"></see>.\n"
  example: []
  syntax:
    content: public static class AzureKeyVaultConfigurationExtensions
    content.vb: Public Module AzureKeyVaultConfigurationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String)
  commentId: M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String)
  id: AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddAzureKeyVault(IConfigurationBuilder, String, String, String)
  nameWithType: AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(IConfigurationBuilder, String, String, String)
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AddAzureKeyVault
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds an <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationProvider\"></see> that reads configuration values from the Azure KeyVault.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddAzureKeyVault(this IConfigurationBuilder configurationBuilder, string vault, string clientId, string clientSecret)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureKeyVault(configurationBuilder As IConfigurationBuilder, vault As String, clientId As String, clientSecret As String) As IConfigurationBuilder
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see> to add to.
    - id: vault
      type: System.String
      description: The Azure KeyVault uri.
    - id: clientId
      type: System.String
      description: The application client id.
    - id: clientSecret
      type: System.String
      description: The client secret to use for authentication.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  commentId: M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  id: AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.String,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddAzureKeyVault(IConfigurationBuilder, String, String, String, IKeyVaultSecretManager)
  nameWithType: AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(IConfigurationBuilder, String, String, String, IKeyVaultSecretManager)
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.String, System.String, Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AddAzureKeyVault
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds an <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationProvider\"></see> that reads configuration values from the Azure KeyVault.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddAzureKeyVault(this IConfigurationBuilder configurationBuilder, string vault, string clientId, string clientSecret, IKeyVaultSecretManager manager)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureKeyVault(configurationBuilder As IConfigurationBuilder, vault As String, clientId As String, clientSecret As String, manager As IKeyVaultSecretManager) As IConfigurationBuilder
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see> to add to.
    - id: vault
      type: System.String
      description: The Azure KeyVault uri.
    - id: clientId
      type: System.String
      description: The application client id.
    - id: clientSecret
      type: System.String
      description: The client secret to use for authentication.
    - id: manager
      type: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
      description: The <see cref="T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager"></see> instance used to control secret loading.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddAzureKeyVault(IConfigurationBuilder, String, String, X509Certificate2)
  nameWithType: AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(IConfigurationBuilder, String, String, X509Certificate2)
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AddAzureKeyVault
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds an <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationProvider\"></see> that reads configuration values from the Azure KeyVault.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddAzureKeyVault(this IConfigurationBuilder configurationBuilder, string vault, string clientId, X509Certificate2 certificate)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureKeyVault(configurationBuilder As IConfigurationBuilder, vault As String, clientId As String, certificate As X509Certificate2) As IConfigurationBuilder
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see> to add to.
    - id: vault
      type: System.String
      description: Azure KeyVault uri.
    - id: clientId
      type: System.String
      description: The application client id.
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"></see> to use for authentication.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  commentId: M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  id: AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddAzureKeyVault(IConfigurationBuilder, String, String, X509Certificate2, IKeyVaultSecretManager)
  nameWithType: AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(IConfigurationBuilder, String, String, X509Certificate2, IKeyVaultSecretManager)
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2, Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AddAzureKeyVault
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 91
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds an <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationProvider\"></see> that reads configuration values from the Azure KeyVault.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddAzureKeyVault(this IConfigurationBuilder configurationBuilder, string vault, string clientId, X509Certificate2 certificate, IKeyVaultSecretManager manager)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureKeyVault(configurationBuilder As IConfigurationBuilder, vault As String, clientId As String, certificate As X509Certificate2, manager As IKeyVaultSecretManager) As IConfigurationBuilder
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see> to add to.
    - id: vault
      type: System.String
      description: Azure KeyVault uri.
    - id: clientId
      type: System.String
      description: The application client id.
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"></see> to use for authentication.
    - id: manager
      type: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
      description: The <see cref="T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager"></see> instance used to control secret loading.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  commentId: M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  id: AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddAzureKeyVault(IConfigurationBuilder, String, KeyVaultClient, IKeyVaultSecretManager)
  nameWithType: AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(IConfigurationBuilder, String, KeyVaultClient, IKeyVaultSecretManager)
  fullName: Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: AddAzureKeyVault
    path: src/Microsoft.Extensions.Configuration.Azure.KeyVault/AzureKeyVaultConfigurationExtensions.cs
    startLine: 120
  assemblies:
  - Microsoft.Extensions.Configuration.Azure.KeyVault
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds an <see cref=\"T:Microsoft.Extensions.Configuration.IConfigurationProvider\"></see> that reads configuration values from the Azure KeyVault.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddAzureKeyVault(this IConfigurationBuilder configurationBuilder, string vault, KeyVaultClient client, IKeyVaultSecretManager manager)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureKeyVault(configurationBuilder As IConfigurationBuilder, vault As String, client As KeyVaultClient, manager As IKeyVaultSecretManager) As IConfigurationBuilder
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see> to add to.
    - id: vault
      type: System.String
      description: Azure KeyVault uri.
    - id: client
      type: Microsoft.Azure.KeyVault.KeyVaultClient
      description: The <see cref="T:Microsoft.Azure.KeyVault.KeyVaultClient"></see> to use for retrieving values.
    - id: manager
      type: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
      description: The <see cref="T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager"></see> instance used to control secret loading.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"></see>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  commentId: T:Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
  parent: Microsoft.Extensions.Configuration.Azure.KeyVault
  isExternal: false
  name: IKeyVaultSecretManager
  nameWithType: IKeyVaultSecretManager
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault.IKeyVaultSecretManager
- uid: Microsoft.Extensions.Configuration.Azure.KeyVault
  commentId: N:Microsoft.Extensions.Configuration.Azure.KeyVault
  isExternal: false
  name: Microsoft.Extensions.Configuration.Azure.KeyVault
  nameWithType: Microsoft.Extensions.Configuration.Azure.KeyVault
  fullName: Microsoft.Extensions.Configuration.Azure.KeyVault
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.Azure.KeyVault.KeyVaultClient
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClient
  parent: Microsoft.Azure.KeyVault
  isExternal: true
  name: KeyVaultClient
  nameWithType: KeyVaultClient
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
