### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware
  commentId: T:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware
  id: DefaultFilesMiddleware
  parent: Microsoft.AspNetCore.StaticFiles
  children:
  - Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor(RequestDelegate,IHostingEnvironment,IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions})
  - Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke(HttpContext)
  langs:
  - csharp
  - vb
  name: DefaultFilesMiddleware
  nameWithType: DefaultFilesMiddleware
  fullName: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: DefaultFilesMiddleware
    path: ../aspnet/StaticFiles/src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nThis examines a directory path and determines if there is a default file present.\nIf so the file name is appended to the path and execution continues.\nNote we don't just serve the file because it may require interpretation.\n"
  example: []
  syntax:
    content: public class DefaultFilesMiddleware
    content.vb: Public Class DefaultFilesMiddleware
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor(RequestDelegate,IHostingEnvironment,IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions})
  commentId: M:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor(RequestDelegate,IHostingEnvironment,IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions})
  id: '#ctor(RequestDelegate,IHostingEnvironment,IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions})'
  parent: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware
  langs:
  - csharp
  - vb
  name: DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions<DefaultFilesOptions>)
  nameWithType: DefaultFilesMiddleware.DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions<DefaultFilesOptions>)
  fullName: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions<Microsoft.AspNetCore.Builder.DefaultFilesOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: .ctor
    path: ../aspnet/StaticFiles/src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nCreates a new instance of the DefaultFilesMiddleware.\n"
  example: []
  syntax:
    content: public DefaultFilesMiddleware(RequestDelegate next, IHostingEnvironment hostingEnv, IOptions<DefaultFilesOptions> options)
    parameters:
    - id: next
      type: RequestDelegate
      description: The next middleware in the pipeline.
    - id: hostingEnv
      type: IHostingEnvironment
      description: The <see cref="!:IHostingEnvironment"></see> used by this middleware.
    - id: options
      type: IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions}
      description: The configuration options for this middleware.
    content.vb: Public Sub New(next As RequestDelegate, hostingEnv As IHostingEnvironment, options As IOptions(Of DefaultFilesOptions))
  overload: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor*
  nameWithType.vb: DefaultFilesMiddleware.DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions(Of DefaultFilesOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions(Of Microsoft.AspNetCore.Builder.DefaultFilesOptions))
  name.vb: DefaultFilesMiddleware(RequestDelegate, IHostingEnvironment, IOptions(Of DefaultFilesOptions))
- uid: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke(HttpContext)
  commentId: M:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke(HttpContext)
  id: Invoke(HttpContext)
  parent: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware
  langs:
  - csharp
  - vb
  name: Invoke(HttpContext)
  nameWithType: DefaultFilesMiddleware.Invoke(HttpContext)
  fullName: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: Invoke
    path: ../aspnet/StaticFiles/src/Microsoft.AspNetCore.StaticFiles/DefaultFilesMiddleware.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nThis examines the request to see if it matches a configured directory, and if there are any files with the\nconfigured default names in that directory.  If so this will append the corresponding file name to the request\npath for a later middleware to handle.\n"
  example: []
  syntax:
    content: public Task Invoke(HttpContext context)
    parameters:
    - id: context
      type: HttpContext
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Invoke(context As HttpContext) As Task
  overload: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.StaticFiles
  commentId: N:Microsoft.AspNetCore.StaticFiles
  isExternal: false
  name: Microsoft.AspNetCore.StaticFiles
  nameWithType: Microsoft.AspNetCore.StaticFiles
  fullName: Microsoft.AspNetCore.StaticFiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor*
  commentId: Overload:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.#ctor
  isExternal: false
  name: DefaultFilesMiddleware
  nameWithType: DefaultFilesMiddleware.DefaultFilesMiddleware
  fullName: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.DefaultFilesMiddleware
- uid: RequestDelegate
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: RequestDelegate
- uid: IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: IHostingEnvironment
- uid: IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Builder.DefaultFilesOptions}'
  definition: IOptions`1
  name: IOptions<DefaultFilesOptions>
  nameWithType: IOptions<DefaultFilesOptions>
  fullName: IOptions<Microsoft.AspNetCore.Builder.DefaultFilesOptions>
  nameWithType.vb: IOptions(Of DefaultFilesOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Builder.DefaultFilesOptions)
  name.vb: IOptions(Of DefaultFilesOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.DefaultFilesOptions
    name: DefaultFilesOptions
    nameWithType: DefaultFilesOptions
    fullName: Microsoft.AspNetCore.Builder.DefaultFilesOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.DefaultFilesOptions
    name: DefaultFilesOptions
    nameWithType: DefaultFilesOptions
    fullName: Microsoft.AspNetCore.Builder.DefaultFilesOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke*
  commentId: Overload:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke
  isExternal: false
  name: Invoke
  nameWithType: DefaultFilesMiddleware.Invoke
  fullName: Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware.Invoke
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
