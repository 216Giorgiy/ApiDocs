### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  commentId: T:Microsoft.AspNetCore.Http.SendFileResponseExtensions
  id: SendFileResponseExtensions
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SendFileResponseExtensions
  nameWithType: SendFileResponseExtensions
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SendFileResponseExtensions
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nProvides extensions for HttpResponse exposing the SendFile extension.\n"
  example: []
  syntax:
    content: public static class SendFileResponseExtensions
    content.vb: Public Module SendFileResponseExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Threading.CancellationToken)
  id: SendFileAsync(HttpResponse,IFileInfo,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  langs:
  - csharp
  - vb
  name: SendFileAsync(HttpResponse, IFileInfo, CancellationToken)
  nameWithType: SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SendFileAsync
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nSends the given file using the SendFile extension.\n"
  example: []
  syntax:
    content: public static Task SendFileAsync(this HttpResponse response, IFileInfo file, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: response
      type: HttpResponse
      description: ''
    - id: file
      type: IFileInfo
      description: The file.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendFileAsync(response As HttpResponse, file As IFileInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,IFileInfo,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: SendFileAsync(HttpResponse,IFileInfo,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  langs:
  - csharp
  - vb
  name: SendFileAsync(HttpResponse, IFileInfo, Int64, Nullable<Int64>, CancellationToken)
  nameWithType: SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, Int64, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, System.Int64, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SendFileAsync
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nSends the given file using the SendFile extension.\n"
  example: []
  syntax:
    content: public static Task SendFileAsync(this HttpResponse response, IFileInfo file, long offset, long ? count, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: response
      type: HttpResponse
      description: ''
    - id: file
      type: IFileInfo
      description: The file.
    - id: offset
      type: System.Int64
      description: The offset in the file.
    - id: count
      type: System.Nullable{System.Int64}
      description: The number of bytes to send, or null to send the remainder of the file.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendFileAsync(response As HttpResponse, file As IFileInfo, offset As Long, count As Long?, cancellationToken As CancellationToken = Nothing) As Task
  overload: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync*
  nameWithType.vb: SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, Int64, Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, IFileInfo, System.Int64, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: SendFileAsync(HttpResponse, IFileInfo, Int64, Nullable(Of Int64), CancellationToken)
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Threading.CancellationToken)
  id: SendFileAsync(HttpResponse,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  langs:
  - csharp
  - vb
  name: SendFileAsync(HttpResponse, String, CancellationToken)
  nameWithType: SendFileResponseExtensions.SendFileAsync(HttpResponse, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SendFileAsync
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nSends the given file using the SendFile extension.\n"
  example: []
  syntax:
    content: public static Task SendFileAsync(this HttpResponse response, string fileName, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: response
      type: HttpResponse
      description: ''
    - id: fileName
      type: System.String
      description: The full path to the file.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendFileAsync(response As HttpResponse, fileName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse,System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: SendFileAsync(HttpResponse,System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SendFileResponseExtensions
  langs:
  - csharp
  - vb
  name: SendFileAsync(HttpResponse, String, Int64, Nullable<Int64>, CancellationToken)
  nameWithType: SendFileResponseExtensions.SendFileAsync(HttpResponse, String, Int64, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, System.String, System.Int64, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SendFileAsync
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/SendFileResponseExtensions.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nSends the given file using the SendFile extension.\n"
  example: []
  syntax:
    content: public static Task SendFileAsync(this HttpResponse response, string fileName, long offset, long ? count, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: response
      type: HttpResponse
      description: ''
    - id: fileName
      type: System.String
      description: The full path to the file.
    - id: offset
      type: System.Int64
      description: The offset in the file.
    - id: count
      type: System.Nullable{System.Int64}
      description: The number of bytes to send, or null to send the remainder of the file.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendFileAsync(response As HttpResponse, fileName As String, offset As Long, count As Long?, cancellationToken As CancellationToken = Nothing) As Task
  overload: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync*
  nameWithType.vb: SendFileResponseExtensions.SendFileAsync(HttpResponse, String, Int64, Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync(HttpResponse, System.String, System.Int64, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: SendFileAsync(HttpResponse, String, Int64, Nullable(Of Int64), CancellationToken)
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync*
  commentId: Overload:Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync
  isExternal: false
  name: SendFileAsync
  nameWithType: SendFileResponseExtensions.SendFileAsync
  fullName: Microsoft.AspNetCore.Http.SendFileResponseExtensions.SendFileAsync
- uid: HttpResponse
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: HttpResponse
- uid: IFileInfo
  isExternal: true
  name: IFileInfo
  nameWithType: IFileInfo
  fullName: IFileInfo
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
