### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  id: MvcRazorHost
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,ITagHelperDescriptorResolver)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(CodeGenerator,CodeGeneratorContext)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(ParserBase)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(RazorParser,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
  langs:
  - csharp
  - vb
  name: MvcRazorHost
  nameWithType: MvcRazorHost
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcRazorHost
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  syntax:
    content: 'public class MvcRazorHost : RazorEngineHost, IMvcRazorHost'
    content.vb: >-
      Public Class MvcRazorHost
          Inherits RazorEngineHost
          Implements IMvcRazorHost
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: MvcRazorHost(String)
  nameWithType: MvcRazorHost.MvcRazorHost(String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.MvcRazorHost(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost\" data-throw-if-not-resolved=\"false\"></xref> with the specified  <span class=\"paramref\">root</span>.\n"
  example: []
  syntax:
    content: public MvcRazorHost(string root)
    parameters:
    - id: root
      type: System.String
      description: The path to the application base.
    content.vb: Public Sub New(root As String)
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,ITagHelperDescriptorResolver)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,ITagHelperDescriptorResolver)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,ITagHelperDescriptorResolver)'
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: MvcRazorHost(IChunkTreeCache, ITagHelperDescriptorResolver)
  nameWithType: MvcRazorHost.MvcRazorHost(IChunkTreeCache, ITagHelperDescriptorResolver)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.MvcRazorHost(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache, ITagHelperDescriptorResolver)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost\" data-throw-if-not-resolved=\"false\"></xref> using the specified <span class=\"paramref\">chunkTreeCache</span>.\n"
  example: []
  syntax:
    content: public MvcRazorHost(IChunkTreeCache chunkTreeCache, ITagHelperDescriptorResolver resolver)
    parameters:
    - id: chunkTreeCache
      type: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
      description: An <xref href="Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" data-throw-if-not-resolved="false"></xref> rooted at the application base path.
    - id: resolver
      type: ITagHelperDescriptorResolver
      description: The <see cref="!:ITagHelperDescriptorResolver"></see> used to resolve tag helpers on razor views.
    content.vb: Public Sub New(chunkTreeCache As IChunkTreeCache, resolver As ITagHelperDescriptorResolver)
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
  id: TagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorResolver
  nameWithType: MvcRazorHost.TagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TagHelperDescriptorResolver
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 158
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public override ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; set; }
    parameters: []
    return:
      type: ITagHelperDescriptorResolver
    content.vb: Public Overrides Property TagHelperDescriptorResolver As ITagHelperDescriptorResolver
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
  id: DefaultModel
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: DefaultModel
  nameWithType: MvcRazorHost.DefaultModel
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultModel
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the model type used by default when no model is specified.\n"
  remarks: 'This value is used as the generic type argument for the base type '
  example: []
  syntax:
    content: public virtual string DefaultModel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DefaultModel As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
  id: DefaultInheritedChunks
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: DefaultInheritedChunks
  nameWithType: MvcRazorHost.DefaultInheritedChunks
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultInheritedChunks
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 194
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the list of chunks that are injected by default by this host.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<Chunk> DefaultInheritedChunks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Chunk}
    content.vb: Public Overridable ReadOnly Property DefaultInheritedChunks As IReadOnlyList(Of Chunk)
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
  id: InjectAttribute
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: InjectAttribute
  nameWithType: MvcRazorHost.InjectAttribute
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InjectAttribute
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the name attribute that is used to decorate properties that are injected and need to be\nactivated.\n"
  example: []
  syntax:
    content: public virtual string InjectAttribute { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property InjectAttribute As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
  id: ModelExpressionType
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: ModelExpressionType
  nameWithType: MvcRazorHost.ModelExpressionType
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelExpressionType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 211
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the type name used to represent <see cref=\"!:ITagHelper\"></see> model expression properties.\n"
  example: []
  syntax:
    content: public virtual string ModelExpressionType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ModelExpressionType As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
  id: CreateModelExpressionMethod
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: CreateModelExpressionMethod
  nameWithType: MvcRazorHost.CreateModelExpressionMethod
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateModelExpressionMethod
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 219
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the method name used to create model expressions.\n"
  example: []
  syntax:
    content: public virtual string CreateModelExpressionMethod { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property CreateModelExpressionMethod As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
  id: ModelExpressionProvider
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: ModelExpressionProvider
  nameWithType: MvcRazorHost.ModelExpressionProvider
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelExpressionProvider
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the property name for <code>IModelExpressionProvider</code>.\n"
  example: []
  syntax:
    content: public virtual string ModelExpressionProvider { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ModelExpressionProvider As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
  id: ViewDataPropertyName
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: ViewDataPropertyName
  nameWithType: MvcRazorHost.ViewDataPropertyName
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewDataPropertyName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 235
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the property name for <code>ViewDataDictionary</code>.\n"
  example: []
  syntax:
    content: public virtual string ViewDataPropertyName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ViewDataPropertyName As String
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)
  id: GetInheritedChunkTreeResults(System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: GetInheritedChunkTreeResults(String)
  nameWithType: MvcRazorHost.GetInheritedChunkTreeResults(String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetInheritedChunkTreeResults
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 265
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nLocates and parses _ViewImports.cshtml files applying to the given <span class=\"paramref\">sourceFileName</span> to\ncreate <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ChunkTreeResult> GetInheritedChunkTreeResults(string sourceFileName)
    parameters:
    - id: sourceFileName
      type: System.String
      description: The path to a Razor file to locate _ViewImports.cshtml for.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult}
      description: Inherited <xref href="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" data-throw-if-not-resolved="false"></xref>s.
    content.vb: Public Function GetInheritedChunkTreeResults(sourceFileName As String) As IReadOnlyList(Of ChunkTreeResult)
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  id: GenerateCode(System.String,System.IO.Stream)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: GenerateCode(String, Stream)
  nameWithType: MvcRazorHost.GenerateCode(String, Stream)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GenerateCode
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 280
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nParses and generates the contents of a Razor file represented by <span class=\"paramref\">inputStream</span>.\n"
  example: []
  syntax:
    content: public GeneratorResults GenerateCode(string rootRelativePath, Stream inputStream)
    parameters:
    - id: rootRelativePath
      type: System.String
      description: >-
        The path of the relative to the root of the application.

        Used to generate line pragmas and calculate the class name of the generated type.
    - id: inputStream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the Razor contents.
    return:
      type: GeneratorResults
      description: >
        A <see cref="!:GeneratorResults"></see> instance that represents the results of code generation.
    content.vb: Public Function GenerateCode(rootRelativePath As String, inputStream As Stream) As GeneratorResults
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode*
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(RazorParser,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(RazorParser,System.String)
  id: DecorateRazorParser(RazorParser,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: DecorateRazorParser(RazorParser, String)
  nameWithType: MvcRazorHost.DecorateRazorParser(RazorParser, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(RazorParser, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DecorateRazorParser
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 288
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public override RazorParser DecorateRazorParser(RazorParser razorParser, string sourceFileName)
    parameters:
    - id: razorParser
      type: RazorParser
    - id: sourceFileName
      type: System.String
    return:
      type: RazorParser
    content.vb: Public Overrides Function DecorateRazorParser(razorParser As RazorParser, sourceFileName As String) As RazorParser
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(ParserBase)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(ParserBase)
  id: DecorateCodeParser(ParserBase)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: DecorateCodeParser(ParserBase)
  nameWithType: MvcRazorHost.DecorateCodeParser(ParserBase)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(ParserBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DecorateCodeParser
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 300
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public override ParserBase DecorateCodeParser(ParserBase incomingCodeParser)
    parameters:
    - id: incomingCodeParser
      type: ParserBase
    return:
      type: ParserBase
    content.vb: Public Overrides Function DecorateCodeParser(incomingCodeParser As ParserBase) As ParserBase
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(CodeGenerator,CodeGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(CodeGenerator,CodeGeneratorContext)
  id: DecorateCodeGenerator(CodeGenerator,CodeGeneratorContext)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  langs:
  - csharp
  - vb
  name: DecorateCodeGenerator(CodeGenerator, CodeGeneratorContext)
  nameWithType: MvcRazorHost.DecorateCodeGenerator(CodeGenerator, CodeGeneratorContext)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(CodeGenerator, CodeGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DecorateCodeGenerator
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorHost.cs
    startLine: 311
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public override CodeGenerator DecorateCodeGenerator(CodeGenerator incomingGenerator, CodeGeneratorContext context)
    parameters:
    - id: incomingGenerator
      type: CodeGenerator
    - id: context
      type: CodeGeneratorContext
    return:
      type: CodeGenerator
    content.vb: Public Overrides Function DecorateCodeGenerator(incomingGenerator As CodeGenerator, context As CodeGeneratorContext) As CodeGenerator
  overload: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IMvcRazorHost
  nameWithType: IMvcRazorHost
  fullName: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: MvcRazorHost
  nameWithType: MvcRazorHost
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor
  isExternal: false
  name: MvcRazorHost
  nameWithType: MvcRazorHost.MvcRazorHost
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.MvcRazorHost
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: IChunkTreeCache
  nameWithType: IChunkTreeCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
- uid: ITagHelperDescriptorResolver
  isExternal: true
  name: ITagHelperDescriptorResolver
  nameWithType: ITagHelperDescriptorResolver
  fullName: ITagHelperDescriptorResolver
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Directives
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Directives
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
  isExternal: false
  name: TagHelperDescriptorResolver
  nameWithType: MvcRazorHost.TagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
  isExternal: false
  name: DefaultModel
  nameWithType: MvcRazorHost.DefaultModel
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
  isExternal: false
  name: DefaultInheritedChunks
  nameWithType: MvcRazorHost.DefaultInheritedChunks
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks
- uid: System.Collections.Generic.IReadOnlyList{Chunk}
  commentId: T:System.Collections.Generic.IReadOnlyList{Chunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Chunk>
  nameWithType: IReadOnlyList<Chunk>
  fullName: System.Collections.Generic.IReadOnlyList<Chunk>
  nameWithType.vb: IReadOnlyList(Of Chunk)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Chunk)
  name.vb: IReadOnlyList(Of Chunk)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Chunk
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Chunk
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
  isExternal: false
  name: InjectAttribute
  nameWithType: MvcRazorHost.InjectAttribute
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
  isExternal: false
  name: ModelExpressionType
  nameWithType: MvcRazorHost.ModelExpressionType
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
  isExternal: false
  name: CreateModelExpressionMethod
  nameWithType: MvcRazorHost.CreateModelExpressionMethod
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
  isExternal: false
  name: ModelExpressionProvider
  nameWithType: MvcRazorHost.ModelExpressionProvider
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
  isExternal: false
  name: ViewDataPropertyName
  nameWithType: MvcRazorHost.ViewDataPropertyName
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
  isExternal: false
  name: ChunkTreeResult
  nameWithType: ChunkTreeResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults
  isExternal: false
  name: GetInheritedChunkTreeResults
  nameWithType: MvcRazorHost.GetInheritedChunkTreeResults
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ChunkTreeResult>
  nameWithType: IReadOnlyList<ChunkTreeResult>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult>
  nameWithType.vb: IReadOnlyList(Of ChunkTreeResult)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult)
  name.vb: IReadOnlyList(Of ChunkTreeResult)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
    name: ChunkTreeResult
    nameWithType: ChunkTreeResult
    fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
    name: ChunkTreeResult
    nameWithType: ChunkTreeResult
    fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode
  isExternal: false
  name: GenerateCode
  nameWithType: MvcRazorHost.GenerateCode
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode
- uid: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)
  parent: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost
  isExternal: true
  name: GenerateCode(String, Stream)
  nameWithType: IMvcRazorHost.GenerateCode(String, Stream)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String, System.IO.Stream)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)
    name: GenerateCode
    nameWithType: IMvcRazorHost.GenerateCode
    fullName: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)
    name: GenerateCode
    nameWithType: IMvcRazorHost.GenerateCode
    fullName: Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: GeneratorResults
  isExternal: true
  name: GeneratorResults
  nameWithType: GeneratorResults
  fullName: GeneratorResults
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser
  isExternal: false
  name: DecorateRazorParser
  nameWithType: MvcRazorHost.DecorateRazorParser
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser
- uid: RazorParser
  isExternal: true
  name: RazorParser
  nameWithType: RazorParser
  fullName: RazorParser
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser
  isExternal: false
  name: DecorateCodeParser
  nameWithType: MvcRazorHost.DecorateCodeParser
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser
- uid: ParserBase
  isExternal: true
  name: ParserBase
  nameWithType: ParserBase
  fullName: ParserBase
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator
  isExternal: false
  name: DecorateCodeGenerator
  nameWithType: MvcRazorHost.DecorateCodeGenerator
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator
- uid: CodeGenerator
  isExternal: true
  name: CodeGenerator
  nameWithType: CodeGenerator
  fullName: CodeGenerator
- uid: CodeGeneratorContext
  isExternal: true
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: CodeGeneratorContext
shouldSkipMarkup: true
