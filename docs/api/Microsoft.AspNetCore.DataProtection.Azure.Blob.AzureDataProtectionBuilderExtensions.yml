### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  commentId: T:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  id: AzureDataProtectionBuilderExtensions
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob
  children:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Uri)
  langs:
  - csharp
  - vb
  name: AzureDataProtectionBuilderExtensions
  nameWithType: AzureDataProtectionBuilderExtensions
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: AzureDataProtectionBuilderExtensions
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nContains Azure-specific extension methods for modifying a\n<see cref=\"T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder\"></see>.\n"
  example: []
  syntax:
    content: public static class AzureDataProtectionBuilderExtensions
    content.vb: Public Module AzureDataProtectionBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)
  id: PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudStorageAccount, String)
  nameWithType: AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudStorageAccount, String)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToAzureBlobStorage
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nConfigures the data protection system to persist keys to the specified path\nin Azure Blob Storage.\n"
  remarks: "\nThe container referenced by <em>relativePath</em> must already exist.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToAzureBlobStorage(this IDataProtectionBuilder builder, CloudStorageAccount storageAccount, string relativePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToAzureBlobStorage(builder As IDataProtectionBuilder, storageAccount As CloudStorageAccount, relativePath As String) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: >-
        The <see cref="T:Microsoft.WindowsAzure.Storage.CloudStorageAccount"></see> which

        should be utilized.
    - id: relativePath
      type: System.String
      description: >-
        A relative path where the key file should be

        stored, generally specified as "/containerName/[subDir/]keys.xml".
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The value <em>builder</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Uri)
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Uri)
  id: PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Uri)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToAzureBlobStorage(IDataProtectionBuilder, Uri)
  nameWithType: AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(IDataProtectionBuilder, Uri)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Uri)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToAzureBlobStorage
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nConfigures the data protection system to persist keys to the specified path\nin Azure Blob Storage.\n"
  remarks: "\nThe container referenced by <em>blobUri</em> must already exist.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToAzureBlobStorage(this IDataProtectionBuilder builder, Uri blobUri)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToAzureBlobStorage(builder As IDataProtectionBuilder, blobUri As Uri) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: blobUri
      type: System.Uri
      description: >-
        The full URI where the key file should be stored.

        The URI must contain the SAS token as a query string parameter.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The value <em>builder</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)
  id: PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudBlockBlob)
  nameWithType: AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudBlockBlob)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToAzureBlobStorage
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nConfigures the data protection system to persist keys to the specified path\nin Azure Blob Storage.\n"
  remarks: "\nThe container referenced by <em>blobReference</em> must already exist.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToAzureBlobStorage(this IDataProtectionBuilder builder, CloudBlockBlob blobReference)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToAzureBlobStorage(builder As IDataProtectionBuilder, blobReference As CloudBlockBlob) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: blobReference
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: >-
        The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob"></see> where the

        key file should be stored.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The value <em>builder</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  id: PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudBlobContainer, String)
  nameWithType: AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(IDataProtectionBuilder, CloudBlobContainer, String)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureDataProtectionBuilderExtensions.PersistKeysToAzureBlobStorage(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: PersistKeysToAzureBlobStorage
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureDataProtectionBuilderExtensions.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nConfigures the data protection system to persist keys to the specified path\nin Azure Blob Storage.\n"
  remarks: "\nThe container referenced by <em>container</em> must already exist.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToAzureBlobStorage(this IDataProtectionBuilder builder, CloudBlobContainer container, string blobName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToAzureBlobStorage(builder As IDataProtectionBuilder, container As CloudBlobContainer, blobName As String) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The builder instance to modify.
    - id: container
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: >-
        The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer"></see> in which the

        key file should be stored.
    - id: blobName
      type: System.String
      description: >-
        The name of the key file, generally specified

        as "[subdir/]keys.xml"
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The value <em>builder</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob
  commentId: N:Microsoft.AspNetCore.DataProtection.Azure.Blob
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.Azure.Blob
  nameWithType: Microsoft.AspNetCore.DataProtection.Azure.Blob
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtectionBuilder
  nameWithType: IDataProtectionBuilder
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  commentId: T:Microsoft.WindowsAzure.Storage.CloudStorageAccount
  parent: Microsoft.WindowsAzure.Storage
  isExternal: true
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
