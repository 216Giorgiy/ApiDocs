### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  id: RazorViewEngine
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,HtmlEncoder,IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},ILoggerFactory)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(ActionContext,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(ActionContext,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  langs:
  - csharp
  - vb
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RazorViewEngine
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nDefault implementation of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nFor <code>ViewResults</code> returned from controllers, views should be located in\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats\" data-throw-if-not-resolved=\"false\"></xref>\nby default. For the controllers in an area, views should exist in\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class RazorViewEngine : IRazorViewEngine, IViewEngine'
    content.vb: >-
      Public Class RazorViewEngine
          Implements IRazorViewEngine, IViewEngine
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  - IViewEngine
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  commentId: F:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  id: ViewExtension
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: ViewExtension
  nameWithType: RazorViewEngine.ViewExtension
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewExtension
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  syntax:
    content: public static readonly string ViewExtension
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ViewExtension As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,HtmlEncoder,IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,HtmlEncoder,IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},ILoggerFactory)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,HtmlEncoder,IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},ILoggerFactory)'
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions<RazorViewEngineOptions>, ILoggerFactory)
  nameWithType: RazorViewEngine.RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions<RazorViewEngineOptions>, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.RazorViewEngine(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider, Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator, HtmlEncoder, IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RazorViewEngine(IRazorPageFactoryProvider pageFactory, IRazorPageActivator pageActivator, HtmlEncoder htmlEncoder, IOptions<RazorViewEngineOptions> optionsAccessor, ILoggerFactory loggerFactory)
    parameters:
    - id: pageFactory
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
    - id: pageActivator
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
    - id: htmlEncoder
      type: HtmlEncoder
    - id: optionsAccessor
      type: IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
    - id: loggerFactory
      type: ILoggerFactory
    content.vb: Public Sub New(pageFactory As IRazorPageFactoryProvider, pageActivator As IRazorPageActivator, htmlEncoder As HtmlEncoder, optionsAccessor As IOptions(Of RazorViewEngineOptions), loggerFactory As ILoggerFactory)
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor*
  nameWithType.vb: RazorViewEngine.RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions(Of RazorViewEngineOptions), ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.RazorViewEngine(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider, Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator, HtmlEncoder, IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions), ILoggerFactory)
  name.vb: RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions(Of RazorViewEngineOptions), ILoggerFactory)
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  id: ViewLookupCache
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: ViewLookupCache
  nameWithType: RazorViewEngine.ViewLookupCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewLookupCache
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nA cache for results of view lookups.\n"
  example: []
  syntax:
    content: protected IMemoryCache ViewLookupCache { get; }
    parameters: []
    return:
      type: IMemoryCache
    content.vb: Protected ReadOnly Property ViewLookupCache As IMemoryCache
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(ActionContext,System.String)
  id: GetNormalizedRouteValue(ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetNormalizedRouteValue(ActionContext, String)
  nameWithType: RazorViewEngine.GetNormalizedRouteValue(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(ActionContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetNormalizedRouteValue
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the case-normalized route value for the specified route <span class=\"paramref\">key</span>.\n"
  remarks: "\nThe casing of a route value in <see cref=\"!:ActionContext.RouteData\"></see> is determined by the client.\nThis making constructing paths for view locations in a case sensitive file system unreliable. Using the\n<see cref=\"!:Abstractions.ActionDescriptor.RouteValues\"></see> to get route values\nproduces consistently cased results.\n"
  example: []
  syntax:
    content: public static string GetNormalizedRouteValue(ActionContext context, string key)
    parameters:
    - id: context
      type: ActionContext
      description: The <see cref="!:ActionContext"></see>.
    - id: key
      type: System.String
      description: The route key to lookup.
    return:
      type: System.String
      description: The value corresponding to the key.
    content.vb: Public Shared Function GetNormalizedRouteValue(context As ActionContext, key As String) As String
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(ActionContext,System.String)
  id: FindPage(ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: FindPage(ActionContext, String)
  nameWithType: RazorViewEngine.FindPage(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(ActionContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindPage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nFinds the page with the given <span class=\"paramref\">pageName</span> using view locations and information from the\n<span class=\"paramref\">context</span>.\n"
  remarks: <seealso cref="!:IViewEngine.FindView"></seealso>.
  example: []
  syntax:
    content: public RazorPageResult FindPage(ActionContext context, string pageName)
    parameters:
    - id: context
      type: ActionContext
      description: The <see cref="!:ActionContext"></see>.
    - id: pageName
      type: System.String
      description: The name of the page.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.RazorPageResult" data-throw-if-not-resolved="false"></xref> of locating the page.
    content.vb: Public Function FindPage(context As ActionContext, pageName As String) As RazorPageResult
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage*
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  id: GetPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetPage(String, String)
  nameWithType: RazorViewEngine.GetPage(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetPage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the page with the given <span class=\"paramref\">pagePath</span>, relative to <span class=\"paramref\">executingFilePath</span>\nunless <span class=\"paramref\">pagePath</span> is already absolute.\n"
  remarks: <seealso cref="!:IViewEngine.GetView"></seealso>.
  example: []
  syntax:
    content: public RazorPageResult GetPage(string executingFilePath, string pagePath)
    parameters:
    - id: executingFilePath
      type: System.String
      description: The absolute path to the currently-executing page, if any.
    - id: pagePath
      type: System.String
      description: The path to the page.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.RazorPageResult" data-throw-if-not-resolved="false"></xref> of locating the page.
    content.vb: Public Function GetPage(executingFilePath As String, pagePath As String) As RazorPageResult
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage*
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext,System.String,System.Boolean)
  id: FindView(ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: FindView(ActionContext, String, Boolean)
  nameWithType: RazorViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindView
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage)
    parameters:
    - id: context
      type: ActionContext
    - id: viewName
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: ViewEngineResult
    content.vb: Public Function FindView(context As ActionContext, viewName As String, isMainPage As Boolean) As ViewEngineResult
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  id: GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetView(String, String, Boolean)
  nameWithType: RazorViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetView
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 214
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage)
    parameters:
    - id: executingFilePath
      type: System.String
    - id: viewPath
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: ViewEngineResult
    content.vb: Public Function GetView(executingFilePath As String, viewPath As String, isMainPage As Boolean) As ViewEngineResult
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  id: GetAbsolutePath(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetAbsolutePath(String, String)
  nameWithType: RazorViewEngine.GetAbsolutePath(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetAbsolutePath
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 312
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nConverts the given <span class=\"paramref\">pagePath</span> to be absolute, relative to\n<span class=\"paramref\">executingFilePath</span> unless <span class=\"paramref\">pagePath</span> is already absolute.\n"
  example: []
  syntax:
    content: public string GetAbsolutePath(string executingFilePath, string pagePath)
    parameters:
    - id: executingFilePath
      type: System.String
      description: The absolute path to the currently-executing page, if any.
    - id: pagePath
      type: System.String
      description: The path to the page.
    return:
      type: System.String
      description: "\nThe combination of <span class=\"paramref\">executingFilePath</span> and <span class=\"paramref\">pagePath</span> if\n<span class=\"paramref\">pagePath</span> is a relative path. The <span class=\"paramref\">pagePath</span> value (unchanged)\notherwise.\n"
    content.vb: Public Function GetAbsolutePath(executingFilePath As String, pagePath As String) As String
  overload: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath*
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorViewEngine
  nameWithType: IRazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IViewEngine
  commentId: '!:IViewEngine'
  isExternal: true
  name: IViewEngine
  nameWithType: IViewEngine
  fullName: IViewEngine
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  isExternal: false
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor
  isExternal: false
  name: RazorViewEngine
  nameWithType: RazorViewEngine.RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.RazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPageFactoryProvider
  nameWithType: IRazorPageFactoryProvider
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPageActivator
  nameWithType: IRazorPageActivator
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
- uid: HtmlEncoder
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: HtmlEncoder
- uid: IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}'
  definition: IOptions`1
  name: IOptions<RazorViewEngineOptions>
  nameWithType: IOptions<RazorViewEngineOptions>
  fullName: IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: IOptions(Of RazorViewEngineOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: IOptions(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  isExternal: false
  name: ViewLookupCache
  nameWithType: RazorViewEngine.ViewLookupCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
- uid: IMemoryCache
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: IMemoryCache
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue
  isExternal: false
  name: GetNormalizedRouteValue
  nameWithType: RazorViewEngine.GetNormalizedRouteValue
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage
  isExternal: false
  name: FindPage
  nameWithType: RazorViewEngine.FindPage
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: FindPage(ActionContext, String)
  nameWithType: IRazorViewEngine.FindPage(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext,System.String)
    name: FindPage
    nameWithType: IRazorViewEngine.FindPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(ActionContext,System.String)
    name: FindPage
    nameWithType: IRazorViewEngine.FindPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: ActionContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: RazorPageResult
  nameWithType: RazorPageResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage
  isExternal: false
  name: GetPage
  nameWithType: RazorViewEngine.GetPage
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: GetPage(String, String)
  nameWithType: IRazorViewEngine.GetPage(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
    name: GetPage
    nameWithType: IRazorViewEngine.GetPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
    name: GetPage
    nameWithType: IRazorViewEngine.GetPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView
  isExternal: false
  name: FindView
  nameWithType: RazorViewEngine.FindView
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ViewEngineResult
  isExternal: true
  name: ViewEngineResult
  nameWithType: ViewEngineResult
  fullName: ViewEngineResult
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView
  isExternal: false
  name: GetView
  nameWithType: RazorViewEngine.GetView
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath
  isExternal: false
  name: GetAbsolutePath
  nameWithType: RazorViewEngine.GetAbsolutePath
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: GetAbsolutePath(String, String)
  nameWithType: IRazorViewEngine.GetAbsolutePath(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
    name: GetAbsolutePath
    nameWithType: IRazorViewEngine.GetAbsolutePath
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
    name: GetAbsolutePath
    nameWithType: IRazorViewEngine.GetAbsolutePath
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
