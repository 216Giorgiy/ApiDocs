### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  commentId: T:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  id: IJsonPatchDocument
  parent: Microsoft.AspNetCore.JsonPatch
  children:
  - Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  - Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  langs:
  - csharp
  - vb
  name: IJsonPatchDocument
  nameWithType: IJsonPatchDocument
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: IJsonPatchDocument
    path: ../aspnet/JsonPatch/src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: public interface IJsonPatchDocument
    content.vb: Public Interface IJsonPatchDocument
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  commentId: P:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  id: ContractResolver
  parent: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  langs:
  - csharp
  - vb
  name: ContractResolver
  nameWithType: IJsonPatchDocument.ContractResolver
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ContractResolver
    path: ../aspnet/JsonPatch/src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: IContractResolver ContractResolver { get; set; }
    parameters: []
    return:
      type: IContractResolver
    content.vb: Property ContractResolver As IContractResolver
  overload: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  commentId: M:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  id: GetOperations
  parent: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  langs:
  - csharp
  - vb
  name: GetOperations()
  nameWithType: IJsonPatchDocument.GetOperations()
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: GetOperations
    path: ../aspnet/JsonPatch/src/Microsoft.AspNetCore.JsonPatch/IJsonPatchDocument.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: IList<Operation> GetOperations()
    return:
      type: IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
    content.vb: Function GetOperations As IList(Of Operation)
  overload: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations*
references:
- uid: Microsoft.AspNetCore.JsonPatch
  commentId: N:Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch
  nameWithType: Microsoft.AspNetCore.JsonPatch
  fullName: Microsoft.AspNetCore.JsonPatch
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver*
  commentId: Overload:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  isExternal: false
  name: ContractResolver
  nameWithType: IJsonPatchDocument.ContractResolver
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
- uid: IContractResolver
  isExternal: true
  name: IContractResolver
  nameWithType: IContractResolver
  fullName: IContractResolver
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations*
  commentId: Overload:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  isExternal: false
  name: GetOperations
  nameWithType: IJsonPatchDocument.GetOperations
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
- uid: IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  commentId: '!:IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}'
  definition: IList`1
  name: IList<Operation>
  nameWithType: IList<Operation>
  fullName: IList<Microsoft.AspNetCore.JsonPatch.Operations.Operation>
  nameWithType.vb: IList(Of Operation)
  fullName.vb: IList(Of Microsoft.AspNetCore.JsonPatch.Operations.Operation)
  name.vb: IList(Of Operation)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
