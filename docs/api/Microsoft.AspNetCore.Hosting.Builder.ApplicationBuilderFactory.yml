### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory
  commentId: T:Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory
  id: ApplicationBuilderFactory
  parent: Microsoft.AspNetCore.Hosting.Builder
  children:
  - Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor(System.IServiceProvider)
  - Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  langs:
  - csharp
  - vb
  name: ApplicationBuilderFactory
  nameWithType: ApplicationBuilderFactory
  fullName: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationBuilderFactory
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Builder
  syntax:
    content: 'public class ApplicationBuilderFactory : IApplicationBuilderFactory'
    content.vb: >-
      Public Class ApplicationBuilderFactory
          Implements IApplicationBuilderFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory
  langs:
  - csharp
  - vb
  name: ApplicationBuilderFactory(IServiceProvider)
  nameWithType: ApplicationBuilderFactory.ApplicationBuilderFactory(IServiceProvider)
  fullName: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.ApplicationBuilderFactory(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Builder
  syntax:
    content: public ApplicationBuilderFactory(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    content.vb: Public Sub New(serviceProvider As IServiceProvider)
  overload: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  id: CreateBuilder(IFeatureCollection)
  parent: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory
  langs:
  - csharp
  - vb
  name: CreateBuilder(IFeatureCollection)
  nameWithType: ApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateBuilder
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Builder/ApplicationBuilderFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Builder
  syntax:
    content: public IApplicationBuilder CreateBuilder(IFeatureCollection serverFeatures)
    parameters:
    - id: serverFeatures
      type: IFeatureCollection
    return:
      type: IApplicationBuilder
    content.vb: Public Function CreateBuilder(serverFeatures As IFeatureCollection) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder*
  implements:
  - Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting.Builder
  commentId: N:Microsoft.AspNetCore.Hosting.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Builder
  nameWithType: Microsoft.AspNetCore.Hosting.Builder
  fullName: Microsoft.AspNetCore.Hosting.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory
  commentId: T:Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory
  parent: Microsoft.AspNetCore.Hosting.Builder
  isExternal: false
  name: IApplicationBuilderFactory
  nameWithType: IApplicationBuilderFactory
  fullName: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.#ctor
  isExternal: false
  name: ApplicationBuilderFactory
  nameWithType: ApplicationBuilderFactory.ApplicationBuilderFactory
  fullName: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.ApplicationBuilderFactory
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder
  isExternal: false
  name: CreateBuilder
  nameWithType: ApplicationBuilderFactory.CreateBuilder
  fullName: Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory.CreateBuilder
- uid: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  parent: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory
  isExternal: true
  name: CreateBuilder(IFeatureCollection)
  nameWithType: IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
    name: CreateBuilder
    nameWithType: IApplicationBuilderFactory.CreateBuilder
    fullName: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: IFeatureCollection
    name: IFeatureCollection
    nameWithType: IFeatureCollection
    fullName: IFeatureCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder(IFeatureCollection)
    name: CreateBuilder
    nameWithType: IApplicationBuilderFactory.CreateBuilder
    fullName: Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory.CreateBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: IFeatureCollection
    name: IFeatureCollection
    nameWithType: IFeatureCollection
    fullName: IFeatureCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IFeatureCollection
  isExternal: true
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: IFeatureCollection
- uid: IApplicationBuilder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: IApplicationBuilder
shouldSkipMarkup: true
