### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents
  commentId: T:Microsoft.Extensions.FileProviders.IDirectoryContents
  id: IDirectoryContents
  parent: Microsoft.Extensions.FileProviders
  children:
  - Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  langs:
  - csharp
  - vb
  name: IDirectoryContents
  nameWithType: IDirectoryContents
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/IDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: IDirectoryContents
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/IDirectoryContents.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nRepresents a directory&apos;s content in the file provider.\n"
  example: []
  syntax:
    content: 'public interface IDirectoryContents : IEnumerable<IFileInfo>'
    content.vb: >-
      Public Interface IDirectoryContents
          Inherits IEnumerable(Of IFileInfo)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  commentId: P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  id: Exists
  parent: Microsoft.Extensions.FileProviders.IDirectoryContents
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: IDirectoryContents.Exists
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Abstractions/IDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Exists
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Abstractions/IDirectoryContents.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.FileProviders.Abstractions
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nTrue if a directory was located at the given path.\n"
  example: []
  syntax:
    content: bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Exists As Boolean
  overload: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists*
  commentId: Overload:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  isExternal: false
  name: Exists
  nameWithType: IDirectoryContents.Exists
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
