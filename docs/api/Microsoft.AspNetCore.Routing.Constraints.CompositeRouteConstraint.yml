### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  id: CompositeRouteConstraint
  parent: Microsoft.AspNetCore.Routing.Constraints
  children:
  - Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor(System.Collections.Generic.IEnumerable{IRouteConstraint})
  - Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
  - Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match(HttpContext,IRouter,System.String,RouteValueDictionary,RouteDirection)
  langs:
  - csharp
  - vb
  name: CompositeRouteConstraint
  nameWithType: CompositeRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: CompositeRouteConstraint
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nConstrains a route by several child constraints.\n"
  example: []
  syntax:
    content: 'public class CompositeRouteConstraint : IRouteConstraint'
    content.vb: >-
      Public Class CompositeRouteConstraint
          Inherits IRouteConstraint
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor(System.Collections.Generic.IEnumerable{IRouteConstraint})
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor(System.Collections.Generic.IEnumerable{IRouteConstraint})
  id: '#ctor(System.Collections.Generic.IEnumerable{IRouteConstraint})'
  parent: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  langs:
  - csharp
  - vb
  name: CompositeRouteConstraint(IEnumerable<IRouteConstraint>)
  nameWithType: CompositeRouteConstraint.CompositeRouteConstraint(IEnumerable<IRouteConstraint>)
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.CompositeRouteConstraint(System.Collections.Generic.IEnumerable<IRouteConstraint>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CompositeRouteConstraint(IEnumerable<IRouteConstraint> constraints)
    parameters:
    - id: constraints
      type: System.Collections.Generic.IEnumerable{IRouteConstraint}
      description: The child constraints that must match for this constraint to match.
    content.vb: Public Sub New(constraints As IEnumerable(Of IRouteConstraint))
  overload: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor*
  nameWithType.vb: CompositeRouteConstraint.CompositeRouteConstraint(IEnumerable(Of IRouteConstraint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.CompositeRouteConstraint(System.Collections.Generic.IEnumerable(Of IRouteConstraint))
  name.vb: CompositeRouteConstraint(IEnumerable(Of IRouteConstraint))
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
  commentId: P:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
  id: Constraints
  parent: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: CompositeRouteConstraint.Constraints
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Constraints
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nGets the child constraints that must match for this constraint to match.\n"
  example: []
  syntax:
    content: public IEnumerable<IRouteConstraint> Constraints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{IRouteConstraint}
    content.vb: Public ReadOnly Property Constraints As IEnumerable(Of IRouteConstraint)
  overload: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match(HttpContext,IRouter,System.String,RouteValueDictionary,RouteDirection)
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match(HttpContext,IRouter,System.String,RouteValueDictionary,RouteDirection)
  id: Match(HttpContext,IRouter,System.String,RouteValueDictionary,RouteDirection)
  parent: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  langs:
  - csharp
  - vb
  name: Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  nameWithType: CompositeRouteConstraint.Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match(HttpContext, IRouter, System.String, RouteValueDictionary, RouteDirection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Match
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Constraints/CompositeRouteConstraint.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  example: []
  syntax:
    content: public bool Match(HttpContext httpContext, IRouter route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection)
    parameters:
    - id: httpContext
      type: HttpContext
    - id: route
      type: IRouter
    - id: routeKey
      type: System.String
    - id: values
      type: RouteValueDictionary
    - id: routeDirection
      type: RouteDirection
    return:
      type: System.Boolean
    content.vb: Public Function Match(httpContext As HttpContext, route As IRouter, routeKey As String, values As RouteValueDictionary, routeDirection As RouteDirection) As Boolean
  overload: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Constraints
  commentId: N:Microsoft.AspNetCore.Routing.Constraints
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Constraints
  nameWithType: Microsoft.AspNetCore.Routing.Constraints
  fullName: Microsoft.AspNetCore.Routing.Constraints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
  isExternal: false
  name: CompositeRouteConstraint
  nameWithType: CompositeRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.#ctor
  isExternal: false
  name: CompositeRouteConstraint
  nameWithType: CompositeRouteConstraint.CompositeRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.CompositeRouteConstraint
- uid: System.Collections.Generic.IEnumerable{IRouteConstraint}
  commentId: T:System.Collections.Generic.IEnumerable{IRouteConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IRouteConstraint>
  nameWithType: IEnumerable<IRouteConstraint>
  fullName: System.Collections.Generic.IEnumerable<IRouteConstraint>
  nameWithType.vb: IEnumerable(Of IRouteConstraint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IRouteConstraint)
  name.vb: IEnumerable(Of IRouteConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: IRouteConstraint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: IRouteConstraint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints*
  commentId: Overload:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
  isExternal: false
  name: Constraints
  nameWithType: CompositeRouteConstraint.Constraints
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Constraints
- uid: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match*
  commentId: Overload:Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match
  isExternal: false
  name: Match
  nameWithType: CompositeRouteConstraint.Match
  fullName: Microsoft.AspNetCore.Routing.Constraints.CompositeRouteConstraint.Match
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: IRouter
  isExternal: true
  name: IRouter
  nameWithType: IRouter
  fullName: IRouter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RouteValueDictionary
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: RouteValueDictionary
- uid: RouteDirection
  isExternal: true
  name: RouteDirection
  nameWithType: RouteDirection
  fullName: RouteDirection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
