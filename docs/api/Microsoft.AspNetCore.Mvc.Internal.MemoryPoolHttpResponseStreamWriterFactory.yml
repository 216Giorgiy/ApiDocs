### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  id: MemoryPoolHttpResponseStreamWriterFactory
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor(ArrayPool{System.Byte},ArrayPool{System.Char})
  - Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize
  langs:
  - csharp
  - vb
  name: MemoryPoolHttpResponseStreamWriterFactory
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MemoryPoolHttpResponseStreamWriterFactory
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory\" data-throw-if-not-resolved=\"false\"></xref> that uses pooled buffers.\n"
  example: []
  syntax:
    content: 'public class MemoryPoolHttpResponseStreamWriterFactory : IHttpResponseStreamWriterFactory'
    content.vb: >-
      Public Class MemoryPoolHttpResponseStreamWriterFactory
          Implements IHttpResponseStreamWriterFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize
  commentId: F:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize
  id: DefaultBufferSize
  parent: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  langs:
  - csharp
  - vb
  name: DefaultBufferSize
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultBufferSize
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nThe default size of created char buffers.\n"
  example: []
  syntax:
    content: public static readonly int DefaultBufferSize
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly DefaultBufferSize As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor(ArrayPool{System.Byte},ArrayPool{System.Char})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor(ArrayPool{System.Byte},ArrayPool{System.Char})
  id: '#ctor(ArrayPool{System.Byte},ArrayPool{System.Char})'
  parent: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  langs:
  - csharp
  - vb
  name: MemoryPoolHttpResponseStreamWriterFactory(ArrayPool<Byte>, ArrayPool<Char>)
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory(ArrayPool<Byte>, ArrayPool<Char>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory(ArrayPool<System.Byte>, ArrayPool<System.Char>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MemoryPoolHttpResponseStreamWriterFactory(ArrayPool<byte> bytePool, ArrayPool<char> charPool)
    parameters:
    - id: bytePool
      type: ArrayPool{System.Byte}
      description: "\nThe <see cref=\"!:ArrayPool&lt;Byte>\"></see> for creating <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> buffers.\n"
    - id: charPool
      type: ArrayPool{System.Char}
      description: "\nThe <see cref=\"!:ArrayPool&lt;Char>\"></see> for creating <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> buffers.\n"
    content.vb: Public Sub New(bytePool As ArrayPool(Of Byte), charPool As ArrayPool(Of Char))
  overload: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor*
  nameWithType.vb: MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory(ArrayPool(Of Byte), ArrayPool(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory(ArrayPool(Of System.Byte), ArrayPool(Of System.Char))
  name.vb: MemoryPoolHttpResponseStreamWriterFactory(ArrayPool(Of Byte), ArrayPool(Of Char))
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  id: CreateWriter(System.IO.Stream,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  langs:
  - csharp
  - vb
  name: CreateWriter(Stream, Encoding)
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(Stream, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateWriter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/MemoryPoolHttpResponseStreamWriterFactory.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TextWriter CreateWriter(Stream stream, Encoding encoding)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>, usually <see cref="!:Http.HttpResponse.Body"></see>.
    - id: encoding
      type: System.Text.Encoding
      description: The <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref>, usually <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.IO.TextWriter
      description: A <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function CreateWriter(stream As Stream, encoding As Encoding) As TextWriter
  overload: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter*
  implements:
  - Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IHttpResponseStreamWriterFactory
  nameWithType: IHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
  isExternal: false
  name: MemoryPoolHttpResponseStreamWriterFactory
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.#ctor
  isExternal: false
  name: MemoryPoolHttpResponseStreamWriterFactory
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.MemoryPoolHttpResponseStreamWriterFactory
- uid: ArrayPool{System.Byte}
  commentId: '!:ArrayPool{System.Byte}'
  definition: ArrayPool`1
  name: ArrayPool<Byte>
  nameWithType: ArrayPool<Byte>
  fullName: ArrayPool<System.Byte>
  nameWithType.vb: ArrayPool(Of Byte)
  fullName.vb: ArrayPool(Of System.Byte)
  name.vb: ArrayPool(Of Byte)
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArrayPool{System.Char}
  commentId: '!:ArrayPool{System.Char}'
  definition: ArrayPool`1
  name: ArrayPool<Char>
  nameWithType: ArrayPool<Char>
  fullName: ArrayPool<System.Char>
  nameWithType.vb: ArrayPool(Of Char)
  fullName.vb: ArrayPool(Of System.Char)
  name.vb: ArrayPool(Of Char)
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArrayPool`1
  isExternal: true
  name: ArrayPool<>
  nameWithType: ArrayPool<>
  fullName: ArrayPool<>
  nameWithType.vb: ArrayPool(Of )
  fullName.vb: ArrayPool(Of )
  name.vb: ArrayPool(Of )
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter
  isExternal: false
  name: CreateWriter
  nameWithType: MemoryPoolHttpResponseStreamWriterFactory.CreateWriter
  fullName: Microsoft.AspNetCore.Mvc.Internal.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter
- uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  isExternal: true
  name: CreateWriter(Stream, Encoding)
  nameWithType: IHttpResponseStreamWriterFactory.CreateWriter(Stream, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream, System.Text.Encoding)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
    name: CreateWriter
    nameWithType: IHttpResponseStreamWriterFactory.CreateWriter
    fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)
    name: CreateWriter
    nameWithType: IHttpResponseStreamWriterFactory.CreateWriter
    fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory.CreateWriter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
shouldSkipMarkup: true
