### YamlMime:ManagedReference
items:
- uid: System.Web.Http.NegotiatedContentResult`1
  commentId: T:System.Web.Http.NegotiatedContentResult`1
  id: NegotiatedContentResult`1
  parent: System.Web.Http
  children:
  - System.Web.Http.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0)
  - System.Web.Http.NegotiatedContentResult`1.Content
  - System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync(ActionContext)
  langs:
  - csharp
  - vb
  name: NegotiatedContentResult<T>
  nameWithType: NegotiatedContentResult<T>
  fullName: System.Web.Http.NegotiatedContentResult<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NegotiatedContentResult
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nAn action result that performs content negotiation.\n"
  example: []
  syntax:
    content: 'public class NegotiatedContentResult<T> : ObjectResult'
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    content.vb: >-
      Public Class NegotiatedContentResult(Of T)
          Inherits ObjectResult
  inheritance:
  - System.Object
  nameWithType.vb: NegotiatedContentResult(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T)
  name.vb: NegotiatedContentResult(Of T)
- uid: System.Web.Http.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0)
  commentId: M:System.Web.Http.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0)
  id: '#ctor(System.Net.HttpStatusCode,`0)'
  parent: System.Web.Http.NegotiatedContentResult`1
  langs:
  - csharp
  - vb
  name: NegotiatedContentResult(HttpStatusCode, T)
  nameWithType: NegotiatedContentResult<T>.NegotiatedContentResult(HttpStatusCode, T)
  fullName: System.Web.Http.NegotiatedContentResult<T>.NegotiatedContentResult(System.Net.HttpStatusCode, T)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nInitializes a new instance of the <xref href=\"System.Web.Http.NegotiatedContentResult%601\" data-throw-if-not-resolved=\"false\"></xref> class with the values provided.\n"
  example: []
  syntax:
    content: public NegotiatedContentResult(HttpStatusCode statusCode, T content)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The HTTP status code for the response message.
    - id: content
      type: '{T}'
      description: The content value to negotiate and format in the entity body.
    content.vb: Public Sub New(statusCode As HttpStatusCode, content As T)
  overload: System.Web.Http.NegotiatedContentResult`1.#ctor*
  nameWithType.vb: NegotiatedContentResult(Of T).NegotiatedContentResult(HttpStatusCode, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).NegotiatedContentResult(System.Net.HttpStatusCode, T)
- uid: System.Web.Http.NegotiatedContentResult`1.Content
  commentId: P:System.Web.Http.NegotiatedContentResult`1.Content
  id: Content
  parent: System.Web.Http.NegotiatedContentResult`1
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: NegotiatedContentResult<T>.Content
  fullName: System.Web.Http.NegotiatedContentResult<T>.Content
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the content value to negotiate and format in the entity body.\n"
  example: []
  syntax:
    content: public T Content { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Content As T
  overload: System.Web.Http.NegotiatedContentResult`1.Content*
  nameWithType.vb: NegotiatedContentResult(Of T).Content
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).Content
- uid: System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync(ActionContext)
  commentId: M:System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync(ActionContext)
  id: ExecuteResultAsync(ActionContext)
  parent: System.Web.Http.NegotiatedContentResult`1
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: NegotiatedContentResult<T>.ExecuteResultAsync(ActionContext)
  fullName: System.Web.Http.NegotiatedContentResult<T>.ExecuteResultAsync(ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/NegotiatedContentResult.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    parameters:
    - id: context
      type: ActionContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
  overload: System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync*
  nameWithType.vb: NegotiatedContentResult(Of T).ExecuteResultAsync(ActionContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).ExecuteResultAsync(ActionContext)
references:
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Web.Http.NegotiatedContentResult`1
  commentId: T:System.Web.Http.NegotiatedContentResult`1
  isExternal: false
  name: NegotiatedContentResult<T>
  nameWithType: NegotiatedContentResult<T>
  fullName: System.Web.Http.NegotiatedContentResult<T>
  nameWithType.vb: NegotiatedContentResult(Of T)
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T)
  name.vb: NegotiatedContentResult(Of T)
  spec.csharp:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.NegotiatedContentResult`1.#ctor*
  commentId: Overload:System.Web.Http.NegotiatedContentResult`1.#ctor
  isExternal: false
  name: NegotiatedContentResult
  nameWithType: NegotiatedContentResult<T>.NegotiatedContentResult
  fullName: System.Web.Http.NegotiatedContentResult<T>.NegotiatedContentResult
  nameWithType.vb: NegotiatedContentResult(Of T).NegotiatedContentResult
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).NegotiatedContentResult
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Http.NegotiatedContentResult`1.Content*
  commentId: Overload:System.Web.Http.NegotiatedContentResult`1.Content
  isExternal: false
  name: Content
  nameWithType: NegotiatedContentResult<T>.Content
  fullName: System.Web.Http.NegotiatedContentResult<T>.Content
  nameWithType.vb: NegotiatedContentResult(Of T).Content
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).Content
- uid: System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync*
  commentId: Overload:System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync
  isExternal: false
  name: ExecuteResultAsync
  nameWithType: NegotiatedContentResult<T>.ExecuteResultAsync
  fullName: System.Web.Http.NegotiatedContentResult<T>.ExecuteResultAsync
  nameWithType.vb: NegotiatedContentResult(Of T).ExecuteResultAsync
  fullName.vb: System.Web.Http.NegotiatedContentResult(Of T).ExecuteResultAsync
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
