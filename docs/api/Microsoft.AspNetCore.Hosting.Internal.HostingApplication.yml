### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  commentId: T:Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  id: HostingApplication
  parent: Microsoft.AspNetCore.Hosting.Internal
  children:
  - Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor(RequestDelegate,ILogger,DiagnosticSource,IHttpContextFactory)
  - Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext(IFeatureCollection)
  - Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context,System.Exception)
  - Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context)
  langs:
  - csharp
  - vb
  name: HostingApplication
  nameWithType: HostingApplication
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: HostingApplication
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: 'public class HostingApplication : IHttpApplication<HostingApplication.Context>'
    content.vb: >-
      Public Class HostingApplication
          Inherits IHttpApplication(Of HostingApplication.Context)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor(RequestDelegate,ILogger,DiagnosticSource,IHttpContextFactory)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor(RequestDelegate,ILogger,DiagnosticSource,IHttpContextFactory)
  id: '#ctor(RequestDelegate,ILogger,DiagnosticSource,IHttpContextFactory)'
  parent: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  langs:
  - csharp
  - vb
  name: HostingApplication(RequestDelegate, ILogger, DiagnosticSource, IHttpContextFactory)
  nameWithType: HostingApplication.HostingApplication(RequestDelegate, ILogger, DiagnosticSource, IHttpContextFactory)
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.HostingApplication(RequestDelegate, ILogger, DiagnosticSource, IHttpContextFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public HostingApplication(RequestDelegate application, ILogger logger, DiagnosticSource diagnosticSource, IHttpContextFactory httpContextFactory)
    parameters:
    - id: application
      type: RequestDelegate
    - id: logger
      type: ILogger
    - id: diagnosticSource
      type: DiagnosticSource
    - id: httpContextFactory
      type: IHttpContextFactory
    content.vb: Public Sub New(application As RequestDelegate, logger As ILogger, diagnosticSource As DiagnosticSource, httpContextFactory As IHttpContextFactory)
  overload: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext(IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext(IFeatureCollection)
  id: CreateContext(IFeatureCollection)
  parent: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  langs:
  - csharp
  - vb
  name: CreateContext(IFeatureCollection)
  nameWithType: HostingApplication.CreateContext(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext(IFeatureCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateContext
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public HostingApplication.Context CreateContext(IFeatureCollection contextFeatures)
    parameters:
    - id: contextFeatures
      type: IFeatureCollection
    return:
      type: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
    content.vb: Public Function CreateContext(contextFeatures As IFeatureCollection) As HostingApplication.Context
  overload: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context,System.Exception)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context,System.Exception)
  id: DisposeContext(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context,System.Exception)
  parent: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  langs:
  - csharp
  - vb
  name: DisposeContext(HostingApplication.Context, Exception)
  nameWithType: HostingApplication.DisposeContext(HostingApplication.Context, Exception)
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context, System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: DisposeContext
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public void DisposeContext(HostingApplication.Context context, Exception exception)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
    - id: exception
      type: System.Exception
    content.vb: Public Sub DisposeContext(context As HostingApplication.Context, exception As Exception)
  overload: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context)
  id: ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context)
  parent: Microsoft.AspNetCore.Hosting.Internal.HostingApplication
  langs:
  - csharp
  - vb
  name: ProcessRequestAsync(HostingApplication.Context)
  nameWithType: HostingApplication.ProcessRequestAsync(HostingApplication.Context)
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ProcessRequestAsync
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public Task ProcessRequestAsync(HostingApplication.Context context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ProcessRequestAsync(context As HostingApplication.Context) As Task
  overload: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting.Internal
  commentId: N:Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Internal
  nameWithType: Microsoft.AspNetCore.Hosting.Internal
  fullName: Microsoft.AspNetCore.Hosting.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.#ctor
  isExternal: false
  name: HostingApplication
  nameWithType: HostingApplication.HostingApplication
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.HostingApplication
- uid: RequestDelegate
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: RequestDelegate
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: DiagnosticSource
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: DiagnosticSource
- uid: IHttpContextFactory
  commentId: '!:IHttpContextFactory'
  isExternal: true
  name: IHttpContextFactory
  nameWithType: IHttpContextFactory
  fullName: IHttpContextFactory
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext
  isExternal: false
  name: CreateContext
  nameWithType: HostingApplication.CreateContext
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.CreateContext
- uid: IFeatureCollection
  isExternal: true
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: IFeatureCollection
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
  commentId: T:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
  parent: Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: HostingApplication.Context
  nameWithType: HostingApplication.Context
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext
  isExternal: false
  name: DisposeContext
  nameWithType: HostingApplication.DisposeContext
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync*
  commentId: Overload:Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync
  isExternal: false
  name: ProcessRequestAsync
  nameWithType: HostingApplication.ProcessRequestAsync
  fullName: Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
