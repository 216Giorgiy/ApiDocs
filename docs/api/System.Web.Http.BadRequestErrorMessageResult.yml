### YamlMime:ManagedReference
items:
- uid: System.Web.Http.BadRequestErrorMessageResult
  commentId: T:System.Web.Http.BadRequestErrorMessageResult
  id: BadRequestErrorMessageResult
  parent: System.Web.Http
  children:
  - System.Web.Http.BadRequestErrorMessageResult.#ctor(System.String)
  - System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync(ActionContext)
  - System.Web.Http.BadRequestErrorMessageResult.Message
  langs:
  - csharp
  - vb
  name: BadRequestErrorMessageResult
  nameWithType: BadRequestErrorMessageResult
  fullName: System.Web.Http.BadRequestErrorMessageResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequestErrorMessageResult
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nAn action result that returns a <see cref=\"!:StatusCodes.Status400BadRequest\"></see> response and performs\ncontent negotiation on an <xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> with a <xref href=\"System.Web.Http.HttpError.Message\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class BadRequestErrorMessageResult : ObjectResult'
    content.vb: >-
      Public Class BadRequestErrorMessageResult
          Inherits ObjectResult
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Web.Http.BadRequestErrorMessageResult.#ctor(System.String)
  commentId: M:System.Web.Http.BadRequestErrorMessageResult.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Http.BadRequestErrorMessageResult
  langs:
  - csharp
  - vb
  name: BadRequestErrorMessageResult(String)
  nameWithType: BadRequestErrorMessageResult.BadRequestErrorMessageResult(String)
  fullName: System.Web.Http.BadRequestErrorMessageResult.BadRequestErrorMessageResult(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: Initializes a new instance of the <xref href="System.Web.Http.BadRequestErrorMessageResult" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BadRequestErrorMessageResult(string message)
    parameters:
    - id: message
      type: System.String
      description: The user-visible error message.
    content.vb: Public Sub New(message As String)
  overload: System.Web.Http.BadRequestErrorMessageResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Web.Http.BadRequestErrorMessageResult.Message
  commentId: P:System.Web.Http.BadRequestErrorMessageResult.Message
  id: Message
  parent: System.Web.Http.BadRequestErrorMessageResult
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: BadRequestErrorMessageResult.Message
  fullName: System.Web.Http.BadRequestErrorMessageResult.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Message
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the error message.\n"
  example: []
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: System.Web.Http.BadRequestErrorMessageResult.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync(ActionContext)
  commentId: M:System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync(ActionContext)
  id: ExecuteResultAsync(ActionContext)
  parent: System.Web.Http.BadRequestErrorMessageResult
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: BadRequestErrorMessageResult.ExecuteResultAsync(ActionContext)
  fullName: System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync(ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/BadRequestErrorMessageResult.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    parameters:
    - id: context
      type: ActionContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
  overload: System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Web.Http.HttpError
  commentId: T:System.Web.Http.HttpError
  parent: System.Web.Http
  isExternal: false
  name: HttpError
  nameWithType: HttpError
  fullName: System.Web.Http.HttpError
- uid: System.Web.Http.HttpError.Message
  commentId: P:System.Web.Http.HttpError.Message
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Web.Http.BadRequestErrorMessageResult
  commentId: T:System.Web.Http.BadRequestErrorMessageResult
  parent: System.Web.Http
  isExternal: false
  name: BadRequestErrorMessageResult
  nameWithType: BadRequestErrorMessageResult
  fullName: System.Web.Http.BadRequestErrorMessageResult
- uid: System.Web.Http.BadRequestErrorMessageResult.#ctor*
  commentId: Overload:System.Web.Http.BadRequestErrorMessageResult.#ctor
  isExternal: false
  name: BadRequestErrorMessageResult
  nameWithType: BadRequestErrorMessageResult.BadRequestErrorMessageResult
  fullName: System.Web.Http.BadRequestErrorMessageResult.BadRequestErrorMessageResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Http.BadRequestErrorMessageResult.Message*
  commentId: Overload:System.Web.Http.BadRequestErrorMessageResult.Message
  isExternal: false
  name: Message
  nameWithType: BadRequestErrorMessageResult.Message
  fullName: System.Web.Http.BadRequestErrorMessageResult.Message
- uid: System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync*
  commentId: Overload:System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync
  isExternal: false
  name: ExecuteResultAsync
  nameWithType: BadRequestErrorMessageResult.ExecuteResultAsync
  fullName: System.Web.Http.BadRequestErrorMessageResult.ExecuteResultAsync
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
