### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  id: IAuthorizationEvaluator
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  - Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  langs:
  - csharp
  - vb
  name: IAuthorizationEvaluator
  nameWithType: IAuthorizationEvaluator
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: IAuthorizationEvaluator
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nDetermines whether an authorization request was successful or not.\n"
  example: []
  syntax:
    content: public interface IAuthorizationEvaluator
    content.vb: Public Interface IAuthorizationEvaluator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  id: HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  langs:
  - csharp
  - vb
  name: HasFailed(AuthorizationHandlerContext)
  nameWithType: IAuthorizationEvaluator.HasFailed(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: HasFailed
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nReturns true, if authorization has failed.\n"
  example: []
  syntax:
    content: bool HasFailed(AuthorizationHandlerContext context)
    content.vb: Function HasFailed(context As AuthorizationHandlerContext) As Boolean
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The authorization information.
    return:
      type: System.Boolean
      description: True if authorization has failed.
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  id: HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  langs:
  - csharp
  - vb
  name: HasSucceeded(AuthorizationHandlerContext)
  nameWithType: IAuthorizationEvaluator.HasSucceeded(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: HasSucceeded
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationEvaluator.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nReturns true, if authorization has succeeded.\n"
  example: []
  syntax:
    content: bool HasSucceeded(AuthorizationHandlerContext context)
    content.vb: Function HasSucceeded(context As AuthorizationHandlerContext) As Boolean
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The authorization information.
    return:
      type: System.Boolean
      description: True if authorization has succeeded.
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
