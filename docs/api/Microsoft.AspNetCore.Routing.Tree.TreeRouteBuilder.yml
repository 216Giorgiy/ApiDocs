### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  id: TreeRouteBuilder
  parent: Microsoft.AspNetCore.Routing.Tree
  children:
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor(ILoggerFactory,UrlEncoder,ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.AspNetCore.Routing.IInlineConstraintResolver)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build(System.Int32)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.String,System.Int32)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary,System.String,System.Int32)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  langs:
  - csharp
  - vb
  name: TreeRouteBuilder
  nameWithType: TreeRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TreeRouteBuilder
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nBuilder for <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public class TreeRouteBuilder
    content.vb: Public Class TreeRouteBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor(ILoggerFactory,UrlEncoder,ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.AspNetCore.Routing.IInlineConstraintResolver)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor(ILoggerFactory,UrlEncoder,ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.AspNetCore.Routing.IInlineConstraintResolver)
  id: '#ctor(ILoggerFactory,UrlEncoder,ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.AspNetCore.Routing.IInlineConstraintResolver)'
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool<UriBuildingContext>, IInlineConstraintResolver)
  nameWithType: TreeRouteBuilder.TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool<UriBuildingContext>, IInlineConstraintResolver)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool<Microsoft.AspNetCore.Routing.Internal.UriBuildingContext>, Microsoft.AspNetCore.Routing.IInlineConstraintResolver)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TreeRouteBuilder(ILoggerFactory loggerFactory, UrlEncoder urlEncoder, ObjectPool<UriBuildingContext> objectPool, IInlineConstraintResolver constraintResolver)
    parameters:
    - id: loggerFactory
      type: ILoggerFactory
      description: The <see cref="!:ILoggerFactory"></see>.
    - id: urlEncoder
      type: UrlEncoder
      description: The <see cref="!:UrlEncoder"></see>.
    - id: objectPool
      type: ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}
      description: The <see cref="!:ObjectPool&lt;UrlBuildingContext>"></see>.
    - id: constraintResolver
      type: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
      description: The <xref href="Microsoft.AspNetCore.Routing.IInlineConstraintResolver" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(loggerFactory As ILoggerFactory, urlEncoder As UrlEncoder, objectPool As ObjectPool(Of UriBuildingContext), constraintResolver As IInlineConstraintResolver)
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor*
  nameWithType.vb: TreeRouteBuilder.TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool(Of UriBuildingContext), IInlineConstraintResolver)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool(Of Microsoft.AspNetCore.Routing.Internal.UriBuildingContext), Microsoft.AspNetCore.Routing.IInlineConstraintResolver)
  name.vb: TreeRouteBuilder(ILoggerFactory, UrlEncoder, ObjectPool(Of UriBuildingContext), IInlineConstraintResolver)
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.String,System.Int32)
  id: MapInbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.String,System.Int32)
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: MapInbound(IRouter, RouteTemplate, String, Int32)
  nameWithType: TreeRouteBuilder.MapInbound(IRouter, RouteTemplate, String, Int32)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound(IRouter, Microsoft.AspNetCore.Routing.Template.RouteTemplate, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapInbound
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nAdds a new inbound route to the <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public InboundRouteEntry MapInbound(IRouter handler, RouteTemplate routeTemplate, string routeName, int order)
    parameters:
    - id: handler
      type: IRouter
      description: The <see cref="!:IRouter"></see> for handling the route.
    - id: routeTemplate
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
      description: The <xref href="Microsoft.AspNetCore.Routing.Template.RouteTemplate" data-throw-if-not-resolved="false"></xref> of the route.
    - id: routeName
      type: System.String
      description: The route name.
    - id: order
      type: System.Int32
      description: The route order.
    return:
      type: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
      description: The <xref href="Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function MapInbound(handler As IRouter, routeTemplate As RouteTemplate, routeName As String, order As Integer) As InboundRouteEntry
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary,System.String,System.Int32)
  id: MapOutbound(IRouter,Microsoft.AspNetCore.Routing.Template.RouteTemplate,RouteValueDictionary,System.String,System.Int32)
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: MapOutbound(IRouter, RouteTemplate, RouteValueDictionary, String, Int32)
  nameWithType: TreeRouteBuilder.MapOutbound(IRouter, RouteTemplate, RouteValueDictionary, String, Int32)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound(IRouter, Microsoft.AspNetCore.Routing.Template.RouteTemplate, RouteValueDictionary, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapOutbound
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nAdds a new outbound route to the <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public OutboundRouteEntry MapOutbound(IRouter handler, RouteTemplate routeTemplate, RouteValueDictionary requiredLinkValues, string routeName, int order)
    parameters:
    - id: handler
      type: IRouter
      description: The <see cref="!:IRouter"></see> for handling the link generation.
    - id: routeTemplate
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
      description: The <xref href="Microsoft.AspNetCore.Routing.Template.RouteTemplate" data-throw-if-not-resolved="false"></xref> of the route.
    - id: requiredLinkValues
      type: RouteValueDictionary
      description: The <see cref="!:RouteValueDictionary"></see> containing the route values.
    - id: routeName
      type: System.String
      description: The route name.
    - id: order
      type: System.Int32
      description: The route order.
    return:
      type: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
      description: The <xref href="Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function MapOutbound(handler As IRouter, routeTemplate As RouteTemplate, requiredLinkValues As RouteValueDictionary, routeName As String, order As Integer) As OutboundRouteEntry
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  commentId: P:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  id: InboundEntries
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: InboundEntries
  nameWithType: TreeRouteBuilder.InboundEntries
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: InboundEntries
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 208
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<InboundRouteEntry> InboundEntries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry}
    content.vb: Public ReadOnly Property InboundEntries As IList(Of InboundRouteEntry)
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  commentId: P:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  id: OutboundEntries
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: OutboundEntries
  nameWithType: TreeRouteBuilder.OutboundEntries
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: OutboundEntries
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<OutboundRouteEntry> OutboundEntries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
    content.vb: Public ReadOnly Property OutboundEntries As IList(Of OutboundRouteEntry)
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: TreeRouteBuilder.Build()
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Build
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 220
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nBuilds a <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries\" data-throw-if-not-resolved=\"false\"></xref> defined in this <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TreeRouter Build()
    return:
      type: Microsoft.AspNetCore.Routing.Tree.TreeRouter
      description: The <xref href="Microsoft.AspNetCore.Routing.Tree.TreeRouter" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Build As TreeRouter
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build(System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build(System.Int32)
  id: Build(System.Int32)
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: Build(Int32)
  nameWithType: TreeRouteBuilder.Build(Int32)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Build
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 231
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nBuilds a <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries\" data-throw-if-not-resolved=\"false\"></xref> defined in this <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TreeRouter Build(int version)
    parameters:
    - id: version
      type: System.Int32
      description: The version of the <xref href="Microsoft.AspNetCore.Routing.Tree.TreeRouter" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Routing.Tree.TreeRouter
      description: The <xref href="Microsoft.AspNetCore.Routing.Tree.TreeRouter" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Build(version As Integer) As TreeRouter
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TreeRouteBuilder.Clear()
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Clear
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/Tree/TreeRouteBuilder.cs
    startLine: 264
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nRemoves all <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries\" data-throw-if-not-resolved=\"false\"></xref> from this\n<xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouter
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: TreeRouter
  nameWithType: TreeRouter
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter
- uid: Microsoft.AspNetCore.Routing.Tree
  commentId: N:Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Tree
  nameWithType: Microsoft.AspNetCore.Routing.Tree
  fullName: Microsoft.AspNetCore.Routing.Tree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
  isExternal: false
  name: TreeRouteBuilder
  nameWithType: TreeRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder
- uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IInlineConstraintResolver
  nameWithType: IInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.#ctor
  isExternal: false
  name: TreeRouteBuilder
  nameWithType: TreeRouteBuilder.TreeRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.TreeRouteBuilder
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: UrlEncoder
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: UrlEncoder
- uid: ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}
  commentId: '!:ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}'
  definition: ObjectPool`1
  name: ObjectPool<UriBuildingContext>
  nameWithType: ObjectPool<UriBuildingContext>
  fullName: ObjectPool<Microsoft.AspNetCore.Routing.Internal.UriBuildingContext>
  nameWithType.vb: ObjectPool(Of UriBuildingContext)
  fullName.vb: ObjectPool(Of Microsoft.AspNetCore.Routing.Internal.UriBuildingContext)
  name.vb: ObjectPool(Of UriBuildingContext)
  spec.csharp:
  - uid: ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: ObjectPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
    name: UriBuildingContext
    nameWithType: UriBuildingContext
    fullName: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: ObjectPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
    name: UriBuildingContext
    nameWithType: UriBuildingContext
    fullName: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: ObjectPool`1
  isExternal: true
  name: ObjectPool<>
  nameWithType: ObjectPool<>
  fullName: ObjectPool<>
  nameWithType.vb: ObjectPool(Of )
  fullName.vb: ObjectPool(Of )
  name.vb: ObjectPool(Of )
  spec.csharp:
  - uid: ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: ObjectPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: ObjectPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  commentId: T:Microsoft.AspNetCore.Routing.Template.RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: RouteTemplate
  nameWithType: RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  commentId: T:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: InboundRouteEntry
  nameWithType: InboundRouteEntry
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound
  isExternal: false
  name: MapInbound
  nameWithType: TreeRouteBuilder.MapInbound
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapInbound
- uid: IRouter
  isExternal: true
  name: IRouter
  nameWithType: IRouter
  fullName: IRouter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  commentId: T:Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: OutboundRouteEntry
  nameWithType: OutboundRouteEntry
  fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound
  isExternal: false
  name: MapOutbound
  nameWithType: TreeRouteBuilder.MapOutbound
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.MapOutbound
- uid: RouteValueDictionary
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  isExternal: false
  name: InboundEntries
  nameWithType: TreeRouteBuilder.InboundEntries
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InboundRouteEntry>
  nameWithType: IList<InboundRouteEntry>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry>
  nameWithType.vb: IList(Of InboundRouteEntry)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry)
  name.vb: IList(Of InboundRouteEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
    name: InboundRouteEntry
    nameWithType: InboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
    name: InboundRouteEntry
    nameWithType: InboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  isExternal: false
  name: OutboundEntries
  nameWithType: TreeRouteBuilder.OutboundEntries
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OutboundRouteEntry>
  nameWithType: IList<OutboundRouteEntry>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry>
  nameWithType.vb: IList(Of OutboundRouteEntry)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry)
  name.vb: IList(Of OutboundRouteEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
    name: OutboundRouteEntry
    nameWithType: OutboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
    name: OutboundRouteEntry
    nameWithType: OutboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
  commentId: P:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.InboundEntries
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
  commentId: P:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.OutboundEntries
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build
  isExternal: false
  name: Build
  nameWithType: TreeRouteBuilder.Build
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Build
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear*
  commentId: Overload:Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear
  isExternal: false
  name: Clear
  nameWithType: TreeRouteBuilder.Clear
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.Clear
shouldSkipMarkup: true
