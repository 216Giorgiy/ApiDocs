### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole
  commentId: T:Microsoft.Extensions.Cli.Utils.AnsiConsole
  id: AnsiConsole
  parent: Microsoft.Extensions.Cli.Utils
  children:
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.Write(System.String)
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine(System.String)
  - Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
  langs:
  - csharp
  - vb
  name: AnsiConsole
  nameWithType: AnsiConsole
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: AnsiConsole
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: 'public class AnsiConsole : object'
    content.vb: >-
      Public Class AnsiConsole
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput
  commentId: M:Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput
  id: GetOutput
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: GetOutput()
  nameWithType: AnsiConsole.GetOutput()
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: GetOutput
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public static AnsiConsole GetOutput()
    return:
      type: Microsoft.Extensions.Cli.Utils.AnsiConsole
    content.vb: Public Shared Function GetOutput As AnsiConsole
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError
  commentId: M:Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError
  id: GetError
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: GetError()
  nameWithType: AnsiConsole.GetError()
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: GetError
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public static AnsiConsole GetError()
    return:
      type: Microsoft.Extensions.Cli.Utils.AnsiConsole
    content.vb: Public Shared Function GetError As AnsiConsole
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
  commentId: P:Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
  id: Writer
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: AnsiConsole.Writer
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: Writer
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public TextWriter Writer { get; }
    parameters: []
    return:
      type: TextWriter
    content.vb: Public ReadOnly Property Writer As TextWriter
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
  commentId: P:Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
  id: OriginalForegroundColor
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: OriginalForegroundColor
  nameWithType: AnsiConsole.OriginalForegroundColor
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: OriginalForegroundColor
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public ConsoleColor OriginalForegroundColor { get; }
    parameters: []
    return:
      type: ConsoleColor
    content.vb: Public ReadOnly Property OriginalForegroundColor As ConsoleColor
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine(System.String)
  commentId: M:Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: AnsiConsole.WriteLine(String)
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: WriteLine
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public void WriteLine(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub WriteLine(message As String)
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.Write(System.String)
  commentId: M:Microsoft.Extensions.Cli.Utils.AnsiConsole.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.Extensions.Cli.Utils.AnsiConsole
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: AnsiConsole.Write(String)
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.Write(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: Write
    path: ../aspnet/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.Tools/Internal/AnsiConsole.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.Tools
  namespace: Microsoft.Extensions.Cli.Utils
  syntax:
    content: public void Write(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Write(message As String)
  overload: Microsoft.Extensions.Cli.Utils.AnsiConsole.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Cli.Utils
  commentId: N:Microsoft.Extensions.Cli.Utils
  isExternal: false
  name: Microsoft.Extensions.Cli.Utils
  nameWithType: Microsoft.Extensions.Cli.Utils
  fullName: Microsoft.Extensions.Cli.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput
  isExternal: false
  name: GetOutput
  nameWithType: AnsiConsole.GetOutput
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetOutput
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole
  commentId: T:Microsoft.Extensions.Cli.Utils.AnsiConsole
  parent: Microsoft.Extensions.Cli.Utils
  isExternal: false
  name: AnsiConsole
  nameWithType: AnsiConsole
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError
  isExternal: false
  name: GetError
  nameWithType: AnsiConsole.GetError
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.GetError
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
  isExternal: false
  name: Writer
  nameWithType: AnsiConsole.Writer
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.Writer
- uid: TextWriter
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: TextWriter
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
  isExternal: false
  name: OriginalForegroundColor
  nameWithType: AnsiConsole.OriginalForegroundColor
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.OriginalForegroundColor
- uid: ConsoleColor
  commentId: '!:ConsoleColor'
  isExternal: true
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: ConsoleColor
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine
  isExternal: false
  name: WriteLine
  nameWithType: AnsiConsole.WriteLine
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.WriteLine
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Cli.Utils.AnsiConsole.Write*
  commentId: Overload:Microsoft.Extensions.Cli.Utils.AnsiConsole.Write
  isExternal: false
  name: Write
  nameWithType: AnsiConsole.Write
  fullName: Microsoft.Extensions.Cli.Utils.AnsiConsole.Write
shouldSkipMarkup: true
