### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  commentId: T:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  id: SpanEditHandler
  parent: Microsoft.AspNetCore.Razor.Editor
  children:
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}},Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange,System.Boolean)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString
  - Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  langs:
  - csharp
  - vb
  name: SpanEditHandler
  nameWithType: SpanEditHandler
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SpanEditHandler
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public class SpanEditHandler
    content.vb: Public Class SpanEditHandler
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNetCore.Razor.Editor.AutoCompleteEditHandler
  - Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler
  - Microsoft.AspNetCore.Razor.Editor.SingleLineMarkupEditHandler
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  id: '#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})'
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: SpanEditHandler(Func<String, IEnumerable<ISymbol>>)
  nameWithType: SpanEditHandler.SpanEditHandler(Func<String, IEnumerable<ISymbol>>)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.SpanEditHandler(System.Func<System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public SpanEditHandler(Func<string, IEnumerable<ISymbol>> tokenizer)
    parameters:
    - id: tokenizer
      type: System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
    content.vb: Public Sub New(tokenizer As Func(Of String, IEnumerable(Of ISymbol)))
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor*
  nameWithType.vb: SpanEditHandler.SpanEditHandler(Func(Of String, IEnumerable(Of ISymbol)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.SpanEditHandler(System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)))
  name.vb: SpanEditHandler(Func(Of String, IEnumerable(Of ISymbol)))
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}},Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}},Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  id: '#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}},Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)'
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: SpanEditHandler(Func<String, IEnumerable<ISymbol>>, AcceptedCharacters)
  nameWithType: SpanEditHandler.SpanEditHandler(Func<String, IEnumerable<ISymbol>>, AcceptedCharacters)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.SpanEditHandler(System.Func<System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public SpanEditHandler(Func<string, IEnumerable<ISymbol>> tokenizer, AcceptedCharacters accepted)
    parameters:
    - id: tokenizer
      type: System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
    - id: accepted
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    content.vb: Public Sub New(tokenizer As Func(Of String, IEnumerable(Of ISymbol)), accepted As AcceptedCharacters)
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor*
  nameWithType.vb: SpanEditHandler.SpanEditHandler(Func(Of String, IEnumerable(Of ISymbol)), AcceptedCharacters)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.SpanEditHandler(System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)), Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  name.vb: SpanEditHandler(Func(Of String, IEnumerable(Of ISymbol)), AcceptedCharacters)
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
  commentId: P:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
  id: AcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: AcceptedCharacters
  nameWithType: SpanEditHandler.AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AcceptedCharacters
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public AcceptedCharacters AcceptedCharacters { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    content.vb: Public Property AcceptedCharacters As AcceptedCharacters
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
  commentId: P:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
  id: EditorHints
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: EditorHints
  nameWithType: SpanEditHandler.EditorHints
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EditorHints
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  summary: "\nProvides a set of hints to editors which may be manipulating the document in which this span is located.\n"
  example: []
  syntax:
    content: public EditorHints EditorHints { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Editor.EditorHints
    content.vb: Public Property EditorHints As EditorHints
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
  commentId: P:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
  id: Tokenizer
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: Tokenizer
  nameWithType: SpanEditHandler.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Tokenizer
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public Func<string, IEnumerable<ISymbol>> Tokenizer { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
    content.vb: Public Property Tokenizer As Func(Of String, IEnumerable(Of ISymbol))
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault
  id: CreateDefault
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: CreateDefault()
  nameWithType: SpanEditHandler.CreateDefault()
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateDefault
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public static SpanEditHandler CreateDefault()
    return:
      type: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
    content.vb: Public Shared Function CreateDefault As SpanEditHandler
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  id: CreateDefault(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: CreateDefault(Func<String, IEnumerable<ISymbol>>)
  nameWithType: SpanEditHandler.CreateDefault(Func<String, IEnumerable<ISymbol>>)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault(System.Func<System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateDefault
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public static SpanEditHandler CreateDefault(Func<string, IEnumerable<ISymbol>> tokenizer)
    parameters:
    - id: tokenizer
      type: System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
    return:
      type: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
    content.vb: Public Shared Function CreateDefault(tokenizer As Func(Of String, IEnumerable(Of ISymbol))) As SpanEditHandler
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault*
  nameWithType.vb: SpanEditHandler.CreateDefault(Func(Of String, IEnumerable(Of ISymbol)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault(System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)))
  name.vb: CreateDefault(Func(Of String, IEnumerable(Of ISymbol)))
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: ApplyChange(Span, TextChange)
  nameWithType: SpanEditHandler.ApplyChange(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ApplyChange
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public virtual EditResult ApplyChange(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: Microsoft.AspNetCore.Razor.Editor.EditResult
    content.vb: Public Overridable Function ApplyChange(target As Span, change As TextChange) As EditResult
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange,System.Boolean)
  id: ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: ApplyChange(Span, TextChange, Boolean)
  nameWithType: SpanEditHandler.ApplyChange(Span, TextChange, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ApplyChange
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public virtual EditResult ApplyChange(Span target, TextChange change, bool force)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    - id: force
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.Editor.EditResult
    content.vb: Public Overridable Function ApplyChange(target As Span, change As TextChange, force As Boolean) As EditResult
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: OwnsChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: OwnsChange(Span, TextChange)
  nameWithType: SpanEditHandler.OwnsChange(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OwnsChange
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public virtual bool OwnsChange(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Public Overridable Function OwnsChange(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: CanAcceptChange(Span, TextChange)
  nameWithType: SpanEditHandler.CanAcceptChange(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CanAcceptChange
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: protected virtual PartialParseResult CanAcceptChange(Span target, TextChange normalizedChange)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: normalizedChange
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: Microsoft.AspNetCore.Razor.PartialParseResult
    content.vb: Protected Overridable Function CanAcceptChange(target As Span, normalizedChange As TextChange) As PartialParseResult
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: UpdateSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: UpdateSpan(Span, TextChange)
  nameWithType: SpanEditHandler.UpdateSpan(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: UpdateSpan
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: protected virtual SpanBuilder UpdateSpan(Span target, TextChange normalizedChange)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: normalizedChange
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    content.vb: Protected Overridable Function UpdateSpan(target As Span, normalizedChange As TextChange) As SpanBuilder
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: IsAtEndOfFirstLine(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: IsAtEndOfFirstLine(Span, TextChange)
  nameWithType: SpanEditHandler.IsAtEndOfFirstLine(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsAtEndOfFirstLine
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: protected static bool IsAtEndOfFirstLine(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsAtEndOfFirstLine(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: IsEndInsertion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: IsEndInsertion(Span, TextChange)
  nameWithType: SpanEditHandler.IsEndInsertion(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEndInsertion
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 109
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  summary: "\nReturns true if the specified change is an insertion of text at the end of this span.\n"
  example: []
  syntax:
    content: protected static bool IsEndInsertion(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsEndInsertion(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: IsEndDeletion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: IsEndDeletion(Span, TextChange)
  nameWithType: SpanEditHandler.IsEndDeletion(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEndDeletion
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  summary: "\nReturns true if the specified change is an insertion of text at the end of this span.\n"
  example: []
  syntax:
    content: protected static bool IsEndDeletion(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsEndDeletion(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: IsEndReplace(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: IsEndReplace(Span, TextChange)
  nameWithType: SpanEditHandler.IsEndReplace(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEndReplace
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  summary: "\nReturns true if the specified change is a replacement of text at the end of this span.\n"
  example: []
  syntax:
    content: protected static bool IsEndReplace(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsEndReplace(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: IsAtEndOfSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: IsAtEndOfSpan(Span, TextChange)
  nameWithType: SpanEditHandler.IsAtEndOfSpan(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsAtEndOfSpan
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: protected static bool IsAtEndOfSpan(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsAtEndOfSpan(target As Span, change As TextChange) As Boolean
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: GetOldText(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: GetOldText(Span, TextChange)
  nameWithType: SpanEditHandler.GetOldText(Span, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetOldText
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  summary: "\nReturns the old text referenced by the change.\n"
  remarks: "\nIf the content has already been updated by applying the change, this data will be _invalid_\n"
  example: []
  syntax:
    content: protected static string GetOldText(Span target, TextChange change)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: change
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.String
    content.vb: Protected Shared Function GetOldText(target As Span, change As TextChange) As String
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SpanEditHandler.ToString()
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 158
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SpanEditHandler.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 163
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SpanEditHandler.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/Editor/SpanEditHandler.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Editor
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Razor.Editor
  commentId: N:Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Editor
  nameWithType: Microsoft.AspNetCore.Razor.Editor
  fullName: Microsoft.AspNetCore.Razor.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.#ctor
  isExternal: false
  name: SpanEditHandler
  nameWithType: SpanEditHandler.SpanEditHandler
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.SpanEditHandler
- uid: System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
  commentId: T:System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}}
  parent: System
  definition: System.Func`2
  name: Func<String, IEnumerable<ISymbol>>
  nameWithType: Func<String, IEnumerable<ISymbol>>
  fullName: System.Func<System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>
  nameWithType.vb: Func(Of String, IEnumerable(Of ISymbol))
  fullName.vb: System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol))
  name.vb: Func(Of String, IEnumerable(Of ISymbol))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: AcceptedCharacters
  nameWithType: AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
  isExternal: false
  name: AcceptedCharacters
  nameWithType: SpanEditHandler.AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.AcceptedCharacters
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
  isExternal: false
  name: EditorHints
  nameWithType: SpanEditHandler.EditorHints
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.EditorHints
- uid: Microsoft.AspNetCore.Razor.Editor.EditorHints
  commentId: T:Microsoft.AspNetCore.Razor.Editor.EditorHints
  parent: Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: EditorHints
  nameWithType: EditorHints
  fullName: Microsoft.AspNetCore.Razor.Editor.EditorHints
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
  isExternal: false
  name: Tokenizer
  nameWithType: SpanEditHandler.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Tokenizer
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault
  isExternal: false
  name: CreateDefault
  nameWithType: SpanEditHandler.CreateDefault
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CreateDefault
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  commentId: T:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  parent: Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: SpanEditHandler
  nameWithType: SpanEditHandler
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange
  isExternal: false
  name: ApplyChange
  nameWithType: SpanEditHandler.ApplyChange
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ApplyChange
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Text.TextChange
  commentId: T:Microsoft.AspNetCore.Razor.Text.TextChange
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: TextChange
  nameWithType: TextChange
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange
- uid: Microsoft.AspNetCore.Razor.Editor.EditResult
  commentId: T:Microsoft.AspNetCore.Razor.Editor.EditResult
  parent: Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: EditResult
  nameWithType: EditResult
  fullName: Microsoft.AspNetCore.Razor.Editor.EditResult
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange
  isExternal: false
  name: OwnsChange
  nameWithType: SpanEditHandler.OwnsChange
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.OwnsChange
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange
  isExternal: false
  name: CanAcceptChange
  nameWithType: SpanEditHandler.CanAcceptChange
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.CanAcceptChange
- uid: Microsoft.AspNetCore.Razor.PartialParseResult
  commentId: T:Microsoft.AspNetCore.Razor.PartialParseResult
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: PartialParseResult
  nameWithType: PartialParseResult
  fullName: Microsoft.AspNetCore.Razor.PartialParseResult
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan
  isExternal: false
  name: UpdateSpan
  nameWithType: SpanEditHandler.UpdateSpan
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.UpdateSpan
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: SpanBuilder
  nameWithType: SpanBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine
  isExternal: false
  name: IsAtEndOfFirstLine
  nameWithType: SpanEditHandler.IsAtEndOfFirstLine
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfFirstLine
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion
  isExternal: false
  name: IsEndInsertion
  nameWithType: SpanEditHandler.IsEndInsertion
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndInsertion
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion
  isExternal: false
  name: IsEndDeletion
  nameWithType: SpanEditHandler.IsEndDeletion
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndDeletion
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace
  isExternal: false
  name: IsEndReplace
  nameWithType: SpanEditHandler.IsEndReplace
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsEndReplace
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan
  isExternal: false
  name: IsAtEndOfSpan
  nameWithType: SpanEditHandler.IsAtEndOfSpan
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.IsAtEndOfSpan
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText
  isExternal: false
  name: GetOldText
  nameWithType: SpanEditHandler.GetOldText
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetOldText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString
  isExternal: false
  name: ToString
  nameWithType: SpanEditHandler.ToString
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.ToString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals
  isExternal: false
  name: Equals
  nameWithType: SpanEditHandler.Equals
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode*
  commentId: Overload:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: SpanEditHandler.GetHashCode
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
shouldSkipMarkup: true
