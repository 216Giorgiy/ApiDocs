### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  id: IdentityDbContext`8
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor(DbContextOptions)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating(ModelBuilder)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens
  langs:
  - csharp
  - vb
  name: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityDbContext
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nBase class for the Entity Framework database context used for identity.\n"
  example: []
  syntax:
    content: 'public abstract class IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> : DbContext where TUser : IdentityUser<TKey, TUserClaim, TUserRole, TUserLogin> where TRole : IdentityRole<TKey, TUserRole, TRoleClaim> where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey> where TUserRole : IdentityUserRole<TKey> where TUserLogin : IdentityUserLogin<TKey> where TRoleClaim : IdentityRoleClaim<TKey> where TUserToken : IdentityUserToken<TKey>'
    typeParameters:
    - id: TUser
      description: The type of user objects.
    - id: TRole
      description: The type of role objects.
    - id: TKey
      description: The type of the primary key for users and roles.
    - id: TUserClaim
      description: The type of the user claim object.
    - id: TUserRole
      description: The type of the user role object.
    - id: TUserLogin
      description: The type of the user login object.
    - id: TRoleClaim
      description: The type of the role claim object.
    - id: TUserToken
      description: The type of the user token object.
    content.vb: >-
      Public MustInherit Class IdentityDbContext(Of TUser As IdentityUser(Of TKey, TUserClaim, TUserRole, TUserLogin), TRole As IdentityRole(Of TKey, TUserRole, TRoleClaim), TKey As IEquatable(Of TKey), TUserClaim As IdentityUserClaim(Of TKey), TUserRole As IdentityUserRole(Of TKey), TUserLogin As IdentityUserLogin(Of TKey), TRoleClaim As IdentityRoleClaim(Of TKey), TUserToken As IdentityUserToken(Of TKey))
          Inherits DbContext
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`3
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken)
  name.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor(DbContextOptions)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor(DbContextOptions)
  id: '#ctor(DbContextOptions)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbContextOptions)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext(DbContextOptions)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext(DbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IdentityDbContext(DbContextOptions options)
    parameters:
    - id: options
      type: DbContextOptions
      description: The options to be used by a <see cref="!:DbContext"></see>.
    content.vb: Public Sub New(options As DbContextOptions)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext(DbContextOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext(DbContextOptions)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: IdentityDbContext()
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected IdentityDbContext()
    content.vb: Protected Sub New
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext()
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users
  id: Users
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Users
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Users
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 109
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of Users.\n"
  example: []
  syntax:
    content: public DbSet<TUser> Users { get; set; }
    parameters: []
    return:
      type: DbSet{{TUser}}
    content.vb: Public Property Users As DbSet(Of TUser)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Users
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Users
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims
  id: UserClaims
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: UserClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserClaims
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserClaims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserClaims
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of User claims.\n"
  example: []
  syntax:
    content: public DbSet<TUserClaim> UserClaims { get; set; }
    parameters: []
    return:
      type: DbSet{{TUserClaim}}
    content.vb: Public Property UserClaims As DbSet(Of TUserClaim)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserClaims
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserClaims
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins
  id: UserLogins
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: UserLogins
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserLogins
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserLogins
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserLogins
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of User logins.\n"
  example: []
  syntax:
    content: public DbSet<TUserLogin> UserLogins { get; set; }
    parameters: []
    return:
      type: DbSet{{TUserLogin}}
    content.vb: Public Property UserLogins As DbSet(Of TUserLogin)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserLogins
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserLogins
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles
  id: UserRoles
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: UserRoles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserRoles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserRoles
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserRoles
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of User roles.\n"
  example: []
  syntax:
    content: public DbSet<TUserRole> UserRoles { get; set; }
    parameters: []
    return:
      type: DbSet{{TUserRole}}
    content.vb: Public Property UserRoles As DbSet(Of TUserRole)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserRoles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserRoles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens
  id: UserTokens
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: UserTokens
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserTokens
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserTokens
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 129
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of User tokens.\n"
  example: []
  syntax:
    content: public DbSet<TUserToken> UserTokens { get; set; }
    parameters: []
    return:
      type: DbSet{{TUserToken}}
    content.vb: Public Property UserTokens As DbSet(Of TUserToken)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserTokens
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserTokens
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles
  id: Roles
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Roles
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Roles
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of roles.\n"
  example: []
  syntax:
    content: public DbSet<TRole> Roles { get; set; }
    parameters: []
    return:
      type: DbSet{{TRole}}
    content.vb: Public Property Roles As DbSet(Of TRole)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Roles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Roles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims
  id: RoleClaims
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: RoleClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.RoleClaims
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.RoleClaims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleClaims
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the <see cref=\"!:DbSet&lt;TEntity&gt;\"></see> of role claims.\n"
  example: []
  syntax:
    content: public DbSet<TRoleClaim> RoleClaims { get; set; }
    parameters: []
    return:
      type: DbSet{{TRoleClaim}}
    content.vb: Public Property RoleClaims As DbSet(Of TRoleClaim)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).RoleClaims
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).RoleClaims
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating(ModelBuilder)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating(ModelBuilder)
  id: OnModelCreating(ModelBuilder)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.OnModelCreating(ModelBuilder)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.OnModelCreating(ModelBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: OnModelCreating
    path: ../aspnet/Identity/src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityDbContext.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nConfigures the schema needed for the identity framework.\n"
  example: []
  syntax:
    content: protected override void OnModelCreating(ModelBuilder builder)
    parameters:
    - id: builder
      type: ModelBuilder
      description: "\nThe builder being used to construct the model for this context.\n"
    content.vb: Protected Overrides Sub OnModelCreating(builder As ModelBuilder)
  overload: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating*
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).OnModelCreating(ModelBuilder)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).OnModelCreating(ModelBuilder)
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext
  isExternal: false
  name: IdentityDbContext
  nameWithType: IdentityDbContext
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.#ctor
  isExternal: false
  name: IdentityDbContext
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.IdentityDbContext
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).IdentityDbContext
- uid: DbContextOptions
  isExternal: true
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: DbContextOptions
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Users
  isExternal: false
  name: Users
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Users
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Users
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Users
- uid: DbSet{{TUser}}
  commentId: '!:DbSet{`0}'
  definition: DbSet`1
  name: DbSet<TUser>
  nameWithType: DbSet<TUser>
  fullName: DbSet<TUser>
  nameWithType.vb: DbSet(Of TUser)
  fullName.vb: DbSet(Of TUser)
  name.vb: DbSet(Of TUser)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserClaims
  isExternal: false
  name: UserClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserClaims
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserClaims
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserClaims
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserClaims
- uid: DbSet{{TUserClaim}}
  commentId: '!:DbSet{`3}'
  definition: DbSet`1
  name: DbSet<TUserClaim>
  nameWithType: DbSet<TUserClaim>
  fullName: DbSet<TUserClaim>
  nameWithType.vb: DbSet(Of TUserClaim)
  fullName.vb: DbSet(Of TUserClaim)
  name.vb: DbSet(Of TUserClaim)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserLogins
  isExternal: false
  name: UserLogins
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserLogins
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserLogins
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserLogins
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserLogins
- uid: DbSet{{TUserLogin}}
  commentId: '!:DbSet{`5}'
  definition: DbSet`1
  name: DbSet<TUserLogin>
  nameWithType: DbSet<TUserLogin>
  fullName: DbSet<TUserLogin>
  nameWithType.vb: DbSet(Of TUserLogin)
  fullName.vb: DbSet(Of TUserLogin)
  name.vb: DbSet(Of TUserLogin)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserRoles
  isExternal: false
  name: UserRoles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserRoles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserRoles
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserRoles
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserRoles
- uid: DbSet{{TUserRole}}
  commentId: '!:DbSet{`4}'
  definition: DbSet`1
  name: DbSet<TUserRole>
  nameWithType: DbSet<TUserRole>
  fullName: DbSet<TUserRole>
  nameWithType.vb: DbSet(Of TUserRole)
  fullName.vb: DbSet(Of TUserRole)
  name.vb: DbSet(Of TUserRole)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.UserTokens
  isExternal: false
  name: UserTokens
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserTokens
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.UserTokens
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserTokens
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).UserTokens
- uid: DbSet{{TUserToken}}
  commentId: '!:DbSet{`7}'
  definition: DbSet`1
  name: DbSet<TUserToken>
  nameWithType: DbSet<TUserToken>
  fullName: DbSet<TUserToken>
  nameWithType.vb: DbSet(Of TUserToken)
  fullName.vb: DbSet(Of TUserToken)
  name.vb: DbSet(Of TUserToken)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.Roles
  isExternal: false
  name: Roles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.Roles
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Roles
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).Roles
- uid: DbSet{{TRole}}
  commentId: '!:DbSet{`1}'
  definition: DbSet`1
  name: DbSet<TRole>
  nameWithType: DbSet<TRole>
  fullName: DbSet<TRole>
  nameWithType.vb: DbSet(Of TRole)
  fullName.vb: DbSet(Of TRole)
  name.vb: DbSet(Of TRole)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.RoleClaims
  isExternal: false
  name: RoleClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.RoleClaims
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.RoleClaims
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).RoleClaims
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).RoleClaims
- uid: DbSet{{TRoleClaim}}
  commentId: '!:DbSet{`6}'
  definition: DbSet`1
  name: DbSet<TRoleClaim>
  nameWithType: DbSet<TRoleClaim>
  fullName: DbSet<TRoleClaim>
  nameWithType.vb: DbSet(Of TRoleClaim)
  fullName.vb: DbSet(Of TRoleClaim)
  name.vb: DbSet(Of TRoleClaim)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating*
  commentId: Overload:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`8.OnModelCreating
  isExternal: false
  name: OnModelCreating
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.OnModelCreating
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>.OnModelCreating
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).OnModelCreating
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken).OnModelCreating
- uid: ModelBuilder
  commentId: '!:ModelBuilder'
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: ModelBuilder
shouldSkipMarkup: true
