### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider
  id: SerializableErrorWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap(System.Object)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
  langs:
  - csharp
  - vb
  name: SerializableErrorWrapperProvider
  nameWithType: SerializableErrorWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializableErrorWrapperProvider
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nWraps the object of type <see cref=\"!:Microsoft.AspNetCore.Mvc.SerializableError\"></see>.\n"
  example: []
  syntax:
    content: 'public class SerializableErrorWrapperProvider : IWrapperProvider'
    content.vb: >-
      Public Class SerializableErrorWrapperProvider
          Implements IWrapperProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
  id: WrappingType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider
  langs:
  - csharp
  - vb
  name: WrappingType
  nameWithType: SerializableErrorWrapperProvider.WrappingType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WrappingType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nGets the wrapping type.\n"
  example: []
  syntax:
    content: public Type WrappingType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property WrappingType As Type
  overload: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType*
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap(System.Object)
  id: Wrap(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider
  langs:
  - csharp
  - vb
  name: Wrap(Object)
  nameWithType: SerializableErrorWrapperProvider.Wrap(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Wrap
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapperProvider.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nWraps the given object to the wrapping type provided by <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public object Wrap(object original)
    parameters:
    - id: original
      type: System.Object
      description: The original non-wrapped object.
    return:
      type: System.Object
      description: Returns a wrapped object.
    content.vb: Public Function Wrap(original As Object) As Object
  overload: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap*
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Xml
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Xml
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IWrapperProvider
  nameWithType: IWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
  isExternal: false
  name: WrappingType
  nameWithType: SerializableErrorWrapperProvider.WrappingType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.WrappingType
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  isExternal: false
  name: WrappingType
  nameWithType: IWrapperProvider.WrappingType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap
  isExternal: false
  name: Wrap
  nameWithType: SerializableErrorWrapperProvider.Wrap
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapperProvider.Wrap
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  isExternal: true
  name: Wrap(Object)
  nameWithType: IWrapperProvider.Wrap(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
    name: Wrap
    nameWithType: IWrapperProvider.Wrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
    name: Wrap
    nameWithType: IWrapperProvider.Wrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
