### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.ICorsAuthorizationFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Cors.Internal.ICorsAuthorizationFilter
  id: ICorsAuthorizationFilter
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal
  children: []
  langs:
  - csharp
  - vb
  name: ICorsAuthorizationFilter
  nameWithType: ICorsAuthorizationFilter
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.ICorsAuthorizationFilter
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/ICorsAuthorizationFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ICorsAuthorizationFilter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/ICorsAuthorizationFilter.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nA filter that can be used to enable/disable CORS support for a resource.\n"
  example: []
  syntax:
    content: 'public interface ICorsAuthorizationFilter : IAsyncAuthorizationFilter, IOrderedFilter'
    content.vb: >-
      Public Interface ICorsAuthorizationFilter
          Inherits IAsyncAuthorizationFilter, IOrderedFilter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Cors.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Cors.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Cors.Internal
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal
shouldSkipMarkup: true
