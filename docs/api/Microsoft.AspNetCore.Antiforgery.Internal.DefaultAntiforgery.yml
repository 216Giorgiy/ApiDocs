### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  id: DefaultAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  children:
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,ILoggerFactory)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  langs:
  - csharp
  - vb
  name: DefaultAntiforgery
  nameWithType: DefaultAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: DefaultAntiforgery
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nProvides access to the antiforgery system, which provides protection against\nCross-site Request Forgery (XSRF, also called CSRF) attacks.\n"
  example: []
  syntax:
    content: 'public class DefaultAntiforgery : object, IAntiforgery'
    content.vb: >-
      Public Class DefaultAntiforgery
          Inherits Object
          Implements IAntiforgery
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,ILoggerFactory)
  id: '#ctor(IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,ILoggerFactory)'
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: DefaultAntiforgery(IOptions<AntiforgeryOptions>, IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  nameWithType: DefaultAntiforgery.DefaultAntiforgery(IOptions<AntiforgeryOptions>, IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.DefaultAntiforgery(IOptions<Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions>, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: .ctor
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: public DefaultAntiforgery(IOptions<AntiforgeryOptions> antiforgeryOptionsAccessor, IAntiforgeryTokenGenerator tokenGenerator, IAntiforgeryTokenSerializer tokenSerializer, IAntiforgeryTokenStore tokenStore, ILoggerFactory loggerFactory)
    parameters:
    - id: antiforgeryOptionsAccessor
      type: IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}
    - id: tokenGenerator
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
    - id: tokenSerializer
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
    - id: tokenStore
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
    - id: loggerFactory
      type: ILoggerFactory
    content.vb: Public Sub New(antiforgeryOptionsAccessor As IOptions(Of AntiforgeryOptions), tokenGenerator As IAntiforgeryTokenGenerator, tokenSerializer As IAntiforgeryTokenSerializer, tokenStore As IAntiforgeryTokenStore, loggerFactory As ILoggerFactory)
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor*
  nameWithType.vb: DefaultAntiforgery.DefaultAntiforgery(IOptions(Of AntiforgeryOptions), IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.DefaultAntiforgery(IOptions(Of Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions), Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore, ILoggerFactory)
  name.vb: DefaultAntiforgery(IOptions(Of AntiforgeryOptions), IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  id: GetAndStoreTokens(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens(HttpContext)
  nameWithType: DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nGenerates an <xref href=\"Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet\" data-throw-if-not-resolved=\"false\"></xref> for this request and stores the cookie token\nin the response.\n"
  remarks: "\nThis method has a side effect:\nA response cookie is set if there is no valid cookie associated with the request.\n"
  example: []
  syntax:
    content: public AntiforgeryTokenSet GetAndStoreTokens(HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
      description: An <xref href="Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" data-throw-if-not-resolved="false"></xref> with tokens for the response.
    content.vb: Public Function GetAndStoreTokens(httpContext As HttpContext) As AntiforgeryTokenSet
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens*
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(HttpContext)
  id: GetTokens(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: GetTokens(HttpContext)
  nameWithType: DefaultAntiforgery.GetTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nGenerates an <xref href=\"Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet\" data-throw-if-not-resolved=\"false\"></xref> for this request.\n"
  remarks: "\nUnlike <xref href=\"Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)\" data-throw-if-not-resolved=\"false\"></xref>, this method has no side effect. The caller\nis responsible for setting the response cookie and injecting the returned\nform token as appropriate.\n"
  example: []
  syntax:
    content: public AntiforgeryTokenSet GetTokens(HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
    content.vb: Public Function GetTokens(httpContext As HttpContext) As AntiforgeryTokenSet
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens*
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  id: IsRequestValidAsync(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync(HttpContext)
  nameWithType: DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nAsynchronously returns a value indicating whether the request passes antiforgery validation. If the\nrequest uses a safe HTTP method (GET, HEAD, OPTIONS, TRACE), the antiforgery token is not validated.\n"
  example: []
  syntax:
    content: public Task<bool> IsRequestValidAsync(HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    return:
      type: Task{System.Boolean}
      description: "\nA <see cref=\"!:Task&lt;Boolean&gt;\"></see> that, when completed, returns <code>true</code> if the is requst uses a safe HTTP\nmethod or contains a value antiforgery token, otherwise returns <code>false</code>.\n"
    content.vb: Public Function IsRequestValidAsync(httpContext As HttpContext) As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync*
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  id: ValidateRequestAsync(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync(HttpContext)
  nameWithType: DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 144
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nValidates an antiforgery token that was supplied as part of the request.\n"
  example: []
  syntax:
    content: public Task ValidateRequestAsync(HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    return:
      type: Task
    content.vb: Public Function ValidateRequestAsync(httpContext As HttpContext) As Task
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync*
  exceptions:
  - type: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
    commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
    description: "\nThrown when the request does not include a valid antiforgery token.\n"
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  id: SetCookieTokenAndHeader(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader(HttpContext)
  nameWithType: DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader
    path: ../aspnet/Antiforgery/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nGenerates and stores an antiforgery cookie token if one is not available or not valid.\n"
  example: []
  syntax:
    content: public void SetCookieTokenAndHeader(HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
      description: The <see cref="!:HttpContext"></see> associated with the current request.
    content.vb: Public Sub SetCookieTokenAndHeader(httpContext As HttpContext)
  overload: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader*
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Antiforgery.Internal
  commentId: N:Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery.Internal
  nameWithType: Microsoft.AspNetCore.Antiforgery.Internal
  fullName: Microsoft.AspNetCore.Antiforgery.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.IAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: IAntiforgery
  nameWithType: IAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Antiforgery
  commentId: N:Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery
  nameWithType: Microsoft.AspNetCore.Antiforgery
  fullName: Microsoft.AspNetCore.Antiforgery
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor
  isExternal: false
  name: DefaultAntiforgery
  nameWithType: DefaultAntiforgery.DefaultAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.DefaultAntiforgery
- uid: IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}'
  definition: IOptions`1
  name: IOptions<AntiforgeryOptions>
  nameWithType: IOptions<AntiforgeryOptions>
  fullName: IOptions<Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions>
  nameWithType.vb: IOptions(Of AntiforgeryOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions)
  name.vb: IOptions(Of AntiforgeryOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
    name: AntiforgeryOptions
    nameWithType: AntiforgeryOptions
    fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
    name: AntiforgeryOptions
    nameWithType: AntiforgeryOptions
    fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenGenerator
  nameWithType: IAntiforgeryTokenGenerator
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenSerializer
  nameWithType: IAntiforgeryTokenSerializer
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenStore
  nameWithType: IAntiforgeryTokenStore
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens
  isExternal: false
  name: GetAndStoreTokens
  nameWithType: DefaultAntiforgery.GetAndStoreTokens
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: GetAndStoreTokens(HttpContext)
  nameWithType: IAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: AntiforgeryTokenSet
  nameWithType: AntiforgeryTokenSet
  fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens
  isExternal: false
  name: GetTokens
  nameWithType: DefaultAntiforgery.GetTokens
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: GetTokens(HttpContext)
  nameWithType: IAntiforgery.GetTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
    name: GetTokens
    nameWithType: IAntiforgery.GetTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(HttpContext)
    name: GetTokens
    nameWithType: IAntiforgery.GetTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync
  isExternal: false
  name: IsRequestValidAsync
  nameWithType: DefaultAntiforgery.IsRequestValidAsync
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: IsRequestValidAsync(HttpContext)
  nameWithType: IAntiforgery.IsRequestValidAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
    name: IsRequestValidAsync
    nameWithType: IAntiforgery.IsRequestValidAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(HttpContext)
    name: IsRequestValidAsync
    nameWithType: IAntiforgery.IsRequestValidAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync
  isExternal: false
  name: ValidateRequestAsync
  nameWithType: DefaultAntiforgery.ValidateRequestAsync
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: ValidateRequestAsync(HttpContext)
  nameWithType: IAntiforgery.ValidateRequestAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
    name: ValidateRequestAsync
    nameWithType: IAntiforgery.ValidateRequestAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(HttpContext)
    name: ValidateRequestAsync
    nameWithType: IAntiforgery.ValidateRequestAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
  commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
  isExternal: false
  name: AntiforgeryValidationException
  nameWithType: AntiforgeryValidationException
  fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader*
  commentId: Overload:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader
  isExternal: false
  name: SetCookieTokenAndHeader
  nameWithType: DefaultAntiforgery.SetCookieTokenAndHeader
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: SetCookieTokenAndHeader(HttpContext)
  nameWithType: IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
    name: SetCookieTokenAndHeader
    nameWithType: IAntiforgery.SetCookieTokenAndHeader
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(HttpContext)
    name: SetCookieTokenAndHeader
    nameWithType: IAntiforgery.SetCookieTokenAndHeader
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
