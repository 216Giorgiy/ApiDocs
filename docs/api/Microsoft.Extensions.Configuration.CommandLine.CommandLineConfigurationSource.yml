### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  id: CommandLineConfigurationSource
  parent: Microsoft.Extensions.Configuration.CommandLine
  children:
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(IConfigurationBuilder)
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationSource
  nameWithType: CommandLineConfigurationSource
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CommandLineConfigurationSource
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nRepresents command line arguments as an <see cref=\"!:IConfigurationSource\"></see>.\n"
  example: []
  syntax:
    content: 'public class CommandLineConfigurationSource : IConfigurationSource'
    content.vb: >-
      Public Class CommandLineConfigurationSource
          Inherits IConfigurationSource
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  id: SwitchMappings
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: SwitchMappings
  nameWithType: CommandLineConfigurationSource.SwitchMappings
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SwitchMappings
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nGets or sets the switch mappings.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> SwitchMappings { get; set; }
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
    content.vb: Public Property SwitchMappings As IDictionary(Of String, String)
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  id: Args
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: CommandLineConfigurationSource.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Args
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nGets or sets the command line args.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Args { get; set; }
    parameters: []
    return:
      type: IEnumerable{System.String}
    content.vb: Public Property Args As IEnumerable(Of String)
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(IConfigurationBuilder)
  id: Build(IConfigurationBuilder)
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: Build(IConfigurationBuilder)
  nameWithType: CommandLineConfigurationSource.Build(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(IConfigurationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Build
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nBuilds the <xref href=\"Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref> for this source.\n"
  example: []
  syntax:
    content: public IConfigurationProvider Build(IConfigurationBuilder builder)
    parameters:
    - id: builder
      type: IConfigurationBuilder
      description: The <see cref="!:IConfigurationBuilder"></see>.
    return:
      type: IConfigurationProvider
      description: A <xref href="Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Build(builder As IConfigurationBuilder) As IConfigurationProvider
  overload: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.CommandLine
  commentId: N:Microsoft.Extensions.Configuration.CommandLine
  isExternal: false
  name: Microsoft.Extensions.Configuration.CommandLine
  nameWithType: Microsoft.Extensions.Configuration.CommandLine
  fullName: Microsoft.Extensions.Configuration.CommandLine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  isExternal: false
  name: SwitchMappings
  nameWithType: CommandLineConfigurationSource.SwitchMappings
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  isExternal: false
  name: Args
  nameWithType: CommandLineConfigurationSource.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  isExternal: false
  name: CommandLineConfigurationProvider
  nameWithType: CommandLineConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build*
  commentId: Overload:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build
  isExternal: false
  name: Build
  nameWithType: CommandLineConfigurationSource.Build
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build
- uid: IConfigurationBuilder
  isExternal: true
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: IConfigurationBuilder
- uid: IConfigurationProvider
  isExternal: true
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: IConfigurationProvider
shouldSkipMarkup: true
