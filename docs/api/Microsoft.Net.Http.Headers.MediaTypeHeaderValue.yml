### YamlMime:ManagedReference
items:
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  id: MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  children:
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String,System.Double)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(IList{System.String})
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(IList{System.String})
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  - Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  type: Class
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MediaTypeHeaderValue
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 12
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: 'public class MediaTypeHeaderValue : object'
    content.vb: >-
      Public Class MediaTypeHeaderValue
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue(String)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(String)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 32
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public MediaTypeHeaderValue(string mediaType)
    parameters:
    - id: mediaType
      type: System.String
    content.vb: Public Sub New(mediaType As String)
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String,System.Double)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue(String, Double)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(String, Double)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(System.String, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 38
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public MediaTypeHeaderValue(string mediaType, double quality)
    parameters:
    - id: mediaType
      type: System.String
    - id: quality
      type: System.Double
    content.vb: Public Sub New(mediaType As String, quality As Double)
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
  id: Charset
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Charset
  nameWithType: MediaTypeHeaderValue.Charset
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Charset
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 44
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string Charset { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Charset As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
  id: Encoding
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: MediaTypeHeaderValue.Encoding
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Encoding
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 78
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public Encoding Encoding { get; set; }
    parameters: []
    return:
      type: Encoding
    content.vb: Public Property Encoding As Encoding
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
  id: Boundary
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Boundary
  nameWithType: MediaTypeHeaderValue.Boundary
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Boundary
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 110
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string Boundary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Boundary As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  id: Parameters
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Parameters
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 142
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public IList<NameValueHeaderValue> Parameters { get; }
    parameters: []
    return:
      type: IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}
    content.vb: Public ReadOnly Property Parameters As IList(Of NameValueHeaderValue)
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
  id: Quality
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: MediaTypeHeaderValue.Quality
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Quality
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 161
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public double ? Quality { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Quality As Double?
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  id: MediaType
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MediaType
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 171
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string MediaType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MediaType As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
  id: Type
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MediaTypeHeaderValue.Type
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Type
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 182
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
  id: SubType
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: SubType
  nameWithType: MediaTypeHeaderValue.SubType
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SubType
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 190
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string SubType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SubType As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
  id: MatchesAllTypes
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MatchesAllTypes
  nameWithType: MediaTypeHeaderValue.MatchesAllTypes
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MatchesAllTypes
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 201
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  summary: "\nMediaType = \"*/*\"\n"
  example: []
  syntax:
    content: public bool MatchesAllTypes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MatchesAllTypes As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
  id: MatchesAllSubTypes
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MatchesAllSubTypes
  nameWithType: MediaTypeHeaderValue.MatchesAllSubTypes
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: MatchesAllSubTypes
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 212
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  summary: "\nSubType = \"*\"\n"
  example: []
  syntax:
    content: public bool MatchesAllSubTypes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MatchesAllSubTypes As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
  commentId: P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: MediaTypeHeaderValue.IsReadOnly
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsReadOnly
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 220
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  id: IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: IsSubsetOf(MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.IsSubsetOf(MediaTypeHeaderValue)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsSubsetOf
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 240
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  summary: "\nGets a value indicating whether this <xref href=\"Microsoft.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> is a subset of\n<span class=\"paramref\">otherMediaType</span>. A \"subset\" is defined as the same or a more specific media type\naccording to the precedence described in https://www.ietf.org/rfc/rfc2068.txt section 14.1, Accept.\n"
  remarks: "\nFor example \"multipart/mixed; boundary=1234\" is a subset of \"multipart/mixed; boundary=1234\",\n\"multipart/mixed\", \"multipart/*\", and \"*/*\" but not \"multipart/mixed; boundary=2345\" or\n\"multipart/message; boundary=1234\".\n"
  example: []
  syntax:
    content: public bool IsSubsetOf(MediaTypeHeaderValue otherMediaType)
    parameters:
    - id: otherMediaType
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: The <xref href="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: "\nA value indicating whether this <xref href=\"Microsoft.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> is a subset of\n<span class=\"paramref\">otherMediaType</span>.\n"
    content.vb: Public Function IsSubsetOf(otherMediaType As MediaTypeHeaderValue) As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy
  id: Copy
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: MediaTypeHeaderValue.Copy()
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Copy
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 316
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  summary: "\nPerforms a deep copy of this object and all of it's NameValueHeaderValue sub components,\nwhile avoiding the cost of revalidating the components.\n"
  example: []
  syntax:
    content: public MediaTypeHeaderValue Copy()
    return:
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: A deep copy.
    content.vb: Public Function Copy As MediaTypeHeaderValue
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly
  id: CopyAsReadOnly
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: CopyAsReadOnly()
  nameWithType: MediaTypeHeaderValue.CopyAsReadOnly()
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: CopyAsReadOnly
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 334
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  summary: "\nPerforms a deep copy of this object and all of it's NameValueHeaderValue sub components,\nwhile avoiding the cost of revalidating the components. This copy is read-only.\n"
  example: []
  syntax:
    content: public MediaTypeHeaderValue CopyAsReadOnly()
    return:
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: A deep, read-only, copy.
    content.vb: Public Function CopyAsReadOnly As MediaTypeHeaderValue
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString
  id: ToString
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MediaTypeHeaderValue.ToString()
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 352
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MediaTypeHeaderValue.Equals(Object)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 357
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  id: GetHashCode
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MediaTypeHeaderValue.GetHashCode()
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 370
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: MediaTypeHeaderValue.Parse(String)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Parse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 376
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static MediaTypeHeaderValue Parse(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    content.vb: Public Shared Function Parse(input As String) As MediaTypeHeaderValue
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)
  id: TryParse(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.TryParse(String, out MediaTypeHeaderValue)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String, out Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 382
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParse(string input, out MediaTypeHeaderValue parsedValue)
    parameters:
    - id: input
      type: System.String
    - id: parsedValue
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As MediaTypeHeaderValue) As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse*
  nameWithType.vb: MediaTypeHeaderValue.TryParse(String, ByRef MediaTypeHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String, ByRef Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: TryParse(String, ByRef MediaTypeHeaderValue)
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(IList{System.String})
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(IList{System.String})
  id: ParseList(IList{System.String})
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: ParseList(IList<String>)
  nameWithType: MediaTypeHeaderValue.ParseList(IList<String>)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ParseList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 388
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static IList<MediaTypeHeaderValue> ParseList(IList<string> inputs)
    parameters:
    - id: inputs
      type: IList{System.String}
    return:
      type: IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}
    content.vb: Public Shared Function ParseList(inputs As IList(Of String)) As IList(Of MediaTypeHeaderValue)
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList*
  nameWithType.vb: MediaTypeHeaderValue.ParseList(IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(IList(Of System.String))
  name.vb: ParseList(IList(Of String))
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(IList{System.String})
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(IList{System.String})
  id: ParseStrictList(IList{System.String})
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: ParseStrictList(IList<String>)
  nameWithType: MediaTypeHeaderValue.ParseStrictList(IList<String>)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ParseStrictList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 393
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static IList<MediaTypeHeaderValue> ParseStrictList(IList<string> inputs)
    parameters:
    - id: inputs
      type: IList{System.String}
    return:
      type: IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}
    content.vb: Public Shared Function ParseStrictList(inputs As IList(Of String)) As IList(Of MediaTypeHeaderValue)
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList*
  nameWithType.vb: MediaTypeHeaderValue.ParseStrictList(IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(IList(Of System.String))
  name.vb: ParseStrictList(IList(Of String))
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  id: TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: TryParseList(IList<String>, out IList<MediaTypeHeaderValue>)
  nameWithType: MediaTypeHeaderValue.TryParseList(IList<String>, out IList<MediaTypeHeaderValue>)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(IList<System.String>, out IList<Microsoft.Net.Http.Headers.MediaTypeHeaderValue>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParseList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 398
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParseList(IList<string> inputs, out IList<MediaTypeHeaderValue> parsedValues)
    parameters:
    - id: inputs
      type: IList{System.String}
    - id: parsedValues
      type: IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseList(inputs As IList(Of String), ByRef parsedValues As IList(Of MediaTypeHeaderValue)) As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList*
  nameWithType.vb: MediaTypeHeaderValue.TryParseList(IList(Of String), ByRef IList(Of MediaTypeHeaderValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(IList(Of System.String), ByRef IList(Of Microsoft.Net.Http.Headers.MediaTypeHeaderValue))
  name.vb: TryParseList(IList(Of String), ByRef IList(Of MediaTypeHeaderValue))
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  commentId: M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  id: TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)
  parent: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: TryParseStrictList(IList<String>, out IList<MediaTypeHeaderValue>)
  nameWithType: MediaTypeHeaderValue.TryParseStrictList(IList<String>, out IList<MediaTypeHeaderValue>)
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(IList<System.String>, out IList<Microsoft.Net.Http.Headers.MediaTypeHeaderValue>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParseStrictList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/MediaTypeHeaderValue.cs
    startLine: 403
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParseStrictList(IList<string> inputs, out IList<MediaTypeHeaderValue> parsedValues)
    parameters:
    - id: inputs
      type: IList{System.String}
    - id: parsedValues
      type: IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseStrictList(inputs As IList(Of String), ByRef parsedValues As IList(Of MediaTypeHeaderValue)) As Boolean
  overload: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList*
  nameWithType.vb: MediaTypeHeaderValue.TryParseStrictList(IList(Of String), ByRef IList(Of MediaTypeHeaderValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(IList(Of System.String), ByRef IList(Of Microsoft.Net.Http.Headers.MediaTypeHeaderValue))
  name.vb: TryParseStrictList(IList(Of String), ByRef IList(Of MediaTypeHeaderValue))
references:
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor
  isExternal: false
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
  isExternal: false
  name: Charset
  nameWithType: MediaTypeHeaderValue.Charset
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
  isExternal: false
  name: Encoding
  nameWithType: MediaTypeHeaderValue.Encoding
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding
- uid: Encoding
  commentId: '!:Encoding'
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
  isExternal: false
  name: Boundary
  nameWithType: MediaTypeHeaderValue.Boundary
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  isExternal: false
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters
- uid: IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}
  commentId: '!:IList{Microsoft.Net.Http.Headers.NameValueHeaderValue}'
  definition: IList`1
  name: IList<NameValueHeaderValue>
  nameWithType: IList<NameValueHeaderValue>
  fullName: IList<Microsoft.Net.Http.Headers.NameValueHeaderValue>
  nameWithType.vb: IList(Of NameValueHeaderValue)
  fullName.vb: IList(Of Microsoft.Net.Http.Headers.NameValueHeaderValue)
  name.vb: IList(Of NameValueHeaderValue)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: Microsoft.Net.Http.Headers.NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: Microsoft.Net.Http.Headers.NameValueHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
  isExternal: false
  name: Quality
  nameWithType: MediaTypeHeaderValue.Quality
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  isExternal: false
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
  isExternal: false
  name: Type
  nameWithType: MediaTypeHeaderValue.Type
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
  isExternal: false
  name: SubType
  nameWithType: MediaTypeHeaderValue.SubType
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
  isExternal: false
  name: MatchesAllTypes
  nameWithType: MediaTypeHeaderValue.MatchesAllTypes
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
  isExternal: false
  name: MatchesAllSubTypes
  nameWithType: MediaTypeHeaderValue.MatchesAllSubTypes
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: MediaTypeHeaderValue.IsReadOnly
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: false
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf
  isExternal: false
  name: IsSubsetOf
  nameWithType: MediaTypeHeaderValue.IsSubsetOf
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy
  isExternal: false
  name: Copy
  nameWithType: MediaTypeHeaderValue.Copy
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly
  isExternal: false
  name: CopyAsReadOnly
  nameWithType: MediaTypeHeaderValue.CopyAsReadOnly
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString
  isExternal: false
  name: ToString
  nameWithType: MediaTypeHeaderValue.ToString
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals
  isExternal: false
  name: Equals
  nameWithType: MediaTypeHeaderValue.Equals
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: MediaTypeHeaderValue.GetHashCode
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse
  isExternal: false
  name: Parse
  nameWithType: MediaTypeHeaderValue.Parse
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse
  isExternal: false
  name: TryParse
  nameWithType: MediaTypeHeaderValue.TryParse
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList
  isExternal: false
  name: ParseList
  nameWithType: MediaTypeHeaderValue.ParseList
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList
- uid: IList{System.String}
  commentId: '!:IList{System.String}'
  definition: IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}
  commentId: '!:IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}'
  definition: IList`1
  name: IList<MediaTypeHeaderValue>
  nameWithType: IList<MediaTypeHeaderValue>
  fullName: IList<Microsoft.Net.Http.Headers.MediaTypeHeaderValue>
  nameWithType.vb: IList(Of MediaTypeHeaderValue)
  fullName.vb: IList(Of Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: IList(Of MediaTypeHeaderValue)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList
  isExternal: false
  name: ParseStrictList
  nameWithType: MediaTypeHeaderValue.ParseStrictList
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList
  isExternal: false
  name: TryParseList
  nameWithType: MediaTypeHeaderValue.TryParseList
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList*
  commentId: Overload:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList
  isExternal: false
  name: TryParseStrictList
  nameWithType: MediaTypeHeaderValue.TryParseStrictList
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList
shouldSkipMarkup: true
