### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandOption
  id: CommandOption
  parent: Microsoft.Extensions.CommandLineUtils
  children:
  - Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor(System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  - Microsoft.Extensions.CommandLineUtils.CommandOption.Description
  - Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue
  - Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
  - Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
  - Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
  - Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
  - Microsoft.Extensions.CommandLineUtils.CommandOption.Template
  - Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse(System.String)
  - Microsoft.Extensions.CommandLineUtils.CommandOption.Value
  - Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
  - Microsoft.Extensions.CommandLineUtils.CommandOption.Values
  langs:
  - csharp
  - vb
  name: CommandOption
  nameWithType: CommandOption
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: CommandOption
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public class CommandOption
    content.vb: Public Class CommandOption
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor(System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor(System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  id: '#ctor(System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)'
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: CommandOption(String, CommandOptionType)
  nameWithType: CommandOption.CommandOption(String, CommandOptionType)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.CommandOption(System.String, Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption(string template, CommandOptionType optionType)
    parameters:
    - id: template
      type: System.String
    - id: optionType
      type: Microsoft.Extensions.CommandLineUtils.CommandOptionType
    content.vb: Public Sub New(template As String, optionType As CommandOptionType)
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Template
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.Template
  id: Template
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: CommandOption.Template
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Template
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Template
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 53
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Template { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Template As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.Template*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
  id: ShortName
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: ShortName
  nameWithType: CommandOption.ShortName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShortName
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 54
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string ShortName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShortName As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
  id: LongName
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: LongName
  nameWithType: CommandOption.LongName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: LongName
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 55
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string LongName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LongName As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.LongName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
  id: SymbolName
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: SymbolName
  nameWithType: CommandOption.SymbolName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: SymbolName
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 56
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string SymbolName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SymbolName As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
  id: ValueName
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: ValueName
  nameWithType: CommandOption.ValueName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ValueName
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 57
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string ValueName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ValueName As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Description
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.Description
  id: Description
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CommandOption.Description
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Description
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Description
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 58
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Values
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.Values
  id: Values
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: CommandOption.Values
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Values
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 59
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public List<string> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property Values As List(Of String)
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
  id: OptionType
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: OptionType
  nameWithType: CommandOption.OptionType
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: OptionType
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 60
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOptionType OptionType { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOptionType
    content.vb: Public ReadOnly Property OptionType As CommandOptionType
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse(System.String)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse(System.String)
  id: TryParse(System.String)
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: TryParse(String)
  nameWithType: CommandOption.TryParse(String)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: TryParse
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 62
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public bool TryParse(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function TryParse(value As String) As Boolean
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue
  id: HasValue
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: HasValue()
  nameWithType: CommandOption.HasValue()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: HasValue
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 90
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public bool HasValue()
    return:
      type: System.Boolean
    content.vb: Public Function HasValue As Boolean
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Value
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandOption.Value
  id: Value
  parent: Microsoft.Extensions.CommandLineUtils.CommandOption
  langs:
  - csharp
  - vb
  name: Value()
  nameWithType: CommandOption.Value()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Value()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Value
    path: ../aspnet/Common/src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandOption.cs
    startLine: 95
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Value()
    return:
      type: System.String
    content.vb: Public Function Value As String
  overload: Microsoft.Extensions.CommandLineUtils.CommandOption.Value*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.CommandLineUtils
  commentId: N:Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: Microsoft.Extensions.CommandLineUtils
  nameWithType: Microsoft.Extensions.CommandLineUtils
  fullName: Microsoft.Extensions.CommandLineUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.#ctor
  isExternal: false
  name: CommandOption
  nameWithType: CommandOption.CommandOption
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.CommandOption
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.CommandLineUtils.CommandOptionType
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandOptionType
  parent: Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: CommandOptionType
  nameWithType: CommandOptionType
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOptionType
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Template*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.Template
  isExternal: false
  name: Template
  nameWithType: CommandOption.Template
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Template
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
  isExternal: false
  name: ShortName
  nameWithType: CommandOption.ShortName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.ShortName
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.LongName*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
  isExternal: false
  name: LongName
  nameWithType: CommandOption.LongName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.LongName
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
  isExternal: false
  name: SymbolName
  nameWithType: CommandOption.SymbolName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.SymbolName
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
  isExternal: false
  name: ValueName
  nameWithType: CommandOption.ValueName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.ValueName
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Description*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.Description
  isExternal: false
  name: Description
  nameWithType: CommandOption.Description
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Description
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Values*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.Values
  isExternal: false
  name: Values
  nameWithType: CommandOption.Values
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Values
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
  isExternal: false
  name: OptionType
  nameWithType: CommandOption.OptionType
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.OptionType
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse
  isExternal: false
  name: TryParse
  nameWithType: CommandOption.TryParse
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.TryParse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue
  isExternal: false
  name: HasValue
  nameWithType: CommandOption.HasValue
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.HasValue
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption.Value*
  commentId: Overload:Microsoft.Extensions.CommandLineUtils.CommandOption.Value
  isExternal: false
  name: Value
  nameWithType: CommandOption.Value
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption.Value
shouldSkipMarkup: true
