### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  id: ControllerActionInvokerProvider
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},ILoggerFactory,DiagnosticSource)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted(ActionInvokerProviderContext)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
  langs:
  - csharp
  - vb
  name: ControllerActionInvokerProvider
  nameWithType: ControllerActionInvokerProvider
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerActionInvokerProvider
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: 'public class ControllerActionInvokerProvider : IActionInvokerProvider'
    content.vb: >-
      Public Class ControllerActionInvokerProvider
          Inherits IActionInvokerProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},ILoggerFactory,DiagnosticSource)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},ILoggerFactory,DiagnosticSource)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},ILoggerFactory,DiagnosticSource)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  langs:
  - csharp
  - vb
  name: ControllerActionInvokerProvider(IControllerFactory, ControllerActionInvokerCache, IControllerArgumentBinder, IOptions<MvcOptions>, ILoggerFactory, DiagnosticSource)
  nameWithType: ControllerActionInvokerProvider.ControllerActionInvokerProvider(IControllerFactory, ControllerActionInvokerCache, IControllerArgumentBinder, IOptions<MvcOptions>, ILoggerFactory, DiagnosticSource)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.ControllerActionInvokerProvider(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory, Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache, Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder, IOptions<Microsoft.AspNetCore.Mvc.MvcOptions>, ILoggerFactory, DiagnosticSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public ControllerActionInvokerProvider(IControllerFactory controllerFactory, ControllerActionInvokerCache controllerActionInvokerCache, IControllerArgumentBinder argumentBinder, IOptions<MvcOptions> optionsAccessor, ILoggerFactory loggerFactory, DiagnosticSource diagnosticSource)
    parameters:
    - id: controllerFactory
      type: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
    - id: controllerActionInvokerCache
      type: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
    - id: argumentBinder
      type: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
    - id: optionsAccessor
      type: IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}
    - id: loggerFactory
      type: ILoggerFactory
    - id: diagnosticSource
      type: DiagnosticSource
    content.vb: Public Sub New(controllerFactory As IControllerFactory, controllerActionInvokerCache As ControllerActionInvokerCache, argumentBinder As IControllerArgumentBinder, optionsAccessor As IOptions(Of MvcOptions), loggerFactory As ILoggerFactory, diagnosticSource As DiagnosticSource)
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor*
  nameWithType.vb: ControllerActionInvokerProvider.ControllerActionInvokerProvider(IControllerFactory, ControllerActionInvokerCache, IControllerArgumentBinder, IOptions(Of MvcOptions), ILoggerFactory, DiagnosticSource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.ControllerActionInvokerProvider(Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory, Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache, Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder, IOptions(Of Microsoft.AspNetCore.Mvc.MvcOptions), ILoggerFactory, DiagnosticSource)
  name.vb: ControllerActionInvokerProvider(IControllerFactory, ControllerActionInvokerCache, IControllerArgumentBinder, IOptions(Of MvcOptions), ILoggerFactory, DiagnosticSource)
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: ControllerActionInvokerProvider.Order
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Order
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Order As Integer
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext)
  id: OnProvidersExecuting(ActionInvokerProviderContext)
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  langs:
  - csharp
  - vb
  name: OnProvidersExecuting(ActionInvokerProviderContext)
  nameWithType: ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnProvidersExecuting
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public void OnProvidersExecuting(ActionInvokerProviderContext context)
    parameters:
    - id: context
      type: ActionInvokerProviderContext
    content.vb: Public Sub OnProvidersExecuting(context As ActionInvokerProviderContext)
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted(ActionInvokerProviderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted(ActionInvokerProviderContext)
  id: OnProvidersExecuted(ActionInvokerProviderContext)
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider
  langs:
  - csharp
  - vb
  name: OnProvidersExecuted(ActionInvokerProviderContext)
  nameWithType: ControllerActionInvokerProvider.OnProvidersExecuted(ActionInvokerProviderContext)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted(ActionInvokerProviderContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnProvidersExecuted
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerProvider.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public void OnProvidersExecuted(ActionInvokerProviderContext context)
    parameters:
    - id: context
      type: ActionInvokerProviderContext
    content.vb: Public Sub OnProvidersExecuted(context As ActionInvokerProviderContext)
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.#ctor
  isExternal: false
  name: ControllerActionInvokerProvider
  nameWithType: ControllerActionInvokerProvider.ControllerActionInvokerProvider
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.ControllerActionInvokerProvider
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: IControllerFactory
  nameWithType: IControllerFactory
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: ControllerActionInvokerCache
  nameWithType: ControllerActionInvokerCache
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
- uid: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IControllerArgumentBinder
  nameWithType: IControllerArgumentBinder
  fullName: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
- uid: IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}'
  definition: IOptions`1
  name: IOptions<MvcOptions>
  nameWithType: IOptions<MvcOptions>
  fullName: IOptions<Microsoft.AspNetCore.Mvc.MvcOptions>
  nameWithType.vb: IOptions(Of MvcOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Mvc.MvcOptions)
  name.vb: IOptions(Of MvcOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: DiagnosticSource
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: DiagnosticSource
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
  isExternal: false
  name: Order
  nameWithType: ControllerActionInvokerProvider.Order
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting
  isExternal: false
  name: OnProvidersExecuting
  nameWithType: ControllerActionInvokerProvider.OnProvidersExecuting
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting
- uid: ActionInvokerProviderContext
  isExternal: true
  name: ActionInvokerProviderContext
  nameWithType: ActionInvokerProviderContext
  fullName: ActionInvokerProviderContext
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted
  isExternal: false
  name: OnProvidersExecuted
  nameWithType: ControllerActionInvokerProvider.OnProvidersExecuted
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuted
shouldSkipMarkup: true
