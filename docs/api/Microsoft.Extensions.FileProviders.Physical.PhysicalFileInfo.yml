### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  commentId: T:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  id: PhysicalFileInfo
  parent: Microsoft.Extensions.FileProviders.Physical
  children:
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor(System.IO.FileInfo)
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
  - Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
  langs:
  - csharp
  - vb
  name: PhysicalFileInfo
  nameWithType: PhysicalFileInfo
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: PhysicalFileInfo
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: 'public class PhysicalFileInfo : IFileInfo'
    content.vb: >-
      Public Class PhysicalFileInfo
          Inherits IFileInfo
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor(System.IO.FileInfo)
  commentId: M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor(System.IO.FileInfo)
  id: '#ctor(System.IO.FileInfo)'
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: PhysicalFileInfo(FileInfo)
  nameWithType: PhysicalFileInfo.PhysicalFileInfo(FileInfo)
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalFileInfo(System.IO.FileInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public PhysicalFileInfo(FileInfo info)
    parameters:
    - id: info
      type: System.IO.FileInfo
    content.vb: Public Sub New(info As FileInfo)
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
  id: Exists
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: PhysicalFileInfo.Exists
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Exists
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Exists As Boolean
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
  id: Length
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: PhysicalFileInfo.Length
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Length
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Length As Long
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
  id: PhysicalPath
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: PhysicalPath
  nameWithType: PhysicalFileInfo.PhysicalPath
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: PhysicalPath
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public string PhysicalPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PhysicalPath As String
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
  id: Name
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PhysicalFileInfo.Name
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Name
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
  id: LastModified
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: PhysicalFileInfo.LastModified
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: LastModified
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public DateTimeOffset LastModified { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: Public ReadOnly Property LastModified As DateTimeOffset
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
  commentId: P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
  id: IsDirectory
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: IsDirectory
  nameWithType: PhysicalFileInfo.IsDirectory
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: IsDirectory
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public bool IsDirectory { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDirectory As Boolean
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream
  commentId: M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream
  id: CreateReadStream
  parent: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo
  langs:
  - csharp
  - vb
  name: CreateReadStream()
  nameWithType: PhysicalFileInfo.CreateReadStream()
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: CreateReadStream
    path: ../aspnet/FileSystem/src/Microsoft.Extensions.FileProviders.Physical/PhysicalFileInfo.cs
    startLine: 29
  assemblies:
  - Microsoft.Extensions.FileProviders.Physical
  namespace: Microsoft.Extensions.FileProviders.Physical
  syntax:
    content: public Stream CreateReadStream()
    return:
      type: System.IO.Stream
    content.vb: Public Function CreateReadStream As Stream
  overload: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.FileProviders.Physical
  commentId: N:Microsoft.Extensions.FileProviders.Physical
  isExternal: false
  name: Microsoft.Extensions.FileProviders.Physical
  nameWithType: Microsoft.Extensions.FileProviders.Physical
  fullName: Microsoft.Extensions.FileProviders.Physical
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor
  isExternal: false
  name: PhysicalFileInfo
  nameWithType: PhysicalFileInfo.PhysicalFileInfo
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalFileInfo
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
  isExternal: false
  name: Exists
  nameWithType: PhysicalFileInfo.Exists
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
  isExternal: false
  name: Length
  nameWithType: PhysicalFileInfo.Length
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
  isExternal: false
  name: PhysicalPath
  nameWithType: PhysicalFileInfo.PhysicalPath
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
  isExternal: false
  name: Name
  nameWithType: PhysicalFileInfo.Name
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
  isExternal: false
  name: LastModified
  nameWithType: PhysicalFileInfo.LastModified
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: PhysicalFileInfo.IsDirectory
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory
- uid: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream*
  commentId: Overload:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream
  isExternal: false
  name: CreateReadStream
  nameWithType: PhysicalFileInfo.CreateReadStream
  fullName: Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
shouldSkipMarkup: true
