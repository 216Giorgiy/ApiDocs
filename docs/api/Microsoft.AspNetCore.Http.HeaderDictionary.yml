### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  id: HeaderDictionary
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,StringValues)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  - Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,StringValues}[],System.Int32)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Count
  - Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  - Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  - Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,StringValues@)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Values
  langs:
  - csharp
  - vb
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HeaderDictionary
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRepresents a wrapper for RequestHeaders and ResponseHeaders.\n"
  example: []
  syntax:
    content: 'public class HeaderDictionary : IHeaderDictionary'
    content.vb: >-
      Public Class HeaderDictionary
          Inherits IHeaderDictionary
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary()
  nameWithType: HeaderDictionary.HeaderDictionary()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary()
    content.vb: Public Sub New
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues})
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,StringValues})'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary(Dictionary<String, StringValues>)
  nameWithType: HeaderDictionary.HeaderDictionary(Dictionary<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Collections.Generic.Dictionary<System.String, StringValues>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary(Dictionary<string, StringValues> store)
    parameters:
    - id: store
      type: System.Collections.Generic.Dictionary{System.String,StringValues}
    content.vb: Public Sub New(store As Dictionary(Of String, StringValues))
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor*
  nameWithType.vb: HeaderDictionary.HeaderDictionary(Dictionary(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Collections.Generic.Dictionary(Of System.String, StringValues))
  name.vb: HeaderDictionary(Dictionary(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary(Int32)
  nameWithType: HeaderDictionary.HeaderDictionary(Int32)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: HeaderDictionary.Item[String]
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGet or sets the associated value from the collection as a single string.\n"
  example: []
  syntax:
    content: public StringValues this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: StringValues
      description: the associated value from the collection as a StringValues or StringValues.Empty if the key is not present.
    content.vb: Public Property Item(key As String) As StringValues
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Item*
  nameWithType.vb: HeaderDictionary.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item(System.String)
  id: System#Collections#Generic#IDictionary{System#String,StringValues}#Item(System.String)
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IDictionary<String, StringValues>.Item[String]
  nameWithType: HeaderDictionary.IDictionary<String, StringValues>.Item[String]
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, StringValues>.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IDictionary<System.String,StringValues>.this[]
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nThrows KeyNotFoundException if the key is not present.\n"
  example: []
  syntax:
    content: StringValues IDictionary<string, StringValues>.this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: StringValues
      description: ''
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<System.String,StringValues>.Item(key As String) As StringValues Implements IDictionary(Of String, StringValues).this
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item*
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,StringValues>.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,StringValues>.Item(System.String)
  name.vb: System.Collections.Generic.IDictionary<System.String,StringValues>.Item(String)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Count
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Count
  id: Count
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HeaderDictionary.Count
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Count
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the number of elements contained in the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref>;.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: HeaderDictionary.IsReadOnly
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsReadOnly
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets a value that indicates whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> is in read-only mode.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> is in read-only mode; otherwise, false.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: HeaderDictionary.Keys
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Keys
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public ICollection<string> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Values
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Values
  id: Values
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: HeaderDictionary.Values
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Values
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public ICollection<StringValues> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{StringValues}
    content.vb: Public ReadOnly Property Values As ICollection(Of StringValues)
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Add(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair<System.String, StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAdds a new list of items to the collection.\n"
  example: []
  syntax:
    content: public void Add(KeyValuePair<string, StringValues> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,StringValues}
      description: The item to add.
    content.vb: Public Sub Add(item As KeyValuePair(Of String, StringValues))
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Add*
  nameWithType.vb: HeaderDictionary.Add(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair(Of System.String, StringValues))
  name.vb: Add(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,StringValues)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,StringValues)
  id: Add(System.String,StringValues)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Add(String, StringValues)
  nameWithType: HeaderDictionary.Add(String, StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String, StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 169
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAdds the given header and values to the collection.\n"
  example: []
  syntax:
    content: public void Add(string key, StringValues value)
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: StringValues
      description: The header values.
    content.vb: Public Sub Add(key As String, value As StringValues)
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HeaderDictionary.Clear()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Clear
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nClears the entire list of objects.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Contains(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair<System.String, StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Contains
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 196
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns a value indicating whether the specified object occurs within this collection.\n"
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<string, StringValues> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,StringValues}
      description: The item.
    return:
      type: System.Boolean
      description: true if the specified object occurs within this collection; otherwise, false.
    content.vb: Public Function Contains(item As KeyValuePair(Of String, StringValues)) As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Contains*
  nameWithType.vb: HeaderDictionary.Contains(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair(Of System.String, StringValues))
  name.vb: Contains(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: HeaderDictionary.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContainsKey
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nDetermines whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains a specific key; otherwise, false.
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,StringValues}[],System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,StringValues}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,StringValues}[],System.Int32)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<String, StringValues>[], Int32)
  nameWithType: HeaderDictionary.CopyTo(KeyValuePair<String, StringValues>[], Int32)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair<System.String, StringValues>[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: CopyTo
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCopies the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> elements to a one-dimensional Array instance at the specified index.\n"
  example: []
  syntax:
    content: public void CopyTo(KeyValuePair<string, StringValues>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,StringValues}[]
      description: The one-dimensional Array that is the destination of the specified objects copied from the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code data-dev-comment-type="paramref">array</code> at which copying begins.
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of String, StringValues)(), arrayIndex As Integer)
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo*
  nameWithType.vb: HeaderDictionary.CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, StringValues)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Remove(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair<System.String, StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Remove
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 246
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRemoves the given item from the the collection.\n"
  example: []
  syntax:
    content: public bool Remove(KeyValuePair<string, StringValues> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,StringValues}
      description: The item.
    return:
      type: System.Boolean
      description: true if the specified object was removed from the collection; otherwise, false.
    content.vb: Public Function Remove(item As KeyValuePair(Of String, StringValues)) As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Remove*
  nameWithType.vb: HeaderDictionary.Remove(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair(Of System.String, StringValues))
  name.vb: Remove(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: HeaderDictionary.Remove(String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Remove
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 267
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRemoves the given header from the collection.\n"
  example: []
  syntax:
    content: public bool Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: System.Boolean
      description: true if the specified object was removed from the collection; otherwise, false.
    content.vb: Public Function Remove(key As String) As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,StringValues@)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,StringValues@)
  id: TryGetValue(System.String,StringValues@)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out StringValues)
  nameWithType: HeaderDictionary.TryGetValue(String, out StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String, out StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryGetValue
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 282
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRetrieves a value from the dictionary.\n"
  example: []
  syntax:
    content: public bool TryGetValue(string key, out StringValues value)
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: StringValues
      description: The value.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains the key; otherwise, false.
    content.vb: Public Function TryGetValue(key As String, ByRef value As StringValues) As Boolean
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue*
  nameWithType.vb: HeaderDictionary.TryGetValue(String, ByRef StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String, ByRef StringValues)
  name.vb: TryGetValue(String, ByRef StringValues)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: HeaderDictionary.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 296
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: public HeaderDictionary.Enumerator GetEnumerator()
    return:
      type: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
      description: An <xref href="Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As HeaderDictionary.Enumerator
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  nameWithType: HeaderDictionary.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, StringValues>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 310
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, StringValues>> IEnumerable<KeyValuePair<string, StringValues>>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, StringValues)) Implements IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator*
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: HeaderDictionary.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 324
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*
  nameWithType.vb: HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  isExternal: false
  name: HeaderDictionary
  nameWithType: HeaderDictionary.HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary
- uid: System.Collections.Generic.Dictionary{System.String,StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Item*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Item
  isExternal: false
  name: Item
  nameWithType: HeaderDictionary.Item
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StringValues
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: StringValues
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,StringValues}#Item
  isExternal: false
  name: IDictionary<String, StringValues>.Item
  nameWithType: HeaderDictionary.IDictionary<String, StringValues>.Item
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, StringValues>.Item
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,StringValues>.Item
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,StringValues>.Item
  name.vb: System.Collections.Generic.IDictionary<System.String,StringValues>.Item
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  isExternal: false
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Count*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Count
  isExternal: false
  name: Count
  nameWithType: HeaderDictionary.Count
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Count
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: HeaderDictionary.IsReadOnly
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Keys*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  isExternal: false
  name: Keys
  nameWithType: HeaderDictionary.Keys
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Values*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Values
  isExternal: false
  name: Values
  nameWithType: HeaderDictionary.Values
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Values
- uid: System.Collections.Generic.ICollection{StringValues}
  commentId: T:System.Collections.Generic.ICollection{StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<StringValues>
  nameWithType: ICollection<StringValues>
  fullName: System.Collections.Generic.ICollection<StringValues>
  nameWithType.vb: ICollection(Of StringValues)
  fullName.vb: System.Collections.Generic.ICollection(Of StringValues)
  name.vb: ICollection(Of StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Add*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Add
  isExternal: false
  name: Add
  nameWithType: HeaderDictionary.Add
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Add
- uid: System.Collections.Generic.KeyValuePair{System.String,StringValues}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, StringValues>
  nameWithType: KeyValuePair<String, StringValues>
  fullName: System.Collections.Generic.KeyValuePair<System.String, StringValues>
  nameWithType.vb: KeyValuePair(Of String, StringValues)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, StringValues)
  name.vb: KeyValuePair(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Clear*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  isExternal: false
  name: Clear
  nameWithType: HeaderDictionary.Clear
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Clear
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Contains*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Contains
  isExternal: false
  name: Contains
  nameWithType: HeaderDictionary.Contains
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Contains
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey
  isExternal: false
  name: ContainsKey
  nameWithType: HeaderDictionary.ContainsKey
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: HeaderDictionary.CopyTo
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo
- uid: System.Collections.Generic.KeyValuePair{System.String,StringValues}[]
  name: KeyValuePair<String, StringValues>[]
  nameWithType: KeyValuePair<String, StringValues>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String, StringValues>[]
  nameWithType.vb: KeyValuePair(Of String, StringValues)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, StringValues)()
  name.vb: KeyValuePair(Of String, StringValues)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Remove*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.Remove
  isExternal: false
  name: Remove
  nameWithType: HeaderDictionary.Remove
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Remove
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: HeaderDictionary.TryGetValue
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HeaderDictionary.Enumerator
  nameWithType: HeaderDictionary.Enumerator
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: HeaderDictionary.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  isExternal: false
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
  nameWithType: HeaderDictionary.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, StringValues>>.GetEnumerator
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerator<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, StringValues>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, StringValues))
  name.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: HeaderDictionary.IEnumerable.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: HeaderDictionary.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
shouldSkipMarkup: true
