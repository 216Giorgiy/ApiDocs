### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  id: OAuthMiddleware`1
  parent: Microsoft.AspNetCore.Authentication.OAuth
  children:
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor(RequestDelegate,IDataProtectionProvider,ILoggerFactory,UrlEncoder,IOptions{SharedAuthenticationOptions},IOptions{`0})
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler
  langs:
  - csharp
  - vb
  name: OAuthMiddleware<TOptions>
  nameWithType: OAuthMiddleware<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OAuthMiddleware
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  summary: "\nAn ASP.NET Core middleware for authenticating users using OAuth services.\n"
  example: []
  syntax:
    content: 'public class OAuthMiddleware<TOptions> : AuthenticationMiddleware<TOptions> where TOptions : OAuthOptions, new ()'
    typeParameters:
    - id: TOptions
    content.vb: >-
      Public Class OAuthMiddleware(Of TOptions As {OAuthOptions, New})
          Inherits AuthenticationMiddleware(Of TOptions)
  inheritance:
  - System.Object
  nameWithType.vb: OAuthMiddleware(Of TOptions)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions)
  name.vb: OAuthMiddleware(Of TOptions)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor(RequestDelegate,IDataProtectionProvider,ILoggerFactory,UrlEncoder,IOptions{SharedAuthenticationOptions},IOptions{`0})
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor(RequestDelegate,IDataProtectionProvider,ILoggerFactory,UrlEncoder,IOptions{SharedAuthenticationOptions},IOptions{`0})
  id: '#ctor(RequestDelegate,IDataProtectionProvider,ILoggerFactory,UrlEncoder,IOptions{SharedAuthenticationOptions},IOptions{`0})'
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  langs:
  - csharp
  - vb
  name: OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions<SharedAuthenticationOptions>, IOptions<TOptions>)
  nameWithType: OAuthMiddleware<TOptions>.OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions<SharedAuthenticationOptions>, IOptions<TOptions>)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions<SharedAuthenticationOptions>, IOptions<TOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public OAuthMiddleware(RequestDelegate next, IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, UrlEncoder encoder, IOptions<SharedAuthenticationOptions> sharedOptions, IOptions<TOptions> options)
    parameters:
    - id: next
      type: RequestDelegate
      description: The next middleware in the HTTP pipeline to invoke.
    - id: dataProtectionProvider
      type: IDataProtectionProvider
      description: ''
    - id: loggerFactory
      type: ILoggerFactory
      description: ''
    - id: encoder
      type: UrlEncoder
      description: The <see cref="!:UrlEncoder"></see>.
    - id: sharedOptions
      type: IOptions{SharedAuthenticationOptions}
      description: The <see cref="!:SharedAuthenticationOptions"></see> configuration options for this middleware.
    - id: options
      type: IOptions{{TOptions}}
      description: Configuration options for the middleware.
    content.vb: Public Sub New(next As RequestDelegate, dataProtectionProvider As IDataProtectionProvider, loggerFactory As ILoggerFactory, encoder As UrlEncoder, sharedOptions As IOptions(Of SharedAuthenticationOptions), options As IOptions(Of TOptions))
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor*
  nameWithType.vb: OAuthMiddleware(Of TOptions).OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions(Of SharedAuthenticationOptions), IOptions(Of TOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions(Of SharedAuthenticationOptions), IOptions(Of TOptions))
  name.vb: OAuthMiddleware(RequestDelegate, IDataProtectionProvider, ILoggerFactory, UrlEncoder, IOptions(Of SharedAuthenticationOptions), IOptions(Of TOptions))
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel
  id: Backchannel
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  langs:
  - csharp
  - vb
  name: Backchannel
  nameWithType: OAuthMiddleware<TOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.Backchannel
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Backchannel
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected HttpClient Backchannel { get; }
    parameters: []
    return:
      type: HttpClient
    content.vb: Protected ReadOnly Property Backchannel As HttpClient
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel*
  nameWithType.vb: OAuthMiddleware(Of TOptions).Backchannel
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).Backchannel
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler
  id: CreateHandler
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  langs:
  - csharp
  - vb
  name: CreateHandler()
  nameWithType: OAuthMiddleware<TOptions>.CreateHandler()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.CreateHandler()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CreateHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthMiddleware.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  summary: "\nProvides the <see cref=\"!:AuthenticationHandler&lt;T>\"></see> object for processing authentication-related requests.\n"
  example: []
  syntax:
    content: protected override AuthenticationHandler<TOptions> CreateHandler()
    return:
      type: AuthenticationHandler{{TOptions}}
      description: An <see cref="!:AuthenticationHandler&lt;T>"></see> configured with the <xref href="Microsoft.AspNetCore.Builder.OAuthOptions" data-throw-if-not-resolved="false"></xref> supplied to the constructor.
    content.vb: Protected Overrides Function CreateHandler As AuthenticationHandler(Of TOptions)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler*
  nameWithType.vb: OAuthMiddleware(Of TOptions).CreateHandler()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).CreateHandler()
references:
- uid: Microsoft.AspNetCore.Authentication.OAuth
  commentId: N:Microsoft.AspNetCore.Authentication.OAuth
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.OAuth
  nameWithType: Microsoft.AspNetCore.Authentication.OAuth
  fullName: Microsoft.AspNetCore.Authentication.OAuth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
  isExternal: false
  name: OAuthMiddleware<TOptions>
  nameWithType: OAuthMiddleware<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>
  nameWithType.vb: OAuthMiddleware(Of TOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions)
  name.vb: OAuthMiddleware(Of TOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
    name: OAuthMiddleware
    nameWithType: OAuthMiddleware
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1
    name: OAuthMiddleware
    nameWithType: OAuthMiddleware
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.#ctor
  isExternal: false
  name: OAuthMiddleware
  nameWithType: OAuthMiddleware<TOptions>.OAuthMiddleware
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.OAuthMiddleware
  nameWithType.vb: OAuthMiddleware(Of TOptions).OAuthMiddleware
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).OAuthMiddleware
- uid: RequestDelegate
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: RequestDelegate
- uid: IDataProtectionProvider
  isExternal: true
  name: IDataProtectionProvider
  nameWithType: IDataProtectionProvider
  fullName: IDataProtectionProvider
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: UrlEncoder
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: UrlEncoder
- uid: IOptions{SharedAuthenticationOptions}
  commentId: '!:IOptions{SharedAuthenticationOptions}'
  definition: IOptions`1
  name: IOptions<SharedAuthenticationOptions>
  nameWithType: IOptions<SharedAuthenticationOptions>
  fullName: IOptions<SharedAuthenticationOptions>
  nameWithType.vb: IOptions(Of SharedAuthenticationOptions)
  fullName.vb: IOptions(Of SharedAuthenticationOptions)
  name.vb: IOptions(Of SharedAuthenticationOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharedAuthenticationOptions
    name: SharedAuthenticationOptions
    nameWithType: SharedAuthenticationOptions
    fullName: SharedAuthenticationOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharedAuthenticationOptions
    name: SharedAuthenticationOptions
    nameWithType: SharedAuthenticationOptions
    fullName: SharedAuthenticationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions{{TOptions}}
  commentId: '!:IOptions{`0}'
  definition: IOptions`1
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.Backchannel
  isExternal: false
  name: Backchannel
  nameWithType: OAuthMiddleware<TOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.Backchannel
  nameWithType.vb: OAuthMiddleware(Of TOptions).Backchannel
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).Backchannel
- uid: HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: HttpClient
- uid: Microsoft.AspNetCore.Builder.OAuthOptions
  commentId: T:Microsoft.AspNetCore.Builder.OAuthOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: OAuthOptions
  nameWithType: OAuthOptions
  fullName: Microsoft.AspNetCore.Builder.OAuthOptions
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware`1.CreateHandler
  isExternal: false
  name: CreateHandler
  nameWithType: OAuthMiddleware<TOptions>.CreateHandler
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware<TOptions>.CreateHandler
  nameWithType.vb: OAuthMiddleware(Of TOptions).CreateHandler
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthMiddleware(Of TOptions).CreateHandler
- uid: AuthenticationHandler{{TOptions}}
  commentId: '!:AuthenticationHandler{`0}'
  definition: AuthenticationHandler`1
  name: AuthenticationHandler<TOptions>
  nameWithType: AuthenticationHandler<TOptions>
  fullName: AuthenticationHandler<TOptions>
  nameWithType.vb: AuthenticationHandler(Of TOptions)
  fullName.vb: AuthenticationHandler(Of TOptions)
  name.vb: AuthenticationHandler(Of TOptions)
  spec.csharp:
  - uid: AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: AuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: AuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: AuthenticationHandler`1
  isExternal: true
  name: AuthenticationHandler<>
  nameWithType: AuthenticationHandler<>
  fullName: AuthenticationHandler<>
  nameWithType.vb: AuthenticationHandler(Of )
  fullName.vb: AuthenticationHandler(Of )
  name.vb: AuthenticationHandler(Of )
  spec.csharp:
  - uid: AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: AuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: AuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
