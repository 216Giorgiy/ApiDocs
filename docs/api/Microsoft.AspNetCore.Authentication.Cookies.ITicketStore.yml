### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  commentId: T:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  id: ITicketStore
  parent: Microsoft.AspNetCore.Authentication.Cookies
  children:
  - Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)
  - Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,AuthenticationTicket)
  - Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)
  - Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(AuthenticationTicket)
  langs:
  - csharp
  - vb
  name: ITicketStore
  nameWithType: ITicketStore
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ITicketStore
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Authentication.Cookies
  namespace: Microsoft.AspNetCore.Authentication.Cookies
  summary: "\nThis provides an abstract storage mechanic to preserve identity information on the server\nwhile only sending a simple identifier key to the client. This is most commonly used to mitigate\nissues with serializing large identities into cookies.\n"
  example: []
  syntax:
    content: public interface ITicketStore
    content.vb: Public Interface ITicketStore
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(AuthenticationTicket)
  commentId: M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(AuthenticationTicket)
  id: StoreAsync(AuthenticationTicket)
  parent: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  langs:
  - csharp
  - vb
  name: StoreAsync(AuthenticationTicket)
  nameWithType: ITicketStore.StoreAsync(AuthenticationTicket)
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(AuthenticationTicket)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: StoreAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Authentication.Cookies
  namespace: Microsoft.AspNetCore.Authentication.Cookies
  summary: "\nStore the identity ticket and return the associated key.\n"
  example: []
  syntax:
    content: Task<string> StoreAsync(AuthenticationTicket ticket)
    parameters:
    - id: ticket
      type: AuthenticationTicket
      description: The identity information to store.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The key that can be used to retrieve the identity later.
    content.vb: Function StoreAsync(ticket As AuthenticationTicket) As Task(Of String)
  overload: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync*
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,AuthenticationTicket)
  commentId: M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,AuthenticationTicket)
  id: RenewAsync(System.String,AuthenticationTicket)
  parent: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  langs:
  - csharp
  - vb
  name: RenewAsync(String, AuthenticationTicket)
  nameWithType: ITicketStore.RenewAsync(String, AuthenticationTicket)
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String, AuthenticationTicket)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RenewAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Authentication.Cookies
  namespace: Microsoft.AspNetCore.Authentication.Cookies
  summary: "\nTells the store that the given identity should be updated.\n"
  example: []
  syntax:
    content: Task RenewAsync(string key, AuthenticationTicket ticket)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: ticket
      type: AuthenticationTicket
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RenewAsync(key As String, ticket As AuthenticationTicket) As Task
  overload: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync*
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)
  id: RetrieveAsync(System.String)
  parent: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  langs:
  - csharp
  - vb
  name: RetrieveAsync(String)
  nameWithType: ITicketStore.RetrieveAsync(String)
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RetrieveAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Authentication.Cookies
  namespace: Microsoft.AspNetCore.Authentication.Cookies
  summary: "\nRetrieves an identity from the store for the given key.\n"
  example: []
  syntax:
    content: Task<AuthenticationTicket> RetrieveAsync(string key)
    parameters:
    - id: key
      type: System.String
      description: The key associated with the identity.
    return:
      type: System.Threading.Tasks.Task{AuthenticationTicket}
      description: The identity associated with the given key, or if not found.
    content.vb: Function RetrieveAsync(key As String) As Task(Of AuthenticationTicket)
  overload: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync*
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)
  id: RemoveAsync(System.String)
  parent: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore
  langs:
  - csharp
  - vb
  name: RemoveAsync(String)
  nameWithType: ITicketStore.RemoveAsync(String)
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RemoveAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.Cookies/ITicketStore.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication.Cookies
  namespace: Microsoft.AspNetCore.Authentication.Cookies
  summary: "\nRemove the identity associated with the given key.\n"
  example: []
  syntax:
    content: Task RemoveAsync(string key)
    parameters:
    - id: key
      type: System.String
      description: The key associated with the identity.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function RemoveAsync(key As String) As Task
  overload: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync*
references:
- uid: Microsoft.AspNetCore.Authentication.Cookies
  commentId: N:Microsoft.AspNetCore.Authentication.Cookies
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.Cookies
  nameWithType: Microsoft.AspNetCore.Authentication.Cookies
  fullName: Microsoft.AspNetCore.Authentication.Cookies
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync
  isExternal: false
  name: StoreAsync
  nameWithType: ITicketStore.StoreAsync
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync
- uid: AuthenticationTicket
  isExternal: true
  name: AuthenticationTicket
  nameWithType: AuthenticationTicket
  fullName: AuthenticationTicket
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync
  isExternal: false
  name: RenewAsync
  nameWithType: ITicketStore.RenewAsync
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync
  isExternal: false
  name: RetrieveAsync
  nameWithType: ITicketStore.RetrieveAsync
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync
- uid: System.Threading.Tasks.Task{AuthenticationTicket}
  commentId: T:System.Threading.Tasks.Task{AuthenticationTicket}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticationTicket>
  nameWithType: Task<AuthenticationTicket>
  fullName: System.Threading.Tasks.Task<AuthenticationTicket>
  nameWithType.vb: Task(Of AuthenticationTicket)
  fullName.vb: System.Threading.Tasks.Task(Of AuthenticationTicket)
  name.vb: Task(Of AuthenticationTicket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: AuthenticationTicket
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: AuthenticationTicket
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync
  isExternal: false
  name: RemoveAsync
  nameWithType: ITicketStore.RemoveAsync
  fullName: Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync
shouldSkipMarkup: true
