### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  id: CorsAuthorizationFilterFactory
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance(System.IServiceProvider)
  - Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
  - Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
  langs:
  - csharp
  - vb
  name: CorsAuthorizationFilterFactory
  nameWithType: CorsAuthorizationFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CorsAuthorizationFilterFactory
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nA filter factory which creates a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CorsAuthorizationFilterFactory : IFilterFactory, IOrderedFilter, IFilterMetadata'
    content.vb: >-
      Public Class CorsAuthorizationFilterFactory
          Implements IFilterFactory, IOrderedFilter, IFilterMetadata
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  - Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
  - Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  langs:
  - csharp
  - vb
  name: CorsAuthorizationFilterFactory(String)
  nameWithType: CorsAuthorizationFilterFactory.CorsAuthorizationFilterFactory(String)
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CorsAuthorizationFilterFactory(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CorsAuthorizationFilterFactory(string policyName)
    parameters:
    - id: policyName
      type: System.String
      description: Name used to fetch a CORS policy.
    content.vb: Public Sub New(policyName As String)
  overload: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
  commentId: P:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: CorsAuthorizationFilterFactory.Order
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Order
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nGets the order value for determining the order of execution of filters. Filters execute in\nascending numeric value of the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  remarks: "\n<p>\nFilters are executed in an ordering determined by an ascending sort of the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref> property.\n</p>\n<p>\nAsynchronous filters, such as <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter\" data-throw-if-not-resolved=\"false\"></xref>, surround the execution of subsequent\nfilters of the same filter kind. An asynchronous filter with a lower numeric <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will have its filter method, such as <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext%2cMicrosoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)\" data-throw-if-not-resolved=\"false\"></xref>,\nexecuted before that of a filter with a higher value of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nSynchronous filters, such as <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IActionFilter\" data-throw-if-not-resolved=\"false\"></xref>, have a before-method, such as\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)\" data-throw-if-not-resolved=\"false\"></xref>, and an after-method, such as\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)\" data-throw-if-not-resolved=\"false\"></xref>. A synchronous filter with a lower numeric <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will have its before-method executed before that of a filter with a higher value of\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>. During the after-stage of the filter, a synchronous filter with a lower\nnumeric <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref> value will have its after-method executed after that of a filter with a higher\nvalue of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nIf two filters have the same numeric value of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order\" data-throw-if-not-resolved=\"false\"></xref>, then their relative execution order\nis determined by the filter scope.\n</p>\n"
  example: []
  syntax:
    content: public int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Order As Integer
  overload: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order*
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
  commentId: P:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
  id: IsReusable
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  langs:
  - csharp
  - vb
  name: IsReusable
  nameWithType: CorsAuthorizationFilterFactory.IsReusable
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsReusable
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nGets a value that indicates if the result of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)\" data-throw-if-not-resolved=\"false\"></xref>\ncan be reused across requests.\n"
  example: []
  syntax:
    content: public bool IsReusable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReusable As Boolean
  overload: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable*
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance(System.IServiceProvider)
  id: CreateInstance(System.IServiceProvider)
  parent: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  langs:
  - csharp
  - vb
  name: CreateInstance(IServiceProvider)
  nameWithType: CorsAuthorizationFilterFactory.CreateInstance(IServiceProvider)
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateInstance
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Cors/Internal/CorsAuthorizationFilterFactory.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Cors
  namespace: Microsoft.AspNetCore.Mvc.Cors.Internal
  summary: "\nCreates an instance of the executable filter.\n"
  example: []
  syntax:
    content: public IFilterMetadata CreateInstance(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The request <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
      description: An instance of the executable filter.
    content.vb: Public Function CreateInstance(serviceProvider As IServiceProvider) As IFilterMetadata
  overload: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance*
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter
  isExternal: false
  name: CorsAuthorizationFilter
  nameWithType: CorsAuthorizationFilter
  fullName: Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Cors.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Cors.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Cors.Internal
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterFactory
  nameWithType: IFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
- uid: Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IOrderedFilter
  nameWithType: IOrderedFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
  isExternal: false
  name: CorsAuthorizationFilterFactory
  nameWithType: CorsAuthorizationFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.#ctor
  isExternal: false
  name: CorsAuthorizationFilterFactory
  nameWithType: CorsAuthorizationFilterFactory.CorsAuthorizationFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CorsAuthorizationFilterFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
  isExternal: false
  name: Order
  nameWithType: CorsAuthorizationFilterFactory.Order
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.Order
- uid: Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order
  parent: Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
  isExternal: false
  name: Order
  nameWithType: IOrderedFilter.Order
  fullName: Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
  isExternal: false
  name: IsReusable
  nameWithType: CorsAuthorizationFilterFactory.IsReusable
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.IsReusable
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  parent: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  isExternal: false
  name: IsReusable
  nameWithType: IFilterFactory.IsReusable
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: CorsAuthorizationFilterFactory.CreateInstance
  fullName: Microsoft.AspNetCore.Mvc.Cors.Internal.CorsAuthorizationFilterFactory.CreateInstance
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  parent: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  isExternal: true
  name: CreateInstance(IServiceProvider)
  nameWithType: IFilterFactory.CreateInstance(IServiceProvider)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
    name: CreateInstance
    nameWithType: IFilterFactory.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
    name: CreateInstance
    nameWithType: IFilterFactory.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
shouldSkipMarkup: true
