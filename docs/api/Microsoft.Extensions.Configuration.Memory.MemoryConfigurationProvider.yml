### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  id: MemoryConfigurationProvider
  parent: Microsoft.Extensions.Configuration.Memory
  children:
  - Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)
  - Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String,System.String)
  - Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator
  langs:
  - csharp
  - vb
  name: MemoryConfigurationProvider
  nameWithType: MemoryConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: MemoryConfigurationProvider
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration.Memory
  summary: "\nIn-memory implementation of <see cref=\"!:IConfigurationProvider\"></see>\n"
  example: []
  syntax:
    content: 'public class MemoryConfigurationProvider : ConfigurationProvider, IEnumerable<KeyValuePair<string, string>>'
    content.vb: >-
      Public Class MemoryConfigurationProvider
          Inherits ConfigurationProvider
          Implements IEnumerable(Of KeyValuePair(Of String, String))
  inheritance:
  - System.Object
  - Microsoft.Extensions.Configuration.ConfigurationProvider
  inheritedMembers:
  - Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  - Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  - Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable{System.String},System.String)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)
  commentId: M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)
  id: '#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)'
  parent: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  langs:
  - csharp
  - vb
  name: MemoryConfigurationProvider(MemoryConfigurationSource)
  nameWithType: MemoryConfigurationProvider.MemoryConfigurationProvider(MemoryConfigurationSource)
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.MemoryConfigurationProvider(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration.Memory
  summary: "\nInitialize a new instance from the source.\n"
  example: []
  syntax:
    content: public MemoryConfigurationProvider(MemoryConfigurationSource source)
    parameters:
    - id: source
      type: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource
      description: The source settings.
    content.vb: Public Sub New(source As MemoryConfigurationSource)
  overload: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String,System.String)
  commentId: M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  langs:
  - csharp
  - vb
  name: Add(String, String)
  nameWithType: MemoryConfigurationProvider.Add(String, String)
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Add
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration.Memory
  summary: "\nAdd a new key and value pair.\n"
  example: []
  syntax:
    content: public void Add(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: The configuration key.
    - id: value
      type: System.String
      description: The configuration value.
    content.vb: Public Sub Add(key As String, value As String)
  overload: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator
  commentId: M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: MemoryConfigurationProvider.GetEnumerator()
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: GetEnumerator
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration/MemoryConfigurationProvider.cs
    startLine: 52
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration.Memory
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<string, string>> GetEnumerator()
    return:
      type: IEnumerator{KeyValuePair{System.String,System.String}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String))
  overload: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.Memory
  commentId: N:Microsoft.Extensions.Configuration.Memory
  isExternal: false
  name: Microsoft.Extensions.Configuration.Memory
  nameWithType: Microsoft.Extensions.Configuration.Memory
  fullName: Microsoft.Extensions.Configuration.Memory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: ConfigurationProvider
  nameWithType: ConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  commentId: P:Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: Data
  nameWithType: ConfigurationProvider.Data
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Data
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: TryGet(String, String)
  nameWithType: ConfigurationProvider.TryGet(String, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
    name: TryGet
    nameWithType: ConfigurationProvider.TryGet
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
    name: TryGet
    nameWithType: ConfigurationProvider.TryGet
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: Set(String, String)
  nameWithType: ConfigurationProvider.Set(String, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
    name: Set
    nameWithType: ConfigurationProvider.Set
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
    name: Set
    nameWithType: ConfigurationProvider.Set
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: Load()
  nameWithType: ConfigurationProvider.Load()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
    name: Load
    nameWithType: ConfigurationProvider.Load
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
    name: Load
    nameWithType: ConfigurationProvider.Load
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable{System.String},System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable{System.String},System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: GetChildKeys(IEnumerable<String>, String)
  nameWithType: ConfigurationProvider.GetChildKeys(IEnumerable<String>, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable<System.String>, System.String)
  nameWithType.vb: ConfigurationProvider.GetChildKeys(IEnumerable(Of String), String)
  fullName.vb: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable(Of System.String), System.String)
  name.vb: GetChildKeys(IEnumerable(Of String), String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable{System.String},System.String)
    name: GetChildKeys
    nameWithType: ConfigurationProvider.GetChildKeys
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(IEnumerable{System.String},System.String)
    name: GetChildKeys
    nameWithType: ConfigurationProvider.GetChildKeys
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: GetReloadToken()
  nameWithType: ConfigurationProvider.GetReloadToken()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
    name: GetReloadToken
    nameWithType: ConfigurationProvider.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
    name: GetReloadToken
    nameWithType: ConfigurationProvider.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: OnReload()
  nameWithType: ConfigurationProvider.OnReload()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
    name: OnReload
    nameWithType: ConfigurationProvider.OnReload
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
    name: OnReload
    nameWithType: ConfigurationProvider.OnReload
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor*
  commentId: Overload:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor
  isExternal: false
  name: MemoryConfigurationProvider
  nameWithType: MemoryConfigurationProvider.MemoryConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.MemoryConfigurationProvider
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource
  parent: Microsoft.Extensions.Configuration.Memory
  isExternal: false
  name: MemoryConfigurationSource
  nameWithType: MemoryConfigurationSource
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add*
  commentId: Overload:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add
  isExternal: false
  name: Add
  nameWithType: MemoryConfigurationProvider.Add
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator*
  commentId: Overload:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: MemoryConfigurationProvider.GetEnumerator
  fullName: Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator
- uid: IEnumerator{KeyValuePair{System.String,System.String}}
  commentId: '!:IEnumerator{KeyValuePair{System.String,System.String}}'
  definition: IEnumerator`1
  name: IEnumerator<KeyValuePair<String, String>>
  nameWithType: IEnumerator<KeyValuePair<String, String>>
  fullName: IEnumerator<KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, String))
  fullName.vb: IEnumerator(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerator(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
