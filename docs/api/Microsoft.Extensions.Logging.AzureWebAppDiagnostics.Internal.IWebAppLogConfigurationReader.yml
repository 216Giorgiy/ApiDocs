### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  id: IWebAppLogConfigurationReader
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  children:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  langs:
  - csharp
  - vb
  name: IWebAppLogConfigurationReader
  nameWithType: IWebAppLogConfigurationReader
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: IWebAppLogConfigurationReader
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nThe contract for a WebApp configuration reader.\n"
  example: []
  syntax:
    content: 'public interface IWebAppLogConfigurationReader : IDisposable'
    content.vb: >-
      Public Interface IWebAppLogConfigurationReader
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  commentId: E:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  id: OnConfigurationChanged
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: OnConfigurationChanged
  nameWithType: IWebAppLogConfigurationReader.OnConfigurationChanged
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged
  type: Event
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: OnConfigurationChanged
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nTriggers when the configuration has changed.\n"
  example: []
  syntax:
    content: event EventHandler<WebAppLogConfiguration> OnConfigurationChanged
    content.vb: Event OnConfigurationChanged As EventHandler(Of WebAppLogConfiguration)
    return:
      type: System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  commentId: P:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  id: Current
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: IWebAppLogConfigurationReader.Current
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: Current
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/IWebAppLogConfigurationReader.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nThe current value of the configuration.\n"
  example: []
  syntax:
    content: WebAppLogConfiguration Current { get; }
    content.vb: ReadOnly Property Current As WebAppLogConfiguration
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  commentId: N:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  nameWithType: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
  commentId: T:System.EventHandler{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<WebAppLogConfiguration>
  nameWithType: EventHandler<WebAppLogConfiguration>
  fullName: System.EventHandler<Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration>
  nameWithType.vb: EventHandler(Of WebAppLogConfiguration)
  fullname.vb: System.EventHandler(Of Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration)
  name.vb: EventHandler(Of WebAppLogConfiguration)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: WebAppLogConfiguration
  nameWithType: WebAppLogConfiguration
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
