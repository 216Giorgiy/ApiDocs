### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker
  id: ControllerActionInvoker
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,ILogger,DiagnosticSource,ActionContext,System.Collections.Generic.IReadOnlyList{IValueProviderFactory},System.Int32)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync
  langs:
  - csharp
  - vb
  name: ControllerActionInvoker
  nameWithType: ControllerActionInvoker
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerActionInvoker
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: 'public class ControllerActionInvoker : IActionInvoker'
    content.vb: >-
      Public Class ControllerActionInvoker
          Inherits IActionInvoker
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,ILogger,DiagnosticSource,ActionContext,System.Collections.Generic.IReadOnlyList{IValueProviderFactory},System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,ILogger,DiagnosticSource,ActionContext,System.Collections.Generic.IReadOnlyList{IValueProviderFactory},System.Int32)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache,Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory,Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder,ILogger,DiagnosticSource,ActionContext,System.Collections.Generic.IReadOnlyList{IValueProviderFactory},System.Int32)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker
  langs:
  - csharp
  - vb
  name: ControllerActionInvoker(ControllerActionInvokerCache, IControllerFactory, IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, IReadOnlyList<IValueProviderFactory>, Int32)
  nameWithType: ControllerActionInvoker.ControllerActionInvoker(ControllerActionInvokerCache, IControllerFactory, IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, IReadOnlyList<IValueProviderFactory>, Int32)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.ControllerActionInvoker(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache, Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory, Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, System.Collections.Generic.IReadOnlyList<IValueProviderFactory>, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public ControllerActionInvoker(ControllerActionInvokerCache cache, IControllerFactory controllerFactory, IControllerArgumentBinder controllerArgumentBinder, ILogger logger, DiagnosticSource diagnosticSource, ActionContext actionContext, IReadOnlyList<IValueProviderFactory> valueProviderFactories, int maxModelValidationErrors)
    parameters:
    - id: cache
      type: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
    - id: controllerFactory
      type: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
    - id: controllerArgumentBinder
      type: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
    - id: logger
      type: ILogger
    - id: diagnosticSource
      type: DiagnosticSource
    - id: actionContext
      type: ActionContext
    - id: valueProviderFactories
      type: System.Collections.Generic.IReadOnlyList{IValueProviderFactory}
    - id: maxModelValidationErrors
      type: System.Int32
    content.vb: Public Sub New(cache As ControllerActionInvokerCache, controllerFactory As IControllerFactory, controllerArgumentBinder As IControllerArgumentBinder, logger As ILogger, diagnosticSource As DiagnosticSource, actionContext As ActionContext, valueProviderFactories As IReadOnlyList(Of IValueProviderFactory), maxModelValidationErrors As Integer)
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor*
  nameWithType.vb: ControllerActionInvoker.ControllerActionInvoker(ControllerActionInvokerCache, IControllerFactory, IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, IReadOnlyList(Of IValueProviderFactory), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.ControllerActionInvoker(Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache, Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory, Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, System.Collections.Generic.IReadOnlyList(Of IValueProviderFactory), System.Int32)
  name.vb: ControllerActionInvoker(ControllerActionInvokerCache, IControllerFactory, IControllerArgumentBinder, ILogger, DiagnosticSource, ActionContext, IReadOnlyList(Of IValueProviderFactory), Int32)
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync
  id: InvokeAsync
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker
  langs:
  - csharp
  - vb
  name: InvokeAsync()
  nameWithType: ControllerActionInvoker.InvokeAsync()
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InvokeAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvoker.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public virtual Task InvokeAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function InvokeAsync As Task
  overload: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.#ctor
  isExternal: false
  name: ControllerActionInvoker
  nameWithType: ControllerActionInvoker.ControllerActionInvoker
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.ControllerActionInvoker
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: ControllerActionInvokerCache
  nameWithType: ControllerActionInvokerCache
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: IControllerFactory
  nameWithType: IControllerFactory
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
- uid: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IControllerArgumentBinder
  nameWithType: IControllerArgumentBinder
  fullName: Microsoft.AspNetCore.Mvc.Internal.IControllerArgumentBinder
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: DiagnosticSource
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: DiagnosticSource
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Collections.Generic.IReadOnlyList{IValueProviderFactory}
  commentId: T:System.Collections.Generic.IReadOnlyList{IValueProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IValueProviderFactory>
  nameWithType: IReadOnlyList<IValueProviderFactory>
  fullName: System.Collections.Generic.IReadOnlyList<IValueProviderFactory>
  nameWithType.vb: IReadOnlyList(Of IValueProviderFactory)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of IValueProviderFactory)
  name.vb: IReadOnlyList(Of IValueProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: IValueProviderFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: IValueProviderFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync
  isExternal: false
  name: InvokeAsync
  nameWithType: ControllerActionInvoker.InvokeAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
