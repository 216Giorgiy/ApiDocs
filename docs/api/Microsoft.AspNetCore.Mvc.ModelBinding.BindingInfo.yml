### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  id: BindingInfo
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
  langs:
  - csharp
  - vb
  name: BindingInfo
  nameWithType: BindingInfo
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BindingInfo
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nBinding info which represents metadata associated to an action parameter.\n"
  example: []
  syntax:
    content: public class BindingInfo
    content.vb: Public Class BindingInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: BindingInfo()
  nameWithType: BindingInfo.BindingInfo()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingInfo()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BindingInfo()
    content.vb: Public Sub New
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: BindingInfo(BindingInfo)
  nameWithType: BindingInfo.BindingInfo(BindingInfo)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingInfo(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a copy of a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BindingInfo(BindingInfo other)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" data-throw-if-not-resolved="false"></xref> to copy.
    content.vb: Public Sub New(other As BindingInfo)
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
  id: BindingSource
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: BindingSource
  nameWithType: BindingInfo.BindingSource
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BindingSource
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BindingSource BindingSource { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    content.vb: Public Property BindingSource As BindingSource
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
  id: BinderModelName
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: BinderModelName
  nameWithType: BindingInfo.BinderModelName
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BinderModelName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the binder model name.\n"
  example: []
  syntax:
    content: public string BinderModelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BinderModelName As String
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
  id: BinderType
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: BinderType
  nameWithType: BindingInfo.BinderType
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BinderType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the model binder used to bind the model.\n"
  example: []
  syntax:
    content: public Type BinderType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property BinderType As Type
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
  id: PropertyFilterProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: PropertyFilterProvider
  nameWithType: BindingInfo.PropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyFilterProvider
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IPropertyFilterProvider PropertyFilterProvider { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
    content.vb: Public Property PropertyFilterProvider As IPropertyFilterProvider
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable{System.Object})
  id: GetBindingInfo(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  langs:
  - csharp
  - vb
  name: GetBindingInfo(IEnumerable<Object>)
  nameWithType: BindingInfo.GetBindingInfo(IEnumerable<Object>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetBindingInfo
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nConstructs a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo\" data-throw-if-not-resolved=\"false\"></xref> from the given <span class=\"paramref\">attributes</span>.\n"
  example: []
  syntax:
    content: public static BindingInfo GetBindingInfo(IEnumerable<object> attributes)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: >
        A collection of attributes which are used to construct <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
      description: A new instance of <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetBindingInfo(attributes As IEnumerable(Of Object)) As BindingInfo
  overload: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo*
  nameWithType.vb: BindingInfo.GetBindingInfo(IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: GetBindingInfo(IEnumerable(Of Object))
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: BindingInfo
  nameWithType: BindingInfo
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.#ctor
  isExternal: false
  name: BindingInfo
  nameWithType: BindingInfo.BindingInfo
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingInfo
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: BindingSource
  nameWithType: BindingSource
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
  isExternal: false
  name: BindingSource
  nameWithType: BindingInfo.BindingSource
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
  isExternal: false
  name: BinderModelName
  nameWithType: BindingInfo.BinderModelName
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
  isExternal: false
  name: BinderType
  nameWithType: BindingInfo.BinderType
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IPropertyFilterProvider
  nameWithType: IPropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
  isExternal: false
  name: PropertyFilterProvider
  nameWithType: BindingInfo.PropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo*
  commentId: Overload:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo
  isExternal: false
  name: GetBindingInfo
  nameWithType: BindingInfo.GetBindingInfo
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
