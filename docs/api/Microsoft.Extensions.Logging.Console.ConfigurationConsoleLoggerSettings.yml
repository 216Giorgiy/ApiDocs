### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  id: ConfigurationConsoleLoggerSettings
  parent: Microsoft.Extensions.Logging.Console
  children:
  - Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(IConfiguration)
  - Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
  - Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
  - Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload
  - Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  langs:
  - csharp
  - vb
  name: ConfigurationConsoleLoggerSettings
  nameWithType: ConfigurationConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ConfigurationConsoleLoggerSettings
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: 'public class ConfigurationConsoleLoggerSettings : IConsoleLoggerSettings'
    content.vb: >-
      Public Class ConfigurationConsoleLoggerSettings
          Implements IConsoleLoggerSettings
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(IConfiguration)
  commentId: M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(IConfiguration)
  id: '#ctor(IConfiguration)'
  parent: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: ConfigurationConsoleLoggerSettings(IConfiguration)
  nameWithType: ConfigurationConsoleLoggerSettings.ConfigurationConsoleLoggerSettings(IConfiguration)
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ConfigurationConsoleLoggerSettings(IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public ConfigurationConsoleLoggerSettings(IConfiguration configuration)
    parameters:
    - id: configuration
      type: IConfiguration
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
  commentId: P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
  id: ChangeToken
  parent: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: ChangeToken
  nameWithType: ConfigurationConsoleLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ChangeToken
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public IChangeToken ChangeToken { get; }
    parameters: []
    return:
      type: IChangeToken
    content.vb: Public ReadOnly Property ChangeToken As IChangeToken
  overload: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken*
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
  commentId: P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
  id: IncludeScopes
  parent: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: IncludeScopes
  nameWithType: ConfigurationConsoleLoggerSettings.IncludeScopes
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: IncludeScopes
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public bool IncludeScopes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IncludeScopes As Boolean
  overload: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes*
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload
  commentId: M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload
  id: Reload
  parent: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: ConfigurationConsoleLoggerSettings.Reload()
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Reload
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public IConsoleLoggerSettings Reload()
    return:
      type: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    content.vb: Public Function Reload As IConsoleLoggerSettings
  overload: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload*
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  commentId: M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  id: TryGetSwitch(System.String,System.LogLevel@)
  parent: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: TryGetSwitch(String, out LogLevel)
  nameWithType: ConfigurationConsoleLoggerSettings.TryGetSwitch(String, out LogLevel)
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String, out System.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: TryGetSwitch
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Console/ConfigurationConsoleLoggerSettings.cs
    startLine: 49
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public bool TryGetSwitch(string name, out LogLevel level)
    parameters:
    - id: name
      type: System.String
    - id: level
      type: System.LogLevel
    return:
      type: System.Boolean
    content.vb: Public Function TryGetSwitch(name As String, ByRef level As LogLevel) As Boolean
  overload: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch*
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  nameWithType.vb: ConfigurationConsoleLoggerSettings.TryGetSwitch(String, ByRef LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String, ByRef System.LogLevel)
  name.vb: TryGetSwitch(String, ByRef LogLevel)
references:
- uid: Microsoft.Extensions.Logging.Console
  commentId: N:Microsoft.Extensions.Logging.Console
  isExternal: false
  name: Microsoft.Extensions.Logging.Console
  nameWithType: Microsoft.Extensions.Logging.Console
  fullName: Microsoft.Extensions.Logging.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  parent: Microsoft.Extensions.Logging.Console
  isExternal: false
  name: IConsoleLoggerSettings
  nameWithType: IConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor
  isExternal: false
  name: ConfigurationConsoleLoggerSettings
  nameWithType: ConfigurationConsoleLoggerSettings.ConfigurationConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ConfigurationConsoleLoggerSettings
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
  isExternal: false
  name: ChangeToken
  nameWithType: ConfigurationConsoleLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  commentId: P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: ChangeToken
  nameWithType: IConsoleLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
- uid: IChangeToken
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: IChangeToken
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
  isExternal: false
  name: IncludeScopes
  nameWithType: ConfigurationConsoleLoggerSettings.IncludeScopes
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  commentId: P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: IncludeScopes
  nameWithType: IConsoleLoggerSettings.IncludeScopes
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload
  isExternal: false
  name: Reload
  nameWithType: ConfigurationConsoleLoggerSettings.Reload
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  commentId: M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: Reload()
  nameWithType: IConsoleLoggerSettings.Reload()
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
    name: Reload
    nameWithType: IConsoleLoggerSettings.Reload
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
    name: Reload
    nameWithType: IConsoleLoggerSettings.Reload
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch*
  commentId: Overload:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch
  isExternal: false
  name: TryGetSwitch
  nameWithType: ConfigurationConsoleLoggerSettings.TryGetSwitch
  fullName: Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  commentId: M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: true
  name: TryGetSwitch(String, LogLevel)
  nameWithType: IConsoleLoggerSettings.TryGetSwitch(String, LogLevel)
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String, System.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
    name: TryGetSwitch
    nameWithType: IConsoleLoggerSettings.TryGetSwitch
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: System.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,System.LogLevel@)
    name: TryGetSwitch
    nameWithType: IConsoleLoggerSettings.TryGetSwitch
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: System.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.LogLevel
  commentId: T:System.LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: System.LogLevel
shouldSkipMarkup: true
