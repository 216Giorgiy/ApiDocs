### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  id: ClassWithOptionalArgsCtor
  parent: Microsoft.Extensions.DependencyInjection.Specification
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  - Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  langs:
  - csharp
  - vb
  name: ClassWithOptionalArgsCtor
  nameWithType: ClassWithOptionalArgsCtor
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ClassWithOptionalArgsCtor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: public class ClassWithOptionalArgsCtor
    content.vb: Public Class ClassWithOptionalArgsCtor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  langs:
  - csharp
  - vb
  name: ClassWithOptionalArgsCtor(String)
  nameWithType: ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor(String)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: public ClassWithOptionalArgsCtor(string whatever = "BLARGH")
    content.vb: Public Sub New(whatever As String = "BLARGH")
    parameters:
    - id: whatever
      type: System.String
  overload: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  id: Whatever
  parent: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  langs:
  - csharp
  - vb
  name: Whatever
  nameWithType: ClassWithOptionalArgsCtor.Whatever
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Whatever
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: public string Whatever { get; set; }
    content.vb: Public Property Whatever As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification
  fullName: Microsoft.Extensions.DependencyInjection.Specification
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor
  isExternal: false
  name: ClassWithOptionalArgsCtor
  nameWithType: ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  isExternal: false
  name: Whatever
  nameWithType: ClassWithOptionalArgsCtor.Whatever
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
shouldSkipMarkup: true
