### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  id: ClassWithOptionalArgsCtor
  parent: Microsoft.Extensions.DependencyInjection.Specification
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  - Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  langs:
  - csharp
  - vb
  name: ClassWithOptionalArgsCtor
  nameWithType: ClassWithOptionalArgsCtor
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ClassWithOptionalArgsCtor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: 'public class ClassWithOptionalArgsCtor : object'
    content.vb: >-
      Public Class ClassWithOptionalArgsCtor
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  langs:
  - csharp
  - vb
  name: ClassWithOptionalArgsCtor(String)
  nameWithType: ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor(String)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: public ClassWithOptionalArgsCtor(string whatever = "BLARGH")
    parameters:
    - id: whatever
      type: System.String
    content.vb: Public Sub New(whatever As String = "BLARGH")
  overload: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  id: Whatever
  parent: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor
  langs:
  - csharp
  - vb
  name: Whatever
  nameWithType: ClassWithOptionalArgsCtor.Whatever
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Whatever
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithOptionalArgsCtor.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification
  syntax:
    content: public string Whatever { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Whatever As String
  overload: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification
  fullName: Microsoft.Extensions.DependencyInjection.Specification
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor
  isExternal: false
  name: ClassWithOptionalArgsCtor
  nameWithType: ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.ClassWithOptionalArgsCtor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
  isExternal: false
  name: Whatever
  nameWithType: ClassWithOptionalArgsCtor.Whatever
  fullName: Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever
shouldSkipMarkup: true
