### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  commentId: T:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  id: StringTokenizer.Enumerator
  parent: Microsoft.Extensions.Primitives
  children:
  - Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)
  - Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
  - Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose
  - Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext
  - Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset
  langs:
  - csharp
  - vb
  name: StringTokenizer.Enumerator
  nameWithType: StringTokenizer.Enumerator
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  type: Struct
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Enumerator
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 44
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: 'public struct Enumerator : IEnumerator<StringSegment>'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of StringSegment)
  implements:
  - IEnumerator{Microsoft.Extensions.Primitives.StringSegment}
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)
  id: '#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)'
  parent: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  langs:
  - csharp
  - vb
  name: Enumerator(ref StringTokenizer)
  nameWithType: StringTokenizer.Enumerator.Enumerator(ref StringTokenizer)
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Enumerator(ref Microsoft.Extensions.Primitives.StringTokenizer)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public Enumerator(ref StringTokenizer tokenizer)
    parameters:
    - id: tokenizer
      type: Microsoft.Extensions.Primitives.StringTokenizer
    content.vb: Public Sub New(ByRef tokenizer As StringTokenizer)
  overload: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor*
  nameWithType.vb: StringTokenizer.Enumerator.Enumerator(ByRef StringTokenizer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Enumerator(ByRef Microsoft.Extensions.Primitives.StringTokenizer)
  name.vb: Enumerator(ByRef StringTokenizer)
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
  commentId: P:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
  id: Current
  parent: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: StringTokenizer.Enumerator.Current
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Current
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 58
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public StringSegment Current { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
    content.vb: Public ReadOnly Property Current As StringSegment
  overload: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: StringTokenizer.Enumerator.Dispose()
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Dispose
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 62
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext
  id: MoveNext
  parent: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: StringTokenizer.Enumerator.MoveNext()
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: MoveNext
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 66
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset
  id: Reset
  parent: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: StringTokenizer.Enumerator.Reset()
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Reset
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 87
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: IEnumerator{Microsoft.Extensions.Primitives.StringSegment}
  commentId: '!:IEnumerator{Microsoft.Extensions.Primitives.StringSegment}'
  definition: IEnumerator`1
  name: IEnumerator<StringSegment>
  nameWithType: IEnumerator<StringSegment>
  fullName: IEnumerator<Microsoft.Extensions.Primitives.StringSegment>
  nameWithType.vb: IEnumerator(Of StringSegment)
  fullName.vb: IEnumerator(Of Microsoft.Extensions.Primitives.StringSegment)
  name.vb: IEnumerator(Of StringSegment)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor
  isExternal: false
  name: Enumerator
  nameWithType: StringTokenizer.Enumerator.Enumerator
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Enumerator
- uid: Microsoft.Extensions.Primitives.StringTokenizer
  commentId: T:Microsoft.Extensions.Primitives.StringTokenizer
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringTokenizer
  nameWithType: StringTokenizer
  fullName: Microsoft.Extensions.Primitives.StringTokenizer
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
  isExternal: false
  name: Current
  nameWithType: StringTokenizer.Enumerator.Current
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current
- uid: Microsoft.Extensions.Primitives.StringSegment
  commentId: T:Microsoft.Extensions.Primitives.StringSegment
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringSegment
  nameWithType: StringSegment
  fullName: Microsoft.Extensions.Primitives.StringSegment
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose
  isExternal: false
  name: Dispose
  nameWithType: StringTokenizer.Enumerator.Dispose
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext
  isExternal: false
  name: MoveNext
  nameWithType: StringTokenizer.Enumerator.MoveNext
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset
  isExternal: false
  name: Reset
  nameWithType: StringTokenizer.Enumerator.Reset
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset
shouldSkipMarkup: true
