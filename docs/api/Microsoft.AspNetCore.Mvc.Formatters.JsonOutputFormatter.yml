### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  id: JsonOutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor(JsonSerializerSettings,ArrayPool{System.Char})
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(System.IO.TextWriter,System.Object)
  - Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext,System.Text.Encoding)
  langs:
  - csharp
  - vb
  name: JsonOutputFormatter
  nameWithType: JsonOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: JsonOutputFormatter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nA <see cref=\"!:TextOutputFormatter\"></see> for JSON content.\n"
  example: []
  syntax:
    content: 'public class JsonOutputFormatter : TextOutputFormatter'
    content.vb: >-
      Public Class JsonOutputFormatter
          Inherits TextOutputFormatter
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor(JsonSerializerSettings,ArrayPool{System.Char})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor(JsonSerializerSettings,ArrayPool{System.Char})
  id: '#ctor(JsonSerializerSettings,ArrayPool{System.Char})'
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: JsonOutputFormatter(JsonSerializerSettings, ArrayPool<Char>)
  nameWithType: JsonOutputFormatter.JsonOutputFormatter(JsonSerializerSettings, ArrayPool<Char>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.JsonOutputFormatter(JsonSerializerSettings, ArrayPool<System.Char>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public JsonOutputFormatter(JsonSerializerSettings serializerSettings, ArrayPool<char> charPool)
    parameters:
    - id: serializerSettings
      type: JsonSerializerSettings
      description: "\nThe <see cref=\"!:JsonSerializerSettings\"></see>. Should be either the application-wide settings\n(<xref href=\"Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings\" data-throw-if-not-resolved=\"false\"></xref>) or an instance\n<xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> initially returned.\n"
    - id: charPool
      type: ArrayPool{System.Char}
      description: The <see cref="!:ArrayPool&lt;Char>"></see>.
    content.vb: Public Sub New(serializerSettings As JsonSerializerSettings, charPool As ArrayPool(Of Char))
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor*
  nameWithType.vb: JsonOutputFormatter.JsonOutputFormatter(JsonSerializerSettings, ArrayPool(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.JsonOutputFormatter(JsonSerializerSettings, ArrayPool(Of System.Char))
  name.vb: JsonOutputFormatter(JsonSerializerSettings, ArrayPool(Of Char))
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
  id: SerializerSettings
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: SerializerSettings
  nameWithType: JsonOutputFormatter.SerializerSettings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializerSettings
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the <see cref=\"!:JsonSerializerSettings\"></see> used to configure the <see cref=\"!:JsonSerializer\"></see>.\n"
  remarks: "\nAny modifications to the <see cref=\"!:JsonSerializerSettings\"></see> object after this\n<xref href=\"Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter\" data-throw-if-not-resolved=\"false\"></xref> has been used will have no effect.\n"
  example: []
  syntax:
    content: protected JsonSerializerSettings SerializerSettings { get; }
    parameters: []
    return:
      type: JsonSerializerSettings
    content.vb: Protected ReadOnly Property SerializerSettings As JsonSerializerSettings
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(System.IO.TextWriter,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(System.IO.TextWriter,System.Object)
  id: WriteObject(System.IO.TextWriter,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: WriteObject(TextWriter, Object)
  nameWithType: JsonOutputFormatter.WriteObject(TextWriter, Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(System.IO.TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteObject
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nWrites the given <span class=\"paramref\">value</span> as JSON using the given\n<span class=\"paramref\">writer</span>.\n"
  example: []
  syntax:
    content: public void WriteObject(TextWriter writer, object value)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> used to write the <span class="paramref">value</span>
    - id: value
      type: System.Object
      description: The value to write as JSON.
    content.vb: Public Sub WriteObject(writer As TextWriter, value As Object)
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)
  id: CreateJsonWriter(System.IO.TextWriter)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: CreateJsonWriter(TextWriter)
  nameWithType: JsonOutputFormatter.CreateJsonWriter(TextWriter)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateJsonWriter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nCalled during serialization to create the <see cref=\"!:JsonWriter\"></see>.\n"
  example: []
  syntax:
    content: protected virtual JsonWriter CreateJsonWriter(TextWriter writer)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> used to write.
    return:
      type: JsonWriter
      description: The <see cref="!:JsonWriter"></see> used during serialization.
    content.vb: Protected Overridable Function CreateJsonWriter(writer As TextWriter) As JsonWriter
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer
  id: CreateJsonSerializer
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: CreateJsonSerializer()
  nameWithType: JsonOutputFormatter.CreateJsonSerializer()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateJsonSerializer
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nCalled during serialization to create the <see cref=\"!:JsonSerializer\"></see>.\n"
  example: []
  syntax:
    content: protected virtual JsonSerializer CreateJsonSerializer()
    return:
      type: JsonSerializer
      description: The <see cref="!:JsonSerializer"></see> used during serialization and deserialization.
    content.vb: Protected Overridable Function CreateJsonSerializer As JsonSerializer
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext,System.Text.Encoding)
  id: WriteResponseBodyAsync(OutputFormatterWriteContext,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  langs:
  - csharp
  - vb
  name: WriteResponseBodyAsync(OutputFormatterWriteContext, Encoding)
  nameWithType: JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteResponseBodyAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonOutputFormatter.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public override Task WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
    parameters:
    - id: context
      type: OutputFormatterWriteContext
    - id: selectedEncoding
      type: System.Text.Encoding
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function WriteResponseBodyAsync(context As OutputFormatterWriteContext, selectedEncoding As Encoding) As Task
  overload: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
  isExternal: false
  name: JsonOutputFormatter
  nameWithType: JsonOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter
- uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings
  commentId: P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor
  isExternal: false
  name: JsonOutputFormatter
  nameWithType: JsonOutputFormatter.JsonOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.JsonOutputFormatter
- uid: JsonSerializerSettings
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: JsonSerializerSettings
- uid: ArrayPool{System.Char}
  commentId: '!:ArrayPool{System.Char}'
  definition: ArrayPool`1
  name: ArrayPool<Char>
  nameWithType: ArrayPool<Char>
  fullName: ArrayPool<System.Char>
  nameWithType.vb: ArrayPool(Of Char)
  fullName.vb: ArrayPool(Of System.Char)
  name.vb: ArrayPool(Of Char)
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArrayPool`1
  isExternal: true
  name: ArrayPool<>
  nameWithType: ArrayPool<>
  fullName: ArrayPool<>
  nameWithType.vb: ArrayPool(Of )
  fullName.vb: ArrayPool(Of )
  name.vb: ArrayPool(Of )
  spec.csharp:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
  isExternal: false
  name: SerializerSettings
  nameWithType: JsonOutputFormatter.SerializerSettings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject
  isExternal: false
  name: WriteObject
  nameWithType: JsonOutputFormatter.WriteObject
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter
  isExternal: false
  name: CreateJsonWriter
  nameWithType: JsonOutputFormatter.CreateJsonWriter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter
- uid: JsonWriter
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: JsonWriter
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer
  isExternal: false
  name: CreateJsonSerializer
  nameWithType: JsonOutputFormatter.CreateJsonSerializer
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer
- uid: JsonSerializer
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: JsonSerializer
- uid: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync
  isExternal: false
  name: WriteResponseBodyAsync
  nameWithType: JsonOutputFormatter.WriteResponseBodyAsync
  fullName: Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync
- uid: OutputFormatterWriteContext
  isExternal: true
  name: OutputFormatterWriteContext
  nameWithType: OutputFormatterWriteContext
  fullName: OutputFormatterWriteContext
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
shouldSkipMarkup: true
