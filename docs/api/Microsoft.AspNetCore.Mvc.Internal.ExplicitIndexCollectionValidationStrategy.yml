### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  id: ExplicitIndexCollectionValidationStrategy
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
  - Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren(ModelMetadata,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ExplicitIndexCollectionValidationStrategy
  nameWithType: ExplicitIndexCollectionValidationStrategy
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExplicitIndexCollectionValidationStrategy
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nAn implementation of <see cref=\"!:IValidationStrategy\"></see> for a collection bound using &apos;explict indexing&apos;\nstyle keys.\n"
  remarks: "\nThis implemenation handles cases like:\n<example>\n    Model: IList&lt;Student> \n    Query String: ?students.index=Joey,Katherine&amp;students[Joey].Age=8&amp;students[Katherine].Age=9\n\n    In this case, &apos;Joey&apos; and &apos;Katherine&apos; need to be used in the model prefix keys, but cannot be inferred\n    form inspecting the collection. These prefixes are captured during model binding, and mapped to \n    the corresponding ordinal index of a model object in the collection. The enumerator returned from this\n    class will yield two &apos;Student&apos; objects with corresponding keys &apos;students[Joey]&apos; and &apos;students[Katherine]&apos;.\n</example>\n\nUsing this key format, the enumerator enumerates model objects of type matching\n<see cref=\"!:ModelMetadata.ElementMetadata\"></see>. The keys captured during model binding are mapped to the elements\nin the collection to compute the model prefix keys.\n"
  example: []
  syntax:
    content: 'public class ExplicitIndexCollectionValidationStrategy : IValidationStrategy'
    content.vb: >-
      Public Class ExplicitIndexCollectionValidationStrategy
          Inherits IValidationStrategy
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  langs:
  - csharp
  - vb
  name: ExplicitIndexCollectionValidationStrategy(IEnumerable<String>)
  nameWithType: ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy(IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ExplicitIndexCollectionValidationStrategy(IEnumerable<string> elementKeys)
    parameters:
    - id: elementKeys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The keys of collection elements that were used during model binding.
    content.vb: Public Sub New(elementKeys As IEnumerable(Of String))
  overload: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor*
  nameWithType.vb: ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ExplicitIndexCollectionValidationStrategy(IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
  id: ElementKeys
  parent: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  langs:
  - csharp
  - vb
  name: ElementKeys
  nameWithType: ExplicitIndexCollectionValidationStrategy.ElementKeys
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ElementKeys
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the keys of collection elements that were used during model binding.\n"
  example: []
  syntax:
    content: public IEnumerable<string> ElementKeys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property ElementKeys As IEnumerable(Of String)
  overload: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren(ModelMetadata,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren(ModelMetadata,System.String,System.Object)
  id: GetChildren(ModelMetadata,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  langs:
  - csharp
  - vb
  name: GetChildren(ModelMetadata, String, Object)
  nameWithType: ExplicitIndexCollectionValidationStrategy.GetChildren(ModelMetadata, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren(ModelMetadata, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetChildren
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ExplicitIndexCollectionValidationStrategy.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public IEnumerator<ValidationEntry> GetChildren(ModelMetadata metadata, string key, object model)
    parameters:
    - id: metadata
      type: ModelMetadata
    - id: key
      type: System.String
    - id: model
      type: System.Object
    return:
      type: System.Collections.Generic.IEnumerator{ValidationEntry}
    content.vb: Public Function GetChildren(metadata As ModelMetadata, key As String, model As Object) As IEnumerator(Of ValidationEntry)
  overload: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
  isExternal: false
  name: ExplicitIndexCollectionValidationStrategy
  nameWithType: ExplicitIndexCollectionValidationStrategy
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.#ctor
  isExternal: false
  name: ExplicitIndexCollectionValidationStrategy
  nameWithType: ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ExplicitIndexCollectionValidationStrategy
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
  isExternal: false
  name: ElementKeys
  nameWithType: ExplicitIndexCollectionValidationStrategy.ElementKeys
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.ElementKeys
- uid: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren
  isExternal: false
  name: GetChildren
  nameWithType: ExplicitIndexCollectionValidationStrategy.GetChildren
  fullName: Microsoft.AspNetCore.Mvc.Internal.ExplicitIndexCollectionValidationStrategy.GetChildren
- uid: ModelMetadata
  isExternal: true
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: ModelMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator{ValidationEntry}
  commentId: T:System.Collections.Generic.IEnumerator{ValidationEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ValidationEntry>
  nameWithType: IEnumerator<ValidationEntry>
  fullName: System.Collections.Generic.IEnumerator<ValidationEntry>
  nameWithType.vb: IEnumerator(Of ValidationEntry)
  fullName.vb: System.Collections.Generic.IEnumerator(Of ValidationEntry)
  name.vb: IEnumerator(Of ValidationEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValidationEntry
    name: ValidationEntry
    nameWithType: ValidationEntry
    fullName: ValidationEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValidationEntry
    name: ValidationEntry
    nameWithType: ValidationEntry
    fullName: ValidationEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
