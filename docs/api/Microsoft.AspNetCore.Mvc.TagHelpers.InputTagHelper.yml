### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  id: InputTagHelper
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor(IHtmlGenerator)
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process(TagHelperContext,TagHelperOutput)
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
  - Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
  langs:
  - csharp
  - vb
  name: InputTagHelper
  nameWithType: InputTagHelper
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InputTagHelper
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\n<see cref=\"!:ITagHelper\"></see> implementation targeting &lt;input> elements with an <code>asp-for</code> attribute.\n"
  example: []
  syntax:
    content: 'public class InputTagHelper : TagHelper'
    content.vb: >-
      Public Class InputTagHelper
          Inherits TagHelper
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor(IHtmlGenerator)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor(IHtmlGenerator)
  id: '#ctor(IHtmlGenerator)'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: InputTagHelper(IHtmlGenerator)
  nameWithType: InputTagHelper.InputTagHelper(IHtmlGenerator)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTagHelper(IHtmlGenerator)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public InputTagHelper(IHtmlGenerator generator)
    parameters:
    - id: generator
      type: IHtmlGenerator
      description: The <see cref="!:IHtmlGenerator"></see>.
    content.vb: Public Sub New(generator As IHtmlGenerator)
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: InputTagHelper.Order
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Order
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  example: []
  syntax:
    content: public override int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Order As Integer
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
  id: Generator
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: Generator
  nameWithType: InputTagHelper.Generator
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Generator
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  syntax:
    content: protected IHtmlGenerator Generator { get; }
    parameters: []
    return:
      type: IHtmlGenerator
    content.vb: Protected ReadOnly Property Generator As IHtmlGenerator
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
  id: ViewContext
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: ViewContext
  nameWithType: InputTagHelper.ViewContext
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewContext
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  syntax:
    content: public ViewContext ViewContext { get; set; }
    parameters: []
    return:
      type: ViewContext
    content.vb: Public Property ViewContext As ViewContext
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  id: For
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: For
  nameWithType: InputTagHelper.For
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: For
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nAn expression to be evaluated against the current model.\n"
  example: []
  syntax:
    content: public ModelExpression For { get; set; }
    parameters: []
    return:
      type: ModelExpression
    content.vb: Public Property For As ModelExpression
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  id: Format
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: InputTagHelper.Format
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Format
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nThe composite format <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx) to\napply when converting the <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" data-throw-if-not-resolved=\"false\"></xref> result to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>. Sets the generated &quot;value&quot;\nattribute to that formatted <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nUsed only the calculated &quot;type&quot; attribute is &quot;text&quot; (the most common value) e.g.\n<xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" data-throw-if-not-resolved=\"false\"></xref> is &quot;String&quot;. That is, <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" data-throw-if-not-resolved=\"false\"></xref> is used when calling\n<see cref=\"!:IHtmlGenerator.GenerateTextBox\"></see>.\n"
  example: []
  syntax:
    content: public string Format { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Format As String
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  id: InputTypeName
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: InputTypeName
  nameWithType: InputTagHelper.InputTypeName
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InputTypeName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nThe type of the &lt;input> element.\n"
  remarks: "\nPassed through to the generated HTML in all cases. Also used to determine the <see cref=\"!:IHtmlGenerator\"></see>\nhelper to call and the default <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" data-throw-if-not-resolved=\"false\"></xref> value (when calling\n<see cref=\"!:IHtmlGenerator.GenerateTextBox\"></see>).\n"
  example: []
  syntax:
    content: public string InputTypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InputTypeName As String
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
  id: Value
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: InputTagHelper.Value
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Value
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nThe value of the &lt;input> element.\n"
  remarks: "\nPassed through to the generated HTML in all cases. Also used to determine the generated &quot;checked&quot; attribute\nif <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" data-throw-if-not-resolved=\"false\"></xref> is &quot;radio&quot;. Must not be <code>null</code> in that case.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process(TagHelperContext,TagHelperOutput)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process(TagHelperContext,TagHelperOutput)
  id: Process(TagHelperContext,TagHelperOutput)
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  langs:
  - csharp
  - vb
  name: Process(TagHelperContext, TagHelperOutput)
  nameWithType: InputTagHelper.Process(TagHelperContext, TagHelperOutput)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process(TagHelperContext, TagHelperOutput)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Process
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  remarks: Does nothing if <xref href="Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For" data-throw-if-not-resolved="false"></xref> is <code>null</code>.
  example: []
  syntax:
    content: public override void Process(TagHelperContext context, TagHelperOutput output)
    parameters:
    - id: context
      type: TagHelperContext
    - id: output
      type: TagHelperOutput
    content.vb: Public Overrides Sub Process(context As TagHelperContext, output As TagHelperOutput)
  overload: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThrown if <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" data-throw-if-not-resolved=\"false\"></xref> is non-<code>null</code> but <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" data-throw-if-not-resolved=\"false\"></xref> is <code>null</code>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
  isExternal: false
  name: InputTagHelper
  nameWithType: InputTagHelper
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.#ctor
  isExternal: false
  name: InputTagHelper
  nameWithType: InputTagHelper.InputTagHelper
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTagHelper
- uid: IHtmlGenerator
  isExternal: true
  name: IHtmlGenerator
  nameWithType: IHtmlGenerator
  fullName: IHtmlGenerator
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
  isExternal: false
  name: Order
  nameWithType: InputTagHelper.Order
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
  isExternal: false
  name: Generator
  nameWithType: InputTagHelper.Generator
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Generator
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
  isExternal: false
  name: ViewContext
  nameWithType: InputTagHelper.ViewContext
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.ViewContext
- uid: ViewContext
  isExternal: true
  name: ViewContext
  nameWithType: ViewContext
  fullName: ViewContext
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  isExternal: false
  name: For
  nameWithType: InputTagHelper.For
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
- uid: ModelExpression
  isExternal: true
  name: ModelExpression
  nameWithType: ModelExpression
  fullName: ModelExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
  isExternal: false
  name: Format
  nameWithType: InputTagHelper.Format
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
  isExternal: false
  name: InputTypeName
  nameWithType: InputTagHelper.InputTypeName
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
  isExternal: false
  name: Value
  nameWithType: InputTagHelper.Value
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process*
  commentId: Overload:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process
  isExternal: false
  name: Process
  nameWithType: InputTagHelper.Process
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Process
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: TagHelperContext
  isExternal: true
  name: TagHelperContext
  nameWithType: TagHelperContext
  fullName: TagHelperContext
- uid: TagHelperOutput
  isExternal: true
  name: TagHelperOutput
  nameWithType: TagHelperOutput
  fullName: TagHelperOutput
shouldSkipMarkup: true
