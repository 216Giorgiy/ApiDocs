### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteCollection
  commentId: T:Microsoft.AspNetCore.Routing.RouteCollection
  id: RouteCollection
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteCollection.Add(IRouter)
  - Microsoft.AspNetCore.Routing.RouteCollection.Count
  - Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath(VirtualPathContext)
  - Microsoft.AspNetCore.Routing.RouteCollection.Item(System.Int32)
  - Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext)
  langs:
  - csharp
  - vb
  name: RouteCollection
  nameWithType: RouteCollection
  fullName: Microsoft.AspNetCore.Routing.RouteCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteCollection
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: 'public class RouteCollection : IRouteCollection, IRouter'
    content.vb: >-
      Public Class RouteCollection
          Implements IRouteCollection, IRouter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Routing.IRouteCollection
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Item(System.Int32)
  commentId: P:Microsoft.AspNetCore.Routing.RouteCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.AspNetCore.Routing.RouteCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: RouteCollection.Item[Int32]
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: this[]
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public IRouter this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: IRouter
    content.vb: Public ReadOnly Property Item(index As Integer) As IRouter
  overload: Microsoft.AspNetCore.Routing.RouteCollection.Item*
  nameWithType.vb: RouteCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Routing.RouteCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Count
  commentId: P:Microsoft.AspNetCore.Routing.RouteCollection.Count
  id: Count
  parent: Microsoft.AspNetCore.Routing.RouteCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RouteCollection.Count
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Count
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.AspNetCore.Routing.RouteCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Add(IRouter)
  commentId: M:Microsoft.AspNetCore.Routing.RouteCollection.Add(IRouter)
  id: Add(IRouter)
  parent: Microsoft.AspNetCore.Routing.RouteCollection
  langs:
  - csharp
  - vb
  name: Add(IRouter)
  nameWithType: RouteCollection.Add(IRouter)
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Add(IRouter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Add
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public void Add(IRouter router)
    parameters:
    - id: router
      type: IRouter
    content.vb: Public Sub Add(router As IRouter)
  overload: Microsoft.AspNetCore.Routing.RouteCollection.Add*
  implements:
  - Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext)
  id: RouteAsync(RouteContext)
  parent: Microsoft.AspNetCore.Routing.RouteCollection
  langs:
  - csharp
  - vb
  name: RouteAsync(RouteContext)
  nameWithType: RouteCollection.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteAsync
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual Task RouteAsync(RouteContext context)
    parameters:
    - id: context
      type: RouteContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function RouteAsync(context As RouteContext) As Task
  overload: Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath(VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath(VirtualPathContext)
  id: GetVirtualPath(VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.RouteCollection
  langs:
  - csharp
  - vb
  name: GetVirtualPath(VirtualPathContext)
  nameWithType: RouteCollection.GetVirtualPath(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath(VirtualPathContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteCollection.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetVirtualPath
    path: ../aspnet/Routing/src/Microsoft.AspNetCore.Routing/RouteCollection.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual VirtualPathData GetVirtualPath(VirtualPathContext context)
    parameters:
    - id: context
      type: VirtualPathContext
    return:
      type: VirtualPathData
    content.vb: Public Overridable Function GetVirtualPath(context As VirtualPathContext) As VirtualPathData
  overload: Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Routing.IRouteCollection
  commentId: T:Microsoft.AspNetCore.Routing.IRouteCollection
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteCollection
  nameWithType: IRouteCollection
  fullName: Microsoft.AspNetCore.Routing.IRouteCollection
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Item*
  commentId: Overload:Microsoft.AspNetCore.Routing.RouteCollection.Item
  isExternal: false
  name: Item
  nameWithType: RouteCollection.Item
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IRouter
  isExternal: true
  name: IRouter
  nameWithType: IRouter
  fullName: IRouter
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Count*
  commentId: Overload:Microsoft.AspNetCore.Routing.RouteCollection.Count
  isExternal: false
  name: Count
  nameWithType: RouteCollection.Count
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Count
- uid: Microsoft.AspNetCore.Routing.RouteCollection.Add*
  commentId: Overload:Microsoft.AspNetCore.Routing.RouteCollection.Add
  isExternal: false
  name: Add
  nameWithType: RouteCollection.Add
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.Add
- uid: Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
  commentId: M:Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
  parent: Microsoft.AspNetCore.Routing.IRouteCollection
  isExternal: true
  name: Add(IRouter)
  nameWithType: IRouteCollection.Add(IRouter)
  fullName: Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
    name: Add
    nameWithType: IRouteCollection.Add
    fullName: Microsoft.AspNetCore.Routing.IRouteCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: IRouter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouteCollection.Add(IRouter)
    name: Add
    nameWithType: IRouteCollection.Add
    fullName: Microsoft.AspNetCore.Routing.IRouteCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: IRouter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync*
  commentId: Overload:Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync
  isExternal: false
  name: RouteAsync
  nameWithType: RouteCollection.RouteAsync
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync
- uid: RouteContext
  isExternal: true
  name: RouteContext
  nameWithType: RouteContext
  fullName: RouteContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath*
  commentId: Overload:Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath
  isExternal: false
  name: GetVirtualPath
  nameWithType: RouteCollection.GetVirtualPath
  fullName: Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath
- uid: VirtualPathContext
  isExternal: true
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: VirtualPathContext
- uid: VirtualPathData
  isExternal: true
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: VirtualPathData
shouldSkipMarkup: true
