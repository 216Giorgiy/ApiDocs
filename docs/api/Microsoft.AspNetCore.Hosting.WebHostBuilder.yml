### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilder
  id: WebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{ILoggerFactory})
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{IServiceCollection})
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebHostBuilder
  nameWithType: WebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostBuilder
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nA builder for <see cref=\"!:IWebHost\"></see>\n"
  example: []
  syntax:
    content: 'public class WebHostBuilder : IWebHostBuilder'
    content.vb: >-
      Public Class WebHostBuilder
          Inherits IWebHostBuilder
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: WebHostBuilder()
  nameWithType: WebHostBuilder.WebHostBuilder()
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.WebHostBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Hosting.WebHostBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public WebHostBuilder()
    content.vb: Public Sub New
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  id: UseSetting(System.String,System.String)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: UseSetting(String, String)
  nameWithType: WebHostBuilder.UseSetting(String, String)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseSetting
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdd or replace a setting in the configuration.\n"
  example: []
  syntax:
    content: public IWebHostBuilder UseSetting(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: The key of the setting to add or replace.
    - id: value
      type: System.String
      description: The value of the setting to add or replace.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: Public Function UseSetting(key As String, value As String) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  id: GetSetting(System.String)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: GetSetting(String)
  nameWithType: WebHostBuilder.GetSetting(String)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: GetSetting
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nGet the setting value from the configuration.\n"
  example: []
  syntax:
    content: public string GetSetting(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the setting to look up.
    return:
      type: System.String
      description: The value the setting currently contains.
    content.vb: Public Function GetSetting(key As String) As String
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  id: UseLoggerFactory(ILoggerFactory)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: UseLoggerFactory(ILoggerFactory)
  nameWithType: WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseLoggerFactory
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the <see cref=\"!:ILoggerFactory\"></see> to be used by the web host.\n"
  example: []
  syntax:
    content: public IWebHostBuilder UseLoggerFactory(ILoggerFactory loggerFactory)
    parameters:
    - id: loggerFactory
      type: ILoggerFactory
      description: The <see cref="!:ILoggerFactory"></see> to be used.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: Public Function UseLoggerFactory(loggerFactory As ILoggerFactory) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{IServiceCollection})
  id: ConfigureServices(System.Action{IServiceCollection})
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: ConfigureServices(Action<IServiceCollection>)
  nameWithType: WebHostBuilder.ConfigureServices(Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action<IServiceCollection>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureServices
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdds a delegate for configuring additional services for the host or web application. This may be called\nmultiple times.\n"
  example: []
  syntax:
    content: public IWebHostBuilder ConfigureServices(Action<IServiceCollection> configureServices)
    parameters:
    - id: configureServices
      type: System.Action{IServiceCollection}
      description: A delegate for configuring the <see cref="!:IServiceCollection"></see>.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: Public Function ConfigureServices(configureServices As Action(Of IServiceCollection)) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices*
  nameWithType.vb: WebHostBuilder.ConfigureServices(Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action(Of IServiceCollection))
  name.vb: ConfigureServices(Action(Of IServiceCollection))
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{ILoggerFactory})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{ILoggerFactory})
  id: ConfigureLogging(System.Action{ILoggerFactory})
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: ConfigureLogging(Action<ILoggerFactory>)
  nameWithType: WebHostBuilder.ConfigureLogging(Action<ILoggerFactory>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action<ILoggerFactory>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureLogging
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdds a delegate for configuring the provided <see cref=\"!:ILoggerFactory\"></see>. This may be called multiple times.\n"
  example: []
  syntax:
    content: public IWebHostBuilder ConfigureLogging(Action<ILoggerFactory> configureLogging)
    parameters:
    - id: configureLogging
      type: System.Action{ILoggerFactory}
      description: The delegate that configures the <see cref="!:ILoggerFactory"></see>.
    return:
      type: IWebHostBuilder
      description: The <see cref="!:IWebHostBuilder"></see>.
    content.vb: Public Function ConfigureLogging(configureLogging As Action(Of ILoggerFactory)) As IWebHostBuilder
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging*
  nameWithType.vb: WebHostBuilder.ConfigureLogging(Action(Of ILoggerFactory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action(Of ILoggerFactory))
  name.vb: ConfigureLogging(Action(Of ILoggerFactory))
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: WebHostBuilder.Build()
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Build
    path: ../aspnet/Hosting/src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nBuilds the required services and an <see cref=\"!:IWebHost\"></see> which hosts a web application.\n"
  example: []
  syntax:
    content: public IWebHost Build()
    return:
      type: IWebHost
    content.vb: Public Function Build As IWebHost
  overload: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilder
  isExternal: false
  name: WebHostBuilder
  nameWithType: WebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  isExternal: false
  name: WebHostBuilder
  nameWithType: WebHostBuilder.WebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.WebHostBuilder
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting
  isExternal: false
  name: UseSetting
  nameWithType: WebHostBuilder.UseSetting
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IWebHostBuilder
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: IWebHostBuilder
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting
  isExternal: false
  name: GetSetting
  nameWithType: WebHostBuilder.GetSetting
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory
  isExternal: false
  name: UseLoggerFactory
  nameWithType: WebHostBuilder.UseLoggerFactory
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices
  isExternal: false
  name: ConfigureServices
  nameWithType: WebHostBuilder.ConfigureServices
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices
- uid: System.Action{IServiceCollection}
  commentId: T:System.Action{IServiceCollection}
  parent: System
  definition: System.Action`1
  name: Action<IServiceCollection>
  nameWithType: Action<IServiceCollection>
  fullName: System.Action<IServiceCollection>
  nameWithType.vb: Action(Of IServiceCollection)
  fullName.vb: System.Action(Of IServiceCollection)
  name.vb: Action(Of IServiceCollection)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging
  isExternal: false
  name: ConfigureLogging
  nameWithType: WebHostBuilder.ConfigureLogging
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging
- uid: System.Action{ILoggerFactory}
  commentId: T:System.Action{ILoggerFactory}
  parent: System
  definition: System.Action`1
  name: Action<ILoggerFactory>
  nameWithType: Action<ILoggerFactory>
  fullName: System.Action<ILoggerFactory>
  nameWithType.vb: Action(Of ILoggerFactory)
  fullName.vb: System.Action(Of ILoggerFactory)
  name.vb: Action(Of ILoggerFactory)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build*
  commentId: Overload:Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  isExternal: false
  name: Build
  nameWithType: WebHostBuilder.Build
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
- uid: IWebHost
  isExternal: true
  name: IWebHost
  nameWithType: IWebHost
  fullName: IWebHost
shouldSkipMarkup: true
