### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  id: ElmLoggerProvider
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  children:
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore,IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions})
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger(System.String)
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose
  langs:
  - csharp
  - vb
  name: ElmLoggerProvider
  nameWithType: ElmLoggerProvider
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ElmLoggerProvider
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: 'public class ElmLoggerProvider : ILoggerProvider'
    content.vb: >-
      Public Class ElmLoggerProvider
          Inherits ILoggerProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore,IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions})
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore,IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions})
  id: '#ctor(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore,IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions})'
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  langs:
  - csharp
  - vb
  name: ElmLoggerProvider(ElmStore, IOptions<ElmOptions>)
  nameWithType: ElmLoggerProvider.ElmLoggerProvider(ElmStore, IOptions<ElmOptions>)
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.ElmLoggerProvider(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore, IOptions<Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ElmLoggerProvider(ElmStore store, IOptions<ElmOptions> options)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
    - id: options
      type: IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions}
    content.vb: Public Sub New(store As ElmStore, options As IOptions(Of ElmOptions))
  overload: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor*
  nameWithType.vb: ElmLoggerProvider.ElmLoggerProvider(ElmStore, IOptions(Of ElmOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.ElmLoggerProvider(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore, IOptions(Of Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions))
  name.vb: ElmLoggerProvider(ElmStore, IOptions(Of ElmOptions))
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger(System.String)
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: ElmLoggerProvider.CreateLogger(String)
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: CreateLogger
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ILogger CreateLogger(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(name As String) As ILogger
  overload: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ElmLoggerProvider.Dispose()
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Dispose
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics.Elm/ElmLoggerProvider.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics.Elm
  commentId: N:Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.Elm
  nameWithType: Microsoft.AspNetCore.Diagnostics.Elm
  fullName: Microsoft.AspNetCore.Diagnostics.Elm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor
  isExternal: false
  name: ElmLoggerProvider
  nameWithType: ElmLoggerProvider.ElmLoggerProvider
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.ElmLoggerProvider
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ElmStore
  nameWithType: ElmStore
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
- uid: IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions}'
  definition: IOptions`1
  name: IOptions<ElmOptions>
  nameWithType: IOptions<ElmOptions>
  fullName: IOptions<Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions>
  nameWithType.vb: IOptions(Of ElmOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions)
  name.vb: IOptions(Of ElmOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions
    name: ElmOptions
    nameWithType: ElmOptions
    fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions
    name: ElmOptions
    nameWithType: ElmOptions
    fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger
  isExternal: false
  name: CreateLogger
  nameWithType: ElmLoggerProvider.CreateLogger
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ElmLoggerProvider.Dispose
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose
shouldSkipMarkup: true
