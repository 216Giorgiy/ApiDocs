### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  id: ObjectResultExecutor
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor(IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,ILoggerFactory)
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync(ActionContext,Microsoft.AspNetCore.Mvc.ObjectResult)
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext,Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection,System.Collections.Generic.IList{IOutputFormatter})
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter})
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  - Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
  langs:
  - csharp
  - vb
  name: ObjectResultExecutor
  nameWithType: ObjectResultExecutor
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ObjectResultExecutor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nExecutes an <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult\" data-throw-if-not-resolved=\"false\"></xref> to write to the response.\n"
  example: []
  syntax:
    content: public class ObjectResultExecutor
    content.vb: Public Class ObjectResultExecutor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor(IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor(IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,ILoggerFactory)
  id: '#ctor(IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,ILoggerFactory)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: ObjectResultExecutor(IOptions<MvcOptions>, IHttpResponseStreamWriterFactory, ILoggerFactory)
  nameWithType: ObjectResultExecutor.ObjectResultExecutor(IOptions<MvcOptions>, IHttpResponseStreamWriterFactory, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ObjectResultExecutor(IOptions<Microsoft.AspNetCore.Mvc.MvcOptions>, Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ObjectResultExecutor(IOptions<MvcOptions> options, IHttpResponseStreamWriterFactory writerFactory, ILoggerFactory loggerFactory)
    parameters:
    - id: options
      type: IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}
      description: An accessor to <xref href="Microsoft.AspNetCore.Mvc.MvcOptions" data-throw-if-not-resolved="false"></xref>.
    - id: writerFactory
      type: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory" data-throw-if-not-resolved="false"></xref>.
    - id: loggerFactory
      type: ILoggerFactory
      description: The <see cref="!:ILoggerFactory"></see>.
    content.vb: Public Sub New(options As IOptions(Of MvcOptions), writerFactory As IHttpResponseStreamWriterFactory, loggerFactory As ILoggerFactory)
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor*
  nameWithType.vb: ObjectResultExecutor.ObjectResultExecutor(IOptions(Of MvcOptions), IHttpResponseStreamWriterFactory, ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ObjectResultExecutor(IOptions(Of Microsoft.AspNetCore.Mvc.MvcOptions), Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory, ILoggerFactory)
  name.vb: ObjectResultExecutor(IOptions(Of MvcOptions), IHttpResponseStreamWriterFactory, ILoggerFactory)
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
  id: Logger
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ObjectResultExecutor.Logger
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Logger
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the <see cref=\"!:ILogger\"></see>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
  id: OptionsFormatters
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: OptionsFormatters
  nameWithType: ObjectResultExecutor.OptionsFormatters
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OptionsFormatters
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the list of <see cref=\"!:IOutputFormatter\"></see> instances from <xref href=\"Microsoft.AspNetCore.Mvc.MvcOptions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected FormatterCollection<IOutputFormatter> OptionsFormatters { get; }
    parameters: []
    return:
      type: FormatterCollection{IOutputFormatter}
    content.vb: Protected ReadOnly Property OptionsFormatters As FormatterCollection(Of IOutputFormatter)
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
  id: RespectBrowserAcceptHeader
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: RespectBrowserAcceptHeader
  nameWithType: ObjectResultExecutor.RespectBrowserAcceptHeader
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RespectBrowserAcceptHeader
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the value of <xref href=\"Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected bool RespectBrowserAcceptHeader { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property RespectBrowserAcceptHeader As Boolean
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
  id: ReturnHttpNotAcceptable
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: ReturnHttpNotAcceptable
  nameWithType: ObjectResultExecutor.ReturnHttpNotAcceptable
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReturnHttpNotAcceptable
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the value of <xref href=\"Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected bool ReturnHttpNotAcceptable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property ReturnHttpNotAcceptable As Boolean
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
  id: WriterFactory
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: WriterFactory
  nameWithType: ObjectResultExecutor.WriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriterFactory
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the writer factory delegate.\n"
  example: []
  syntax:
    content: protected Func<Stream, Encoding, TextWriter> WriterFactory { get; }
    parameters: []
    return:
      type: System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextWriter}
    content.vb: Protected ReadOnly Property WriterFactory As Func(Of Stream, Encoding, TextWriter)
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync(ActionContext,Microsoft.AspNetCore.Mvc.ObjectResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync(ActionContext,Microsoft.AspNetCore.Mvc.ObjectResult)
  id: ExecuteAsync(ActionContext,Microsoft.AspNetCore.Mvc.ObjectResult)
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: ExecuteAsync(ActionContext, ObjectResult)
  nameWithType: ObjectResultExecutor.ExecuteAsync(ActionContext, ObjectResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync(ActionContext, Microsoft.AspNetCore.Mvc.ObjectResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteAsync
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nExecutes the <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual Task ExecuteAsync(ActionContext context, ObjectResult result)
    parameters:
    - id: context
      type: ActionContext
      description: The <see cref="!:ActionContext"></see> for the current request.
    - id: result
      type: Microsoft.AspNetCore.Mvc.ObjectResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.ObjectResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> which will complete once the <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult\" data-throw-if-not-resolved=\"false\"></xref> is written to the response.\n"
    content.vb: Public Overridable Function ExecuteAsync(context As ActionContext, result As ObjectResult) As Task
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext,Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection,System.Collections.Generic.IList{IOutputFormatter})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext,Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection,System.Collections.Generic.IList{IOutputFormatter})
  id: SelectFormatter(OutputFormatterWriteContext,Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection,System.Collections.Generic.IList{IOutputFormatter})
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: SelectFormatter(OutputFormatterWriteContext, MediaTypeCollection, IList<IOutputFormatter>)
  nameWithType: ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext, MediaTypeCollection, IList<IOutputFormatter>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext, Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection, System.Collections.Generic.IList<IOutputFormatter>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectFormatter
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 163
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nSelects the <see cref=\"!:IOutputFormatter\"></see> to write the response.\n"
  example: []
  syntax:
    content: protected virtual IOutputFormatter SelectFormatter(OutputFormatterWriteContext formatterContext, MediaTypeCollection contentTypes, IList<IOutputFormatter> formatters)
    parameters:
    - id: formatterContext
      type: OutputFormatterWriteContext
      description: The <see cref="!:OutputFormatterWriteContext"></see>.
    - id: contentTypes
      type: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
      description: "\nThe list of content types provided by <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: formatters
      type: System.Collections.Generic.IList{IOutputFormatter}
      description: "\nThe list of <see cref=\"!:IOutputFormatter\"></see> instances to consider.\n"
    return:
      type: IOutputFormatter
      description: "\nThe selected <see cref=\"!:IOutputFormatter\"></see> or <code>null</code> if no formatter can write the response.\n"
    content.vb: Protected Overridable Function SelectFormatter(formatterContext As OutputFormatterWriteContext, contentTypes As MediaTypeCollection, formatters As IList(Of IOutputFormatter)) As IOutputFormatter
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter*
  nameWithType.vb: ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext, MediaTypeCollection, IList(Of IOutputFormatter))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter(OutputFormatterWriteContext, Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection, System.Collections.Generic.IList(Of IOutputFormatter))
  name.vb: SelectFormatter(OutputFormatterWriteContext, MediaTypeCollection, IList(Of IOutputFormatter))
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter})
  id: SelectFormatterNotUsingContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter})
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: SelectFormatterNotUsingContentType(OutputFormatterWriteContext, IList<IOutputFormatter>)
  nameWithType: ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext, IList<IOutputFormatter>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext, System.Collections.Generic.IList<IOutputFormatter>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectFormatterNotUsingContentType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 276
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nSelects the <see cref=\"!:IOutputFormatter\"></see> to write the response. The first formatter which\ncan write the response should be chosen without any consideration for content type.\n"
  example: []
  syntax:
    content: protected virtual IOutputFormatter SelectFormatterNotUsingContentType(OutputFormatterWriteContext formatterContext, IList<IOutputFormatter> formatters)
    parameters:
    - id: formatterContext
      type: OutputFormatterWriteContext
      description: The <see cref="!:OutputFormatterWriteContext"></see>.
    - id: formatters
      type: System.Collections.Generic.IList{IOutputFormatter}
      description: "\nThe list of <see cref=\"!:IOutputFormatter\"></see> instances to consider.\n"
    return:
      type: IOutputFormatter
      description: "\nThe selected <see cref=\"!:IOutputFormatter\"></see> or <code>null</code> if no formatter can write the response.\n"
    content.vb: Protected Overridable Function SelectFormatterNotUsingContentType(formatterContext As OutputFormatterWriteContext, formatters As IList(Of IOutputFormatter)) As IOutputFormatter
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType*
  nameWithType.vb: ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext, IList(Of IOutputFormatter))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType(OutputFormatterWriteContext, System.Collections.Generic.IList(Of IOutputFormatter))
  name.vb: SelectFormatterNotUsingContentType(OutputFormatterWriteContext, IList(Of IOutputFormatter))
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  id: SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, IList<IOutputFormatter>, IList<MediaTypeSegmentWithQuality>)
  nameWithType: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, IList<IOutputFormatter>, IList<MediaTypeSegmentWithQuality>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, System.Collections.Generic.IList<IOutputFormatter>, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectFormatterUsingSortedAcceptHeaders
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 316
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nSelects the <see cref=\"!:IOutputFormatter\"></see> to write the response based on the content type values\npresent in <span class=\"paramref\">sortedAcceptHeaders</span>.\n"
  example: []
  syntax:
    content: protected virtual IOutputFormatter SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext formatterContext, IList<IOutputFormatter> formatters, IList<MediaTypeSegmentWithQuality> sortedAcceptHeaders)
    parameters:
    - id: formatterContext
      type: OutputFormatterWriteContext
      description: The <see cref="!:OutputFormatterWriteContext"></see>.
    - id: formatters
      type: System.Collections.Generic.IList{IOutputFormatter}
      description: "\nThe list of <see cref=\"!:IOutputFormatter\"></see> instances to consider.\n"
    - id: sortedAcceptHeaders
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
      description: "\nThe ordered content types from the <code>Accept</code> header, sorted by descending q-value.\n"
    return:
      type: IOutputFormatter
      description: "\nThe selected <see cref=\"!:IOutputFormatter\"></see> or <code>null</code> if no formatter can write the response.\n"
    content.vb: Protected Overridable Function SelectFormatterUsingSortedAcceptHeaders(formatterContext As OutputFormatterWriteContext, formatters As IList(Of IOutputFormatter), sortedAcceptHeaders As IList(Of MediaTypeSegmentWithQuality)) As IOutputFormatter
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders*
  nameWithType.vb: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, IList(Of IOutputFormatter), IList(Of MediaTypeSegmentWithQuality))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, System.Collections.Generic.IList(Of IOutputFormatter), System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality))
  name.vb: SelectFormatterUsingSortedAcceptHeaders(OutputFormatterWriteContext, IList(Of IOutputFormatter), IList(Of MediaTypeSegmentWithQuality))
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  id: SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, IList<IOutputFormatter>, MediaTypeCollection)
  nameWithType: ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, IList<IOutputFormatter>, MediaTypeCollection)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, System.Collections.Generic.IList<IOutputFormatter>, Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectFormatterUsingAnyAcceptableContentType
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 367
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nSelects the <see cref=\"!:IOutputFormatter\"></see> to write the response based on the content type values\npresent in <span class=\"paramref\">acceptableContentTypes</span>.\n"
  example: []
  syntax:
    content: protected virtual IOutputFormatter SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext formatterContext, IList<IOutputFormatter> formatters, MediaTypeCollection acceptableContentTypes)
    parameters:
    - id: formatterContext
      type: OutputFormatterWriteContext
      description: The <see cref="!:OutputFormatterWriteContext"></see>.
    - id: formatters
      type: System.Collections.Generic.IList{IOutputFormatter}
      description: "\nThe list of <see cref=\"!:IOutputFormatter\"></see> instances to consider.\n"
    - id: acceptableContentTypes
      type: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
      description: "\nThe ordered content types from <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes\" data-throw-if-not-resolved=\"false\"></xref> in descending priority order.\n"
    return:
      type: IOutputFormatter
      description: "\nThe selected <see cref=\"!:IOutputFormatter\"></see> or <code>null</code> if no formatter can write the response.\n"
    content.vb: Protected Overridable Function SelectFormatterUsingAnyAcceptableContentType(formatterContext As OutputFormatterWriteContext, formatters As IList(Of IOutputFormatter), acceptableContentTypes As MediaTypeCollection) As IOutputFormatter
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType*
  nameWithType.vb: ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, IList(Of IOutputFormatter), MediaTypeCollection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, System.Collections.Generic.IList(Of IOutputFormatter), Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  name.vb: SelectFormatterUsingAnyAcceptableContentType(OutputFormatterWriteContext, IList(Of IOutputFormatter), MediaTypeCollection)
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  id: SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext,System.Collections.Generic.IList{IOutputFormatter},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  parent: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  langs:
  - csharp
  - vb
  name: SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, IList<IOutputFormatter>, IList<MediaTypeSegmentWithQuality>, MediaTypeCollection)
  nameWithType: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, IList<IOutputFormatter>, IList<MediaTypeSegmentWithQuality>, MediaTypeCollection)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, System.Collections.Generic.IList<IOutputFormatter>, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality>, Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectFormatterUsingSortedAcceptHeadersAndContentTypes
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Internal/ObjectResultExecutor.cs
    startLine: 419
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nSelects the <see cref=\"!:IOutputFormatter\"></see> to write the response based on the content type values\npresent in <span class=\"paramref\">sortedAcceptableContentTypes</span> and <span class=\"paramref\">possibleOutputContentTypes</span>.\n"
  example: []
  syntax:
    content: protected virtual IOutputFormatter SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext formatterContext, IList<IOutputFormatter> formatters, IList<MediaTypeSegmentWithQuality> sortedAcceptableContentTypes, MediaTypeCollection possibleOutputContentTypes)
    parameters:
    - id: formatterContext
      type: OutputFormatterWriteContext
      description: The <see cref="!:OutputFormatterWriteContext"></see>.
    - id: formatters
      type: System.Collections.Generic.IList{IOutputFormatter}
      description: "\nThe list of <see cref=\"!:IOutputFormatter\"></see> instances to consider.\n"
    - id: sortedAcceptableContentTypes
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
      description: "\nThe ordered content types from the <code>Accept</code> header, sorted by descending q-value.\n"
    - id: possibleOutputContentTypes
      type: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
      description: "\nThe ordered content types from <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes\" data-throw-if-not-resolved=\"false\"></xref> in descending priority order.\n"
    return:
      type: IOutputFormatter
      description: "\nThe selected <see cref=\"!:IOutputFormatter\"></see> or <code>null</code> if no formatter can write the response.\n"
    content.vb: Protected Overridable Function SelectFormatterUsingSortedAcceptHeadersAndContentTypes(formatterContext As OutputFormatterWriteContext, formatters As IList(Of IOutputFormatter), sortedAcceptableContentTypes As IList(Of MediaTypeSegmentWithQuality), possibleOutputContentTypes As MediaTypeCollection) As IOutputFormatter
  overload: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes*
  nameWithType.vb: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, IList(Of IOutputFormatter), IList(Of MediaTypeSegmentWithQuality), MediaTypeCollection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, System.Collections.Generic.IList(Of IOutputFormatter), System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality), Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)
  name.vb: SelectFormatterUsingSortedAcceptHeadersAndContentTypes(OutputFormatterWriteContext, IList(Of IOutputFormatter), IList(Of MediaTypeSegmentWithQuality), MediaTypeCollection)
references:
- uid: Microsoft.AspNetCore.Mvc.ObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.ObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ObjectResult
  nameWithType: ObjectResult
  fullName: Microsoft.AspNetCore.Mvc.ObjectResult
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
  isExternal: false
  name: ObjectResultExecutor
  nameWithType: ObjectResultExecutor
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor
- uid: Microsoft.AspNetCore.Mvc.MvcOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcOptions
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: MvcOptions
  nameWithType: MvcOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions
- uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IHttpResponseStreamWriterFactory
  nameWithType: IHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.#ctor
  isExternal: false
  name: ObjectResultExecutor
  nameWithType: ObjectResultExecutor.ObjectResultExecutor
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ObjectResultExecutor
- uid: IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}
  commentId: '!:IOptions{Microsoft.AspNetCore.Mvc.MvcOptions}'
  definition: IOptions`1
  name: IOptions<MvcOptions>
  nameWithType: IOptions<MvcOptions>
  fullName: IOptions<Microsoft.AspNetCore.Mvc.MvcOptions>
  nameWithType.vb: IOptions(Of MvcOptions)
  fullName.vb: IOptions(Of Microsoft.AspNetCore.Mvc.MvcOptions)
  name.vb: IOptions(Of MvcOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
  isExternal: false
  name: Logger
  nameWithType: ObjectResultExecutor.Logger
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.Logger
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
  isExternal: false
  name: OptionsFormatters
  nameWithType: ObjectResultExecutor.OptionsFormatters
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.OptionsFormatters
- uid: FormatterCollection{IOutputFormatter}
  commentId: '!:FormatterCollection{IOutputFormatter}'
  definition: FormatterCollection`1
  name: FormatterCollection<IOutputFormatter>
  nameWithType: FormatterCollection<IOutputFormatter>
  fullName: FormatterCollection<IOutputFormatter>
  nameWithType.vb: FormatterCollection(Of IOutputFormatter)
  fullName.vb: FormatterCollection(Of IOutputFormatter)
  name.vb: FormatterCollection(Of IOutputFormatter)
  spec.csharp:
  - uid: FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: FormatterCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: IOutputFormatter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: FormatterCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: IOutputFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FormatterCollection`1
  isExternal: true
  name: FormatterCollection<>
  nameWithType: FormatterCollection<>
  fullName: FormatterCollection<>
  nameWithType.vb: FormatterCollection(Of )
  fullName.vb: FormatterCollection(Of )
  name.vb: FormatterCollection(Of )
  spec.csharp:
  - uid: FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: FormatterCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: FormatterCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
  isExternal: false
  name: RespectBrowserAcceptHeader
  nameWithType: ObjectResultExecutor.RespectBrowserAcceptHeader
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.RespectBrowserAcceptHeader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
  isExternal: false
  name: ReturnHttpNotAcceptable
  nameWithType: ObjectResultExecutor.ReturnHttpNotAcceptable
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ReturnHttpNotAcceptable
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
  isExternal: false
  name: WriterFactory
  nameWithType: ObjectResultExecutor.WriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.WriterFactory
- uid: System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextWriter}
  commentId: T:System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextWriter}
  parent: System
  definition: System.Func`3
  name: Func<Stream, Encoding, TextWriter>
  nameWithType: Func<Stream, Encoding, TextWriter>
  fullName: System.Func<System.IO.Stream, System.Text.Encoding, System.IO.TextWriter>
  nameWithType.vb: Func(Of Stream, Encoding, TextWriter)
  fullName.vb: System.Func(Of System.IO.Stream, System.Text.Encoding, System.IO.TextWriter)
  name.vb: Func(Of Stream, Encoding, TextWriter)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: ObjectResultExecutor.ExecuteAsync
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.ExecuteAsync
- uid: ActionContext
  isExternal: true
  name: ActionContext
  nameWithType: ActionContext
  fullName: ActionContext
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes
  commentId: P:Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes
  parent: Microsoft.AspNetCore.Mvc.ObjectResult
  isExternal: false
  name: ContentTypes
  nameWithType: ObjectResult.ContentTypes
  fullName: Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter
  isExternal: false
  name: SelectFormatter
  nameWithType: ObjectResultExecutor.SelectFormatter
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatter
- uid: OutputFormatterWriteContext
  isExternal: true
  name: OutputFormatterWriteContext
  nameWithType: OutputFormatterWriteContext
  fullName: OutputFormatterWriteContext
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: MediaTypeCollection
  nameWithType: MediaTypeCollection
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
- uid: System.Collections.Generic.IList{IOutputFormatter}
  commentId: T:System.Collections.Generic.IList{IOutputFormatter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IOutputFormatter>
  nameWithType: IList<IOutputFormatter>
  fullName: System.Collections.Generic.IList<IOutputFormatter>
  nameWithType.vb: IList(Of IOutputFormatter)
  fullName.vb: System.Collections.Generic.IList(Of IOutputFormatter)
  name.vb: IList(Of IOutputFormatter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: IOutputFormatter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: IOutputFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IOutputFormatter
  isExternal: true
  name: IOutputFormatter
  nameWithType: IOutputFormatter
  fullName: IOutputFormatter
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType
  isExternal: false
  name: SelectFormatterNotUsingContentType
  nameWithType: ObjectResultExecutor.SelectFormatterNotUsingContentType
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterNotUsingContentType
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders
  isExternal: false
  name: SelectFormatterUsingSortedAcceptHeaders
  nameWithType: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MediaTypeSegmentWithQuality>
  nameWithType: IList<MediaTypeSegmentWithQuality>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality>
  nameWithType.vb: IList(Of MediaTypeSegmentWithQuality)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality)
  name.vb: IList(Of MediaTypeSegmentWithQuality)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
    name: MediaTypeSegmentWithQuality
    nameWithType: MediaTypeSegmentWithQuality
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
    name: MediaTypeSegmentWithQuality
    nameWithType: MediaTypeSegmentWithQuality
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType
  isExternal: false
  name: SelectFormatterUsingAnyAcceptableContentType
  nameWithType: ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes
  isExternal: false
  name: SelectFormatterUsingSortedAcceptHeadersAndContentTypes
  nameWithType: ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeadersAndContentTypes
shouldSkipMarkup: true
