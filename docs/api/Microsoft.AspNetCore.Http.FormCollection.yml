### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.FormCollection
  commentId: T:Microsoft.AspNetCore.Http.FormCollection
  id: FormCollection
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.FormCollection.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues},IFormFileCollection)
  - Microsoft.AspNetCore.Http.FormCollection.ContainsKey(System.String)
  - Microsoft.AspNetCore.Http.FormCollection.Count
  - Microsoft.AspNetCore.Http.FormCollection.Empty
  - Microsoft.AspNetCore.Http.FormCollection.Files
  - Microsoft.AspNetCore.Http.FormCollection.GetEnumerator
  - Microsoft.AspNetCore.Http.FormCollection.Item(System.String)
  - Microsoft.AspNetCore.Http.FormCollection.Keys
  - Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  - Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Http.FormCollection.TryGetValue(System.String,StringValues@)
  langs:
  - csharp
  - vb
  name: FormCollection
  nameWithType: FormCollection
  fullName: Microsoft.AspNetCore.Http.FormCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FormCollection
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nContains the parsed form values.\n"
  example: []
  syntax:
    content: 'public class FormCollection : IFormCollection'
    content.vb: >-
      Public Class FormCollection
          Inherits IFormCollection
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.FormCollection.Empty
  commentId: F:Microsoft.AspNetCore.Http.FormCollection.Empty
  id: Empty
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: FormCollection.Empty
  fullName: Microsoft.AspNetCore.Http.FormCollection.Empty
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Empty
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static readonly FormCollection Empty
    return:
      type: Microsoft.AspNetCore.Http.FormCollection
    content.vb: Public Shared ReadOnly Empty As FormCollection
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.FormCollection.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues},IFormFileCollection)
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.#ctor(System.Collections.Generic.Dictionary{System.String,StringValues},IFormFileCollection)
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,StringValues},IFormFileCollection)'
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: FormCollection(Dictionary<String, StringValues>, IFormFileCollection)
  nameWithType: FormCollection.FormCollection(Dictionary<String, StringValues>, IFormFileCollection)
  fullName: Microsoft.AspNetCore.Http.FormCollection.FormCollection(System.Collections.Generic.Dictionary<System.String, StringValues>, IFormFileCollection)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public FormCollection(Dictionary<string, StringValues> fields, IFormFileCollection files = null)
    parameters:
    - id: fields
      type: System.Collections.Generic.Dictionary{System.String,StringValues}
    - id: files
      type: IFormFileCollection
    content.vb: Public Sub New(fields As Dictionary(Of String, StringValues), files As IFormFileCollection = Nothing)
  overload: Microsoft.AspNetCore.Http.FormCollection.#ctor*
  nameWithType.vb: FormCollection.FormCollection(Dictionary(Of String, StringValues), IFormFileCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.FormCollection.FormCollection(System.Collections.Generic.Dictionary(Of System.String, StringValues), IFormFileCollection)
  name.vb: FormCollection(Dictionary(Of String, StringValues), IFormFileCollection)
- uid: Microsoft.AspNetCore.Http.FormCollection.Files
  commentId: P:Microsoft.AspNetCore.Http.FormCollection.Files
  id: Files
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: FormCollection.Files
  fullName: Microsoft.AspNetCore.Http.FormCollection.Files
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Files
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public IFormFileCollection Files { get; }
    parameters: []
    return:
      type: IFormFileCollection
    content.vb: Public ReadOnly Property Files As IFormFileCollection
  overload: Microsoft.AspNetCore.Http.FormCollection.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.FormCollection.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.FormCollection.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: FormCollection.Item[String]
  fullName: Microsoft.AspNetCore.Http.FormCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGet or sets the associated value from the collection as a single string.\n"
  example: []
  syntax:
    content: public StringValues this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: StringValues
      description: the associated value from the collection as a StringValues or StringValues.Empty if the key is not present.
    content.vb: Public ReadOnly Property Item(key As String) As StringValues
  overload: Microsoft.AspNetCore.Http.FormCollection.Item*
  nameWithType.vb: FormCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Http.FormCollection.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Http.FormCollection.Count
  commentId: P:Microsoft.AspNetCore.Http.FormCollection.Count
  id: Count
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: FormCollection.Count
  fullName: Microsoft.AspNetCore.Http.FormCollection.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Count
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the number of elements contained in the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref>;.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.AspNetCore.Http.FormCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.FormCollection.Keys
  commentId: P:Microsoft.AspNetCore.Http.FormCollection.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: FormCollection.Keys
  fullName: Microsoft.AspNetCore.Http.FormCollection.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Keys
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public ICollection<string> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
  overload: Microsoft.AspNetCore.Http.FormCollection.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.FormCollection.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: FormCollection.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Http.FormCollection.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContainsKey
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nDetermines whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains a specific key; otherwise, false.
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: Microsoft.AspNetCore.Http.FormCollection.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.FormCollection.TryGetValue(System.String,StringValues@)
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.TryGetValue(System.String,StringValues@)
  id: TryGetValue(System.String,StringValues@)
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out StringValues)
  nameWithType: FormCollection.TryGetValue(String, out StringValues)
  fullName: Microsoft.AspNetCore.Http.FormCollection.TryGetValue(System.String, out StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryGetValue
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRetrieves a value from the dictionary.\n"
  example: []
  syntax:
    content: public bool TryGetValue(string key, out StringValues value)
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: StringValues
      description: The value.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains the key; otherwise, false.
    content.vb: Public Function TryGetValue(key As String, ByRef value As StringValues) As Boolean
  overload: Microsoft.AspNetCore.Http.FormCollection.TryGetValue*
  nameWithType.vb: FormCollection.TryGetValue(String, ByRef StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.FormCollection.TryGetValue(System.String, ByRef StringValues)
  name.vb: TryGetValue(String, ByRef StringValues)
- uid: Microsoft.AspNetCore.Http.FormCollection.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: FormCollection.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.FormCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an struct enumerator that iterates through a collection without boxing and is also used via the <see cref=\"!:IFormCollection\"></see> interface.\n"
  example: []
  syntax:
    content: public FormCollection.Enumerator GetEnumerator()
    return:
      type: Microsoft.AspNetCore.Http.FormCollection.Enumerator
      description: An <xref href="Microsoft.AspNetCore.Http.FormCollection.Enumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As FormCollection.Enumerator
  overload: Microsoft.AspNetCore.Http.FormCollection.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  nameWithType: FormCollection.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, StringValues>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 152
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection, boxes in non-empty path.\n"
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, StringValues>> IEnumerable<KeyValuePair<string, StringValues>>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, StringValues)) Implements IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
  overload: Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator*
  nameWithType.vb: FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
  fullName.vb: Microsoft.AspNetCore.Http.FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator()
- uid: Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.FormCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: FormCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.FormCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/FormCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http/FormCollection.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection, boxes in non-empty path.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator*
  nameWithType.vb: FormCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.FormCollection
  commentId: T:Microsoft.AspNetCore.Http.FormCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: FormCollection
  nameWithType: FormCollection
  fullName: Microsoft.AspNetCore.Http.FormCollection
- uid: Microsoft.AspNetCore.Http.FormCollection.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.#ctor
  isExternal: false
  name: FormCollection
  nameWithType: FormCollection.FormCollection
  fullName: Microsoft.AspNetCore.Http.FormCollection.FormCollection
- uid: System.Collections.Generic.Dictionary{System.String,StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IFormFileCollection
  isExternal: true
  name: IFormFileCollection
  nameWithType: IFormFileCollection
  fullName: IFormFileCollection
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Http.FormCollection.Files*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.Files
  isExternal: false
  name: Files
  nameWithType: FormCollection.Files
  fullName: Microsoft.AspNetCore.Http.FormCollection.Files
- uid: Microsoft.AspNetCore.Http.FormCollection.Item*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.Item
  isExternal: false
  name: Item
  nameWithType: FormCollection.Item
  fullName: Microsoft.AspNetCore.Http.FormCollection.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StringValues
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: StringValues
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  isExternal: false
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
- uid: Microsoft.AspNetCore.Http.FormCollection.Count*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.Count
  isExternal: false
  name: Count
  nameWithType: FormCollection.Count
  fullName: Microsoft.AspNetCore.Http.FormCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.FormCollection.Keys*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.Keys
  isExternal: false
  name: Keys
  nameWithType: FormCollection.Keys
  fullName: Microsoft.AspNetCore.Http.FormCollection.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.FormCollection.ContainsKey*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.ContainsKey
  isExternal: false
  name: ContainsKey
  nameWithType: FormCollection.ContainsKey
  fullName: Microsoft.AspNetCore.Http.FormCollection.ContainsKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http.FormCollection.TryGetValue*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: FormCollection.TryGetValue
  fullName: Microsoft.AspNetCore.Http.FormCollection.TryGetValue
- uid: Microsoft.AspNetCore.Http.FormCollection.Enumerator
  commentId: T:Microsoft.AspNetCore.Http.FormCollection.Enumerator
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: FormCollection.Enumerator
  nameWithType: FormCollection.Enumerator
  fullName: Microsoft.AspNetCore.Http.FormCollection.Enumerator
- uid: Microsoft.AspNetCore.Http.FormCollection.GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: FormCollection.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.FormCollection.GetEnumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,StringValues}}#GetEnumerator
  isExternal: false
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
  nameWithType: FormCollection.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, StringValues>>.GetEnumerator
  nameWithType.vb: FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
  fullName.vb: Microsoft.AspNetCore.Http.FormCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,StringValues>>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerator<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, StringValues>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, StringValues))
  name.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.AspNetCore.Http.FormCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: FormCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.AspNetCore.Http.FormCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FormCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
shouldSkipMarkup: true
