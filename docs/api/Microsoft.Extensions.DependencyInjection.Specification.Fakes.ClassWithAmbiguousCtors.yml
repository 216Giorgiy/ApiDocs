### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  id: ClassWithAmbiguousCtors
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(System.String)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
  langs:
  - csharp
  - vb
  name: ClassWithAmbiguousCtors
  nameWithType: ClassWithAmbiguousCtors
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ClassWithAmbiguousCtors
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class ClassWithAmbiguousCtors : object'
    content.vb: >-
      Public Class ClassWithAmbiguousCtors
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: ClassWithAmbiguousCtors(String)
  nameWithType: ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(String)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ClassWithAmbiguousCtors(string data)
    parameters:
    - id: data
      type: System.String
    content.vb: Public Sub New(data As String)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: ClassWithAmbiguousCtors(IFakeService, String)
  nameWithType: ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(IFakeService, String)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ClassWithAmbiguousCtors(IFakeService service, string data)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: data
      type: System.String
    content.vb: Public Sub New(service As IFakeService, data As String)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: ClassWithAmbiguousCtors(IFakeService, Int32)
  nameWithType: ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(IFakeService, Int32)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ClassWithAmbiguousCtors(IFakeService service, int data)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: data
      type: System.Int32
    content.vb: Public Sub New(service As IFakeService, data As Integer)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: ClassWithAmbiguousCtors(IFakeService, String, Int32)
  nameWithType: ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(IFakeService, String, Int32)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.ClassWithAmbiguousCtors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ClassWithAmbiguousCtors(IFakeService service, string data1, int data2)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: data1
      type: System.String
    - id: data2
      type: System.Int32
    content.vb: Public Sub New(service As IFakeService, data1 As String, data2 As Integer)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
  id: FakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: FakeService
  nameWithType: ClassWithAmbiguousCtors.FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: FakeService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeService FakeService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    content.vb: Public ReadOnly Property FakeService As IFakeService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
  id: Data1
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: Data1
  nameWithType: ClassWithAmbiguousCtors.Data1
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Data1
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public string Data1 { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Data1 As String
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
  id: Data2
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors
  langs:
  - csharp
  - vb
  name: Data2
  nameWithType: ClassWithAmbiguousCtors.Data2
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Data2
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithAmbiguousCtors.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public int Data2 { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Data2 As Integer
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor
  isExternal: false
  name: ClassWithAmbiguousCtors
  nameWithType: ClassWithAmbiguousCtors.ClassWithAmbiguousCtors
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.ClassWithAmbiguousCtors
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
  isExternal: false
  name: FakeService
  nameWithType: ClassWithAmbiguousCtors.FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
  isExternal: false
  name: Data1
  nameWithType: ClassWithAmbiguousCtors.Data1
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
  isExternal: false
  name: Data2
  nameWithType: ClassWithAmbiguousCtors.Data2
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2
shouldSkipMarkup: true
