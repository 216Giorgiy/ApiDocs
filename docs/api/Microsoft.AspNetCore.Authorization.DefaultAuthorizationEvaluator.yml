### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator
  commentId: T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator
  id: DefaultAuthorizationEvaluator
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  - Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  langs:
  - csharp
  - vb
  name: DefaultAuthorizationEvaluator
  nameWithType: DefaultAuthorizationEvaluator
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: DefaultAuthorizationEvaluator
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nDetermines whether an authorization request was successful or not.\n"
  example: []
  syntax:
    content: 'public class DefaultAuthorizationEvaluator : IAuthorizationEvaluator'
    content.vb: >-
      Public Class DefaultAuthorizationEvaluator
          Implements IAuthorizationEvaluator
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  id: HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator
  langs:
  - csharp
  - vb
  name: HasFailed(AuthorizationHandlerContext)
  nameWithType: DefaultAuthorizationEvaluator.HasFailed(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: HasFailed
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nReturns true, if authorization has failed.\n"
  example: []
  syntax:
    content: public virtual bool HasFailed(AuthorizationHandlerContext context)
    content.vb: Public Overridable Function HasFailed(context As AuthorizationHandlerContext) As Boolean
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The authorization information.
    return:
      type: System.Boolean
      description: True if authorization has failed.
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  id: HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator
  langs:
  - csharp
  - vb
  name: HasSucceeded(AuthorizationHandlerContext)
  nameWithType: DefaultAuthorizationEvaluator.HasSucceeded(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: HasSucceeded
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationEvaluator.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nReturns true, if authorization has succeeded.\n"
  example: []
  syntax:
    content: public virtual bool HasSucceeded(AuthorizationHandlerContext context)
    content.vb: Public Overridable Function HasSucceeded(context As AuthorizationHandlerContext) As Boolean
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The authorization information.
    return:
      type: System.Boolean
      description: True if authorization has succeeded.
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationEvaluator
  nameWithType: IAuthorizationEvaluator
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  isExternal: false
  name: HasFailed(AuthorizationHandlerContext)
  nameWithType: IAuthorizationEvaluator.HasFailed(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HasFailed
    nameWithType: IAuthorizationEvaluator.HasFailed
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HasFailed
    nameWithType: IAuthorizationEvaluator.HasFailed
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator
  isExternal: false
  name: HasSucceeded(AuthorizationHandlerContext)
  nameWithType: IAuthorizationEvaluator.HasSucceeded(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HasSucceeded
    nameWithType: IAuthorizationEvaluator.HasSucceeded
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HasSucceeded
    nameWithType: IAuthorizationEvaluator.HasSucceeded
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
