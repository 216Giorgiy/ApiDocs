### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider
  id: ClassWithNestedReferencesToProvider
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor(IServiceProvider)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose
  langs:
  - csharp
  - vb
  name: ClassWithNestedReferencesToProvider
  nameWithType: ClassWithNestedReferencesToProvider
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ClassWithNestedReferencesToProvider
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class ClassWithNestedReferencesToProvider : IDisposable'
    content.vb: >-
      Public Class ClassWithNestedReferencesToProvider
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor(IServiceProvider)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor(IServiceProvider)
  id: '#ctor(IServiceProvider)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider
  langs:
  - csharp
  - vb
  name: ClassWithNestedReferencesToProvider(IServiceProvider)
  nameWithType: ClassWithNestedReferencesToProvider.ClassWithNestedReferencesToProvider(IServiceProvider)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.ClassWithNestedReferencesToProvider(IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public ClassWithNestedReferencesToProvider(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: IServiceProvider
    content.vb: Public Sub New(serviceProvider As IServiceProvider)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose
  id: Dispose
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ClassWithNestedReferencesToProvider.Dispose()
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Dispose
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/ClassWithNestedReferencesToProvider.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor
  isExternal: false
  name: ClassWithNestedReferencesToProvider
  nameWithType: ClassWithNestedReferencesToProvider.ClassWithNestedReferencesToProvider
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.ClassWithNestedReferencesToProvider
- uid: IServiceProvider
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: IServiceProvider
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ClassWithNestedReferencesToProvider.Dispose
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose
shouldSkipMarkup: true
