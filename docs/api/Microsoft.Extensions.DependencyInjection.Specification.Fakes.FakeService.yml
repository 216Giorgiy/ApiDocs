### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  id: FakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
  langs:
  - csharp
  - vb
  name: FakeService
  nameWithType: FakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: FakeService
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class FakeService : IFakeEveryService, IFakeMultipleService, IFakeScopedService, IFakeServiceInstance, IFakeSingletonService, IFakeService, IFakeOpenGenericService<PocoClass>, IDisposable'
    content.vb: >-
      Public Class FakeService
          Implements IFakeEveryService, IFakeMultipleService, IFakeScopedService, IFakeServiceInstance, IFakeSingletonService, IFakeService, IFakeOpenGenericService(Of PocoClass), IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeServiceInstance
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeSingletonService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
  id: Value
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FakeService.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Value
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public PocoClass Value { get; set; }
    content.vb: Public Property Value As PocoClass
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value*
  implements:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
  id: Disposed
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  langs:
  - csharp
  - vb
  name: Disposed
  nameWithType: FakeService.Disposed
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Disposed
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public bool Disposed { get; }
    content.vb: Public ReadOnly Property Disposed As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose
  id: Dispose
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FakeService.Dispose()
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Dispose
    path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/FakeService.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeEveryService
  nameWithType: IFakeEveryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeMultipleService
  nameWithType: IFakeMultipleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeScopedService
  nameWithType: IFakeScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeServiceInstance
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeServiceInstance
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeServiceInstance
  nameWithType: IFakeServiceInstance
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeServiceInstance
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeSingletonService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeSingletonService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeSingletonService
  nameWithType: IFakeSingletonService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeSingletonService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  definition: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  name: IFakeOpenGenericService<PocoClass>
  nameWithType: IFakeOpenGenericService<PocoClass>
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass>
  nameWithType.vb: IFakeOpenGenericService(Of PocoClass)
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass)
  name.vb: IFakeOpenGenericService(Of PocoClass)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
    name: PocoClass
    nameWithType: PocoClass
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
    name: PocoClass
    nameWithType: PocoClass
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
  isExternal: false
  name: IFakeOpenGenericService<TValue>
  nameWithType: IFakeOpenGenericService<TValue>
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<TValue>
  nameWithType.vb: IFakeOpenGenericService(Of TValue)
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of TValue)
  name.vb: IFakeOpenGenericService(Of TValue)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1
    name: IFakeOpenGenericService
    nameWithType: IFakeOpenGenericService
    fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
  isExternal: false
  name: Value
  nameWithType: FakeService.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}.Value
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService{Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass}
  definition: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  name: Value
  nameWithType: IFakeOpenGenericService<PocoClass>.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass>.Value
  nameWithType.vb: IFakeOpenGenericService(Of PocoClass).Value
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass).Value
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: PocoClass
  nameWithType: PocoClass
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value
  isExternal: false
  name: Value
  nameWithType: IFakeOpenGenericService<TValue>.Value
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService<TValue>.Value
  nameWithType.vb: IFakeOpenGenericService(Of TValue).Value
  fullname.vb: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService(Of TValue).Value
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
  isExternal: false
  name: Disposed
  nameWithType: FakeService.Disposed
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose
  isExternal: false
  name: Dispose
  nameWithType: FakeService.Dispose
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
