### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  id: TagHelperContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.IFormatProvider,System.String,System.Object[])
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.String,System.Object[])
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(IHtmlContent)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo(IHtmlContentBuilder)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent(HtmlEncoder)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo(IHtmlContentBuilder)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(IHtmlContent)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo(System.IO.TextWriter,HtmlEncoder)
  langs:
  - csharp
  - vb
  name: TagHelperContent
  nameWithType: TagHelperContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAbstract class used to buffer content returned by <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public abstract class TagHelperContent : IHtmlContentBuilder'
    content.vb: >-
      Public MustInherit Class TagHelperContent
          Inherits IHtmlContentBuilder
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.AspNetCore.Razor.TagHelpers.DefaultTagHelperContent
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  id: IsModified
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: TagHelperContent.IsModified
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsModified
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGets a value indicating whether the content was modified.\n"
  example: []
  syntax:
    content: public abstract bool IsModified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsModified As Boolean
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
  id: IsEmptyOrWhiteSpace
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: IsEmptyOrWhiteSpace
  nameWithType: TagHelperContent.IsEmptyOrWhiteSpace
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEmptyOrWhiteSpace
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGets a value indicating whether the content is empty or whitespace.\n"
  example: []
  syntax:
    content: public abstract bool IsEmptyOrWhiteSpace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsEmptyOrWhiteSpace As Boolean
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(IHtmlContent)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(IHtmlContent)
  id: SetHtmlContent(IHtmlContent)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: SetHtmlContent(IHtmlContent)
  nameWithType: TagHelperContent.SetHtmlContent(IHtmlContent)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(IHtmlContent)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetHtmlContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nSets the content.\n"
  example: []
  syntax:
    content: public TagHelperContent SetHtmlContent(IHtmlContent htmlContent)
    parameters:
    - id: htmlContent
      type: IHtmlContent
      description: The <see cref="!:IHtmlContent"></see> that replaces the content.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the set operation has completed.
    content.vb: Public Function SetHtmlContent(htmlContent As IHtmlContent) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent(System.String)
  id: SetContent(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: SetContent(String)
  nameWithType: TagHelperContent.SetContent(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nSets the content.\n"
  example: []
  syntax:
    content: public TagHelperContent SetContent(string unencoded)
    parameters:
    - id: unencoded
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that replaces the content. The value is assume to be unencoded\nas-provided and will be HTML encoded before being written.\n"
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the set operation has completed.
    content.vb: Public Function SetContent(unencoded As String) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(System.String)
  id: SetHtmlContent(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: SetHtmlContent(String)
  nameWithType: TagHelperContent.SetHtmlContent(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetHtmlContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nSets the content.\n"
  example: []
  syntax:
    content: public TagHelperContent SetHtmlContent(string encoded)
    parameters:
    - id: encoded
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that replaces the content. The value is assume to be HTML encoded\nas-provided and no further encoding will be performed.\n"
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the set operation has completed.
    content.vb: Public Function SetHtmlContent(encoded As String) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append(System.String)
  id: Append(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: Append(String)
  nameWithType: TagHelperContent.Append(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Append
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAppends <span class=\"paramref\">unencoded</span> to the existing content.\n"
  example: []
  syntax:
    content: public abstract TagHelperContent Append(string unencoded)
    parameters:
    - id: unencoded
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to be appended.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the append operation has completed.
    content.vb: Public MustOverride Function Append(unencoded As String) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(IHtmlContent)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(IHtmlContent)
  id: AppendHtml(IHtmlContent)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: AppendHtml(IHtmlContent)
  nameWithType: TagHelperContent.AppendHtml(IHtmlContent)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(IHtmlContent)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AppendHtml
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAppends <span class=\"paramref\">htmlContent</span> to the existing content.\n"
  example: []
  syntax:
    content: public abstract TagHelperContent AppendHtml(IHtmlContent htmlContent)
    parameters:
    - id: htmlContent
      type: IHtmlContent
      description: The <see cref="!:IHtmlContent"></see> to be appended.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the append operation has completed.
    content.vb: Public MustOverride Function AppendHtml(htmlContent As IHtmlContent) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(System.String)
  id: AppendHtml(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: AppendHtml(String)
  nameWithType: TagHelperContent.AppendHtml(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AppendHtml
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAppends <span class=\"paramref\">encoded</span> to the existing content. <span class=\"paramref\">encoded</span> is assumed\nto be an HTML encoded <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> and no further encoding will be performed.\n"
  example: []
  syntax:
    content: public abstract TagHelperContent AppendHtml(string encoded)
    parameters:
    - id: encoded
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to be appended.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the append operation has completed.
    content.vb: Public MustOverride Function AppendHtml(encoded As String) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.String,System.Object[])
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.String,System.Object[])
  id: AppendFormat(System.String,System.Object[])
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: AppendFormat(String, Object[])
  nameWithType: TagHelperContent.AppendFormat(String, Object[])
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AppendFormat
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAppends the specified <span class=\"paramref\">format</span> to the existing content after\nreplacing each format item with the HTML encoded <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of the\ncorresponding item in the <span class=\"paramref\">args</span> array.\n"
  example: []
  syntax:
    content: public TagHelperContent AppendFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: "\nThe composite format <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\n"
    - id: args
      type: System.Object[]
      description: The object array to format.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the append operation has completed.
    content.vb: Public Function AppendFormat(format As String, ParamArray args As Object()) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat*
  nameWithType.vb: TagHelperContent.AppendFormat(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.String, System.Object())
  name.vb: AppendFormat(String, Object())
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.IFormatProvider,System.String,System.Object[])
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.IFormatProvider,System.String,System.Object[])
  id: AppendFormat(System.IFormatProvider,System.String,System.Object[])
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: AppendFormat(IFormatProvider, String, Object[])
  nameWithType: TagHelperContent.AppendFormat(IFormatProvider, String, Object[])
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.IFormatProvider, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AppendFormat
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAppends the specified <span class=\"paramref\">format</span> to the existing content with information from the\n<span class=\"paramref\">provider</span> after replacing each format item with the HTML encoded <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\nrepresentation of the corresponding item in the <span class=\"paramref\">args</span> array.\n"
  example: []
  syntax:
    content: public TagHelperContent AppendFormat(IFormatProvider provider, string format, params object[] args)
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: "\nThe composite format <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\n"
    - id: args
      type: System.Object[]
      description: The object array to format.
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the append operation has completed.
    content.vb: Public Function AppendFormat(provider As IFormatProvider, format As String, ParamArray args As Object()) As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat*
  nameWithType.vb: TagHelperContent.AppendFormat(IFormatProvider, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat(System.IFormatProvider, System.String, System.Object())
  name.vb: AppendFormat(IFormatProvider, String, Object())
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TagHelperContent.Clear()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Clear
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nClears the content.\n"
  example: []
  syntax:
    content: public abstract TagHelperContent Clear()
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
      description: A reference to this instance after the clear operation has completed.
    content.vb: Public MustOverride Function Clear As TagHelperContent
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize
  id: Reinitialize
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: Reinitialize()
  nameWithType: TagHelperContent.Reinitialize()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reinitialize
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nClears the <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent\" data-throw-if-not-resolved=\"false\"></xref>,  so it can be reused.\n"
  remarks: >-
    This method does more than what <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear" data-throw-if-not-resolved="false"></xref> does. It also resets the

    <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified" data-throw-if-not-resolved="false"></xref> flag.
  example: []
  syntax:
    content: public abstract void Reinitialize()
    content.vb: Public MustOverride Sub Reinitialize
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo(IHtmlContentBuilder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo(IHtmlContentBuilder)
  id: CopyTo(IHtmlContentBuilder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: CopyTo(IHtmlContentBuilder)
  nameWithType: TagHelperContent.CopyTo(IHtmlContentBuilder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo(IHtmlContentBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CopyTo
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 133
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public abstract void CopyTo(IHtmlContentBuilder destination)
    parameters:
    - id: destination
      type: IHtmlContentBuilder
    content.vb: Public MustOverride Sub CopyTo(destination As IHtmlContentBuilder)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo(IHtmlContentBuilder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo(IHtmlContentBuilder)
  id: MoveTo(IHtmlContentBuilder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: MoveTo(IHtmlContentBuilder)
  nameWithType: TagHelperContent.MoveTo(IHtmlContentBuilder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo(IHtmlContentBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: MoveTo
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public abstract void MoveTo(IHtmlContentBuilder destination)
    parameters:
    - id: destination
      type: IHtmlContentBuilder
    content.vb: Public MustOverride Sub MoveTo(destination As IHtmlContentBuilder)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent
  id: GetContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: GetContent()
  nameWithType: TagHelperContent.GetContent()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGets the content.\n"
  example: []
  syntax:
    content: public abstract string GetContent()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the content.
    content.vb: Public MustOverride Function GetContent As String
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent(HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent(HtmlEncoder)
  id: GetContent(HtmlEncoder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: GetContent(HtmlEncoder)
  nameWithType: TagHelperContent.GetContent(HtmlEncoder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent(HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetContent
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 149
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGets the content.\n"
  example: []
  syntax:
    content: public abstract string GetContent(HtmlEncoder encoder)
    parameters:
    - id: encoder
      type: HtmlEncoder
      description: The <see cref="!:HtmlEncoder"></see>.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the content.
    content.vb: Public MustOverride Function GetContent(encoder As HtmlEncoder) As String
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo(System.IO.TextWriter,HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo(System.IO.TextWriter,HtmlEncoder)
  id: WriteTo(System.IO.TextWriter,HtmlEncoder)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: TagHelperContent.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo(System.IO.TextWriter, HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteTo
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperContent.cs
    startLine: 152
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public abstract void WriteTo(TextWriter writer, HtmlEncoder encoder)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: encoder
      type: HtmlEncoder
    content.vb: Public MustOverride Sub WriteTo(writer As TextWriter, encoder As HtmlEncoder)
  overload: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  isExternal: false
  name: IsModified
  nameWithType: TagHelperContent.IsModified
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
  isExternal: false
  name: IsEmptyOrWhiteSpace
  nameWithType: TagHelperContent.IsEmptyOrWhiteSpace
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsEmptyOrWhiteSpace
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent
  isExternal: false
  name: SetHtmlContent
  nameWithType: TagHelperContent.SetHtmlContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetHtmlContent
- uid: IHtmlContent
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: IHtmlContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperContent
  nameWithType: TagHelperContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent
  isExternal: false
  name: SetContent
  nameWithType: TagHelperContent.SetContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.SetContent
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append
  isExternal: false
  name: Append
  nameWithType: TagHelperContent.Append
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Append
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml
  isExternal: false
  name: AppendHtml
  nameWithType: TagHelperContent.AppendHtml
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendHtml
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat
  isExternal: false
  name: AppendFormat
  nameWithType: TagHelperContent.AppendFormat
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.AppendFormat
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  isExternal: false
  name: Clear
  nameWithType: TagHelperContent.Clear
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  isExternal: false
  name: Clear()
  nameWithType: TagHelperContent.Clear()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
    name: Clear
    nameWithType: TagHelperContent.Clear
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
    name: Clear
    nameWithType: TagHelperContent.Clear
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent
  isExternal: false
  name: IsModified
  nameWithType: TagHelperContent.IsModified
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.IsModified
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize
  isExternal: false
  name: Reinitialize
  nameWithType: TagHelperContent.Reinitialize
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.Reinitialize
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: TagHelperContent.CopyTo
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.CopyTo
- uid: IHtmlContentBuilder
  isExternal: true
  name: IHtmlContentBuilder
  nameWithType: IHtmlContentBuilder
  fullName: IHtmlContentBuilder
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo
  isExternal: false
  name: MoveTo
  nameWithType: TagHelperContent.MoveTo
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.MoveTo
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent
  isExternal: false
  name: GetContent
  nameWithType: TagHelperContent.GetContent
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.GetContent
- uid: HtmlEncoder
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: HtmlEncoder
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo*
  commentId: Overload:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: TagHelperContent.WriteTo
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent.WriteTo
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
shouldSkipMarkup: true
