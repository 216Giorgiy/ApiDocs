### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Primitives.StringTokenizer
  commentId: T:Microsoft.Extensions.Primitives.StringTokenizer
  id: StringTokenizer
  parent: Microsoft.Extensions.Primitives
  children:
  - Microsoft.Extensions.Primitives.StringTokenizer.#ctor(System.String,System.Char[])
  - Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator
  langs:
  - csharp
  - vb
  name: StringTokenizer
  nameWithType: StringTokenizer
  fullName: Microsoft.Extensions.Primitives.StringTokenizer
  type: Struct
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: StringTokenizer
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  summary: "\nTokenizes a <code>string</code> into <xref href=\"Microsoft.Extensions.Primitives.StringSegment\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public struct StringTokenizer : IEnumerable<StringSegment>'
    content.vb: >-
      Public Structure StringTokenizer
          Implements IEnumerable(Of StringSegment)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Extensions.Primitives.StringTokenizer.#ctor(System.String,System.Char[])
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.#ctor(System.String,System.Char[])
  id: '#ctor(System.String,System.Char[])'
  parent: Microsoft.Extensions.Primitives.StringTokenizer
  langs:
  - csharp
  - vb
  name: StringTokenizer(String, Char[])
  nameWithType: StringTokenizer.StringTokenizer(String, Char[])
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.StringTokenizer(System.String, System.Char[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.Extensions.Primitives.StringTokenizer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StringTokenizer(string value, char[] separators)
    parameters:
    - id: value
      type: System.String
      description: The <code>string</code> to tokenize.
    - id: separators
      type: System.Char[]
      description: The characters to tokenize by.
    content.vb: Public Sub New(value As String, separators As Char())
  overload: Microsoft.Extensions.Primitives.StringTokenizer.#ctor*
  nameWithType.vb: StringTokenizer.StringTokenizer(String, Char())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Primitives.StringTokenizer.StringTokenizer(System.String, System.Char())
  name.vb: StringTokenizer(String, Char())
- uid: Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator
  commentId: M:Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Extensions.Primitives.StringTokenizer
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: StringTokenizer.GetEnumerator()
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: GetEnumerator
    path: ../aspnet/Common/src/Microsoft.Extensions.Primitives/StringTokenizer.cs
    startLine: 38
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public StringTokenizer.Enumerator GetEnumerator()
    return:
      type: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
    content.vb: Public Function GetEnumerator As StringTokenizer.Enumerator
  overload: Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Primitives.StringSegment
  commentId: T:Microsoft.Extensions.Primitives.StringSegment
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringSegment
  nameWithType: StringSegment
  fullName: Microsoft.Extensions.Primitives.StringSegment
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.Extensions.Primitives.StringTokenizer
  commentId: T:Microsoft.Extensions.Primitives.StringTokenizer
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringTokenizer
  nameWithType: StringTokenizer
  fullName: Microsoft.Extensions.Primitives.StringTokenizer
- uid: Microsoft.Extensions.Primitives.StringTokenizer.#ctor*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.#ctor
  isExternal: false
  name: StringTokenizer
  nameWithType: StringTokenizer.StringTokenizer
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.StringTokenizer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator*
  commentId: Overload:Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: StringTokenizer.GetEnumerator
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator
- uid: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  commentId: T:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringTokenizer.Enumerator
  nameWithType: StringTokenizer.Enumerator
  fullName: Microsoft.Extensions.Primitives.StringTokenizer.Enumerator
shouldSkipMarkup: true
