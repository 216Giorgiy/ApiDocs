### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  id: FilterLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  langs:
  - csharp
  - vb
  name: FilterLoggerFactoryExtensions
  nameWithType: FilterLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/FilterLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: FilterLoggerFactoryExtensions
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Filter/FilterLoggerFactoryExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  summary: "\n<see cref=\"!:ILoggerFactory\"></see> extension methods which provide a common way to filter log messages across all\nregistered <see cref=\"!:ILoggerProvider\"></see>s.\n"
  example: []
  syntax:
    content: 'public static class FilterLoggerFactoryExtensions : object'
    content.vb: >-
      Public Module FilterLoggerFactoryExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  id: WithFilter(ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: WithFilter(ILoggerFactory, IFilterLoggerSettings)
  nameWithType: FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory, IFilterLoggerSettings)
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory, Microsoft.Extensions.Logging.IFilterLoggerSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/FilterLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WithFilter
    path: ../aspnet/Logging/src/Microsoft.Extensions.Logging.Filter/FilterLoggerFactoryExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  summary: "\nRegisters a wrapper logger which provides a common way to filter log messages across all registered\n<see cref=\"!:ILoggerProvider\"></see>s.\n"
  example: []
  syntax:
    content: public static ILoggerFactory WithFilter(this ILoggerFactory loggerFactory, IFilterLoggerSettings settings)
    parameters:
    - id: loggerFactory
      type: ILoggerFactory
      description: The logger factory.
    - id: settings
      type: Microsoft.Extensions.Logging.IFilterLoggerSettings
      description: The filter settings which get applied to all registered logger providers.
    return:
      type: ILoggerFactory
      description: "\nA wrapped <see cref=\"!:ILoggerFactory\"></see> which provides common filtering across all registered\nlogger providers.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithFilter(loggerFactory As ILoggerFactory, settings As IFilterLoggerSettings) As ILoggerFactory
  overload: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter*
  commentId: Overload:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  isExternal: false
  name: WithFilter
  nameWithType: FilterLoggerFactoryExtensions.WithFilter
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.IFilterLoggerSettings
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: IFilterLoggerSettings
  nameWithType: IFilterLoggerSettings
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
shouldSkipMarkup: true
