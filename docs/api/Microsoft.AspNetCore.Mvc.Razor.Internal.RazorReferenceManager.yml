### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager
  id: RazorReferenceManager
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  - Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.CompilationReferences
  langs:
  - csharp
  - vb
  name: RazorReferenceManager
  nameWithType: RazorReferenceManager
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: RazorReferenceManager
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  syntax:
    content: public class RazorReferenceManager
    content.vb: Public Class RazorReferenceManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions})'
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager
  langs:
  - csharp
  - vb
  name: RazorReferenceManager(ApplicationPartManager, IOptions<RazorViewEngineOptions>)
  nameWithType: RazorReferenceManager.RazorReferenceManager(ApplicationPartManager, IOptions<RazorViewEngineOptions>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.RazorReferenceManager(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  syntax:
    content: public RazorReferenceManager(ApplicationPartManager partManager, IOptions<RazorViewEngineOptions> optionsAccessor)
    content.vb: Public Sub New(partManager As ApplicationPartManager, optionsAccessor As IOptions(Of RazorViewEngineOptions))
    parameters:
    - id: partManager
      type: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  nameWithType.vb: RazorReferenceManager.RazorReferenceManager(ApplicationPartManager, IOptions(Of RazorViewEngineOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.RazorReferenceManager(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager, Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions))
  name.vb: RazorReferenceManager(ApplicationPartManager, IOptions(Of RazorViewEngineOptions))
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.CompilationReferences
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.CompilationReferences
  id: CompilationReferences
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager
  langs:
  - csharp
  - vb
  name: CompilationReferences
  nameWithType: RazorReferenceManager.CompilationReferences
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.CompilationReferences
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: CompilationReferences
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/RazorReferenceManager.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  syntax:
    content: public IList<MetadataReference> CompilationReferences { get; }
    content.vb: Public ReadOnly Property CompilationReferences As IList(Of MetadataReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Internal
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPartManager
  nameWithType: ApplicationPartManager
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<RazorViewEngineOptions>
  nameWithType: IOptions<RazorViewEngineOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: IOptions(Of RazorViewEngineOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: IOptions(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: false
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataReference>
  nameWithType: IList<MetadataReference>
  fullName: System.Collections.Generic.IList<Microsoft.CodeAnalysis.MetadataReference>
  nameWithType.vb: IList(Of MetadataReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.CodeAnalysis.MetadataReference)
  name.vb: IList(Of MetadataReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.CodeAnalysis.MetadataReference
    name: MetadataReference
    nameWithType: MetadataReference
    fullName: Microsoft.CodeAnalysis.MetadataReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.CodeAnalysis.MetadataReference
    name: MetadataReference
    nameWithType: MetadataReference
    fullName: Microsoft.CodeAnalysis.MetadataReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
