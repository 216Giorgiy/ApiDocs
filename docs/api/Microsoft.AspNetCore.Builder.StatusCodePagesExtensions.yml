### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  commentId: T:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  id: StatusCodePagesExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder)
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,Microsoft.AspNetCore.Builder.StatusCodePagesOptions)
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Action{IApplicationBuilder})
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task})
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.String,System.String)
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects(IApplicationBuilder,System.String)
  - Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute(IApplicationBuilder,System.String,System.String)
  langs:
  - csharp
  - vb
  name: StatusCodePagesExtensions
  nameWithType: StatusCodePagesExtensions
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: StatusCodePagesExtensions
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static class StatusCodePagesExtensions
    content.vb: Public Module StatusCodePagesExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,Microsoft.AspNetCore.Builder.StatusCodePagesOptions)
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,Microsoft.AspNetCore.Builder.StatusCodePagesOptions)
  id: UseStatusCodePages(IApplicationBuilder,Microsoft.AspNetCore.Builder.StatusCodePagesOptions)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePages(IApplicationBuilder, StatusCodePagesOptions)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, StatusCodePagesOptions)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, Microsoft.AspNetCore.Builder.StatusCodePagesOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePages
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware with the given options that checks for responses with status codes \nbetween 400 and 599 that do not have a body.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePages(this IApplicationBuilder app, StatusCodePagesOptions options)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: options
      type: Microsoft.AspNetCore.Builder.StatusCodePagesOptions
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePages(app As IApplicationBuilder, options As StatusCodePagesOptions) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder)
  id: UseStatusCodePages(IApplicationBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePages(IApplicationBuilder)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePages
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware with a default response handler that checks for responses with status codes \nbetween 400 and 599 that do not have a body.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePages(this IApplicationBuilder app)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePages(app As IApplicationBuilder) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task})
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task})
  id: UseStatusCodePages(IApplicationBuilder,System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePages(IApplicationBuilder, Func<StatusCodeContext, Task>)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, Func<StatusCodeContext, Task>)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, System.Func<Microsoft.AspNetCore.Diagnostics.StatusCodeContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePages
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware with the specified handler that checks for responses with status codes \nbetween 400 and 599 that do not have a body.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePages(this IApplicationBuilder app, Func<StatusCodeContext, Task> handler)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: handler
      type: System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task}
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePages(app As IApplicationBuilder, handler As Func(Of StatusCodeContext, Task)) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  nameWithType.vb: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, Func(Of StatusCodeContext, Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, System.Func(Of Microsoft.AspNetCore.Diagnostics.StatusCodeContext, System.Threading.Tasks.Task))
  name.vb: UseStatusCodePages(IApplicationBuilder, Func(Of StatusCodeContext, Task))
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.String,System.String)
  id: UseStatusCodePages(IApplicationBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePages(IApplicationBuilder, String, String)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, String, String)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePages
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware with the specified response body to send. This may include a '{0}' placeholder for the status code.\nThe middleware checks for responses with status codes between 400 and 599 that do not have a body.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePages(this IApplicationBuilder app, string contentType, string bodyFormat)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: contentType
      type: System.String
      description: ''
    - id: bodyFormat
      type: System.String
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePages(app As IApplicationBuilder, contentType As String, bodyFormat As String) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects(IApplicationBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects(IApplicationBuilder,System.String)
  id: UseStatusCodePagesWithRedirects(IApplicationBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePagesWithRedirects(IApplicationBuilder, String)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePagesWithRedirects(IApplicationBuilder, String)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects(IApplicationBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePagesWithRedirects
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware to the pipeline. Specifies that responses should be handled by redirecting \nwith the given location URL template. This may include a '{0}' placeholder for the status code. URLs starting \nwith '~' will have PathBase prepended, where any other URL will be used as is.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePagesWithRedirects(this IApplicationBuilder app, string locationFormat)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: locationFormat
      type: System.String
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePagesWithRedirects(app As IApplicationBuilder, locationFormat As String) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Action{IApplicationBuilder})
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder,System.Action{IApplicationBuilder})
  id: UseStatusCodePages(IApplicationBuilder,System.Action{IApplicationBuilder})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePages(IApplicationBuilder, Action<IApplicationBuilder>)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, Action<IApplicationBuilder>)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, System.Action<IApplicationBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePages
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware to the pipeline with the specified alternate middleware pipeline to execute \nto generate the response body.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePages(this IApplicationBuilder app, Action<IApplicationBuilder> configuration)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: configuration
      type: System.Action{IApplicationBuilder}
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePages(app As IApplicationBuilder, configuration As Action(Of IApplicationBuilder)) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  nameWithType.vb: StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, Action(Of IApplicationBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages(IApplicationBuilder, System.Action(Of IApplicationBuilder))
  name.vb: UseStatusCodePages(IApplicationBuilder, Action(Of IApplicationBuilder))
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute(IApplicationBuilder,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute(IApplicationBuilder,System.String,System.String)
  id: UseStatusCodePagesWithReExecute(IApplicationBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions
  langs:
  - csharp
  - vb
  name: UseStatusCodePagesWithReExecute(IApplicationBuilder, String, String)
  nameWithType: StatusCodePagesExtensions.UseStatusCodePagesWithReExecute(IApplicationBuilder, String, String)
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute(IApplicationBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseStatusCodePagesWithReExecute
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs
    startLine: 162
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a StatusCodePages middleware to the pipeline. Specifies that the response body should be generated by \nre-executing the request pipeline using an alternate path. This path may contain a '{0}' placeholder of the status code.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseStatusCodePagesWithReExecute(this IApplicationBuilder app, string pathFormat, string queryFormat = null)
    parameters:
    - id: app
      type: IApplicationBuilder
      description: ''
    - id: pathFormat
      type: System.String
      description: ''
    - id: queryFormat
      type: System.String
      description: ''
    return:
      type: IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStatusCodePagesWithReExecute(app As IApplicationBuilder, pathFormat As String, queryFormat As String = Nothing) As IApplicationBuilder
  overload: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages*
  commentId: Overload:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages
  isExternal: false
  name: UseStatusCodePages
  nameWithType: StatusCodePagesExtensions.UseStatusCodePages
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePages
- uid: IApplicationBuilder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesOptions
  commentId: T:Microsoft.AspNetCore.Builder.StatusCodePagesOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: StatusCodePagesOptions
  nameWithType: StatusCodePagesOptions
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesOptions
- uid: System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{Microsoft.AspNetCore.Diagnostics.StatusCodeContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<StatusCodeContext, Task>
  nameWithType: Func<StatusCodeContext, Task>
  fullName: System.Func<Microsoft.AspNetCore.Diagnostics.StatusCodeContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of StatusCodeContext, Task)
  fullName.vb: System.Func(Of Microsoft.AspNetCore.Diagnostics.StatusCodeContext, System.Threading.Tasks.Task)
  name.vb: Func(Of StatusCodeContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.StatusCodeContext
    name: StatusCodeContext
    nameWithType: StatusCodeContext
    fullName: Microsoft.AspNetCore.Diagnostics.StatusCodeContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.StatusCodeContext
    name: StatusCodeContext
    nameWithType: StatusCodeContext
    fullName: Microsoft.AspNetCore.Diagnostics.StatusCodeContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects*
  commentId: Overload:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects
  isExternal: false
  name: UseStatusCodePagesWithRedirects
  nameWithType: StatusCodePagesExtensions.UseStatusCodePagesWithRedirects
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithRedirects
- uid: System.Action{IApplicationBuilder}
  commentId: T:System.Action{IApplicationBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApplicationBuilder>
  nameWithType: Action<IApplicationBuilder>
  fullName: System.Action<IApplicationBuilder>
  nameWithType.vb: Action(Of IApplicationBuilder)
  fullName.vb: System.Action(Of IApplicationBuilder)
  name.vb: Action(Of IApplicationBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: IApplicationBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute*
  commentId: Overload:Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute
  isExternal: false
  name: UseStatusCodePagesWithReExecute
  nameWithType: StatusCodePagesExtensions.UseStatusCodePagesWithReExecute
  fullName: Microsoft.AspNetCore.Builder.StatusCodePagesExtensions.UseStatusCodePagesWithReExecute
shouldSkipMarkup: true
