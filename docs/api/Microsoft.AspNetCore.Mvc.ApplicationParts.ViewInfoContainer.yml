### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer
  id: ViewInfoContainer
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo})
  - Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfos
  langs:
  - csharp
  - vb
  name: ViewInfoContainer
  nameWithType: ViewInfoContainer
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ViewInfoContainer
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.ApplicationParts
  summary: "\nA container for <see cref=\"T:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo\"></see> instances.\n"
  example: []
  syntax:
    content: public class ViewInfoContainer
    content.vb: Public Class ViewInfoContainer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo})
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo})
  id: '#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo})'
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer
  langs:
  - csharp
  - vb
  name: ViewInfoContainer(IReadOnlyList<ViewInfo>)
  nameWithType: ViewInfoContainer.ViewInfoContainer(IReadOnlyList<ViewInfo>)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfoContainer(System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.ApplicationParts
  summary: "\nInitializes a new instance of <see cref=\"P:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfos\"></see>.\n"
  example: []
  syntax:
    content: public ViewInfoContainer(IReadOnlyList<ViewInfo> views)
    content.vb: Public Sub New(views As IReadOnlyList(Of ViewInfo))
    parameters:
    - id: views
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo}
      description: The sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo"></see>.
  nameWithType.vb: ViewInfoContainer.ViewInfoContainer(IReadOnlyList(Of ViewInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfoContainer(System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo))
  name.vb: ViewInfoContainer(IReadOnlyList(Of ViewInfo))
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfos
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfos
  id: ViewInfos
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer
  langs:
  - csharp
  - vb
  name: ViewInfos
  nameWithType: ViewInfoContainer.ViewInfos
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfoContainer.ViewInfos
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: ViewInfos
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewInfoContainer.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.ApplicationParts
  summary: "\nThe <see cref=\"T:System.Collections.Generic.IReadOnlyList`1\"></see> of <see cref=\"T:Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo\"></see>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ViewInfo> ViewInfos { get; }
    content.vb: Public ReadOnly Property ViewInfos As IReadOnlyList(Of ViewInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ViewInfo>
  nameWithType: IReadOnlyList<ViewInfo>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo>
  nameWithType.vb: IReadOnlyList(Of ViewInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo)
  name.vb: IReadOnlyList(Of ViewInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo
    name: ViewInfo
    nameWithType: ViewInfo
    fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo
    name: ViewInfo
    nameWithType: ViewInfo
    fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ViewInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
