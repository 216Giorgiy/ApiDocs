### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Localization.IStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizer
  id: IStringLocalizer
  parent: Microsoft.Extensions.Localization
  children:
  - Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings(System.Boolean)
  - Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String)
  - Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String,System.Object[])
  - Microsoft.Extensions.Localization.IStringLocalizer.WithCulture(CultureInfo)
  langs:
  - csharp
  - vb
  name: IStringLocalizer
  nameWithType: IStringLocalizer
  fullName: Microsoft.Extensions.Localization.IStringLocalizer
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: IStringLocalizer
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nRepresents a service that provides localized strings.\n"
  example: []
  syntax:
    content: public interface IStringLocalizer
    content.vb: Public Interface IStringLocalizer
  extensionMethods:
  - Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String)
  - Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String,System.Object[])
  - Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String)
  commentId: P:Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Extensions.Localization.IStringLocalizer
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IStringLocalizer.Item[String]
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: this[]
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the string resource with the given name.\n"
  example: []
  syntax:
    content: LocalizedString this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: The name of the string resource.
    return:
      type: Microsoft.Extensions.Localization.LocalizedString
      description: The string resource as a <xref href="Microsoft.Extensions.Localization.LocalizedString" data-throw-if-not-resolved="false"></xref>.
    content.vb: ReadOnly Property Item(name As String) As LocalizedString
  overload: Microsoft.Extensions.Localization.IStringLocalizer.Item*
  nameWithType.vb: IStringLocalizer.Item(String)
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String,System.Object[])
  commentId: P:Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String,System.Object[])
  id: Item(System.String,System.Object[])
  parent: Microsoft.Extensions.Localization.IStringLocalizer
  langs:
  - csharp
  - vb
  name: Item[String, Object[]]
  nameWithType: IStringLocalizer.Item[String, Object[]]
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.Item[System.String, System.Object[]]
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: this[]
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets the string resource with the given name and formatted with the supplied arguments.\n"
  example: []
  syntax:
    content: LocalizedString this[string name, params object[] arguments] { get; }
    parameters:
    - id: name
      type: System.String
      description: The name of the string resource.
    - id: arguments
      type: System.Object[]
      description: The values to format the string with.
    return:
      type: Microsoft.Extensions.Localization.LocalizedString
      description: The formatted string resource as a <xref href="Microsoft.Extensions.Localization.LocalizedString" data-throw-if-not-resolved="false"></xref>.
    content.vb: ReadOnly Property Item(name As String, ParamArray arguments As Object()) As LocalizedString
  overload: Microsoft.Extensions.Localization.IStringLocalizer.Item*
  nameWithType.vb: IStringLocalizer.Item(String, Object())
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Extensions.Localization.IStringLocalizer.Item(System.String, System.Object())
  name.vb: Item(String, Object())
- uid: Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings(System.Boolean)
  commentId: M:Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings(System.Boolean)
  id: GetAllStrings(System.Boolean)
  parent: Microsoft.Extensions.Localization.IStringLocalizer
  langs:
  - csharp
  - vb
  name: GetAllStrings(Boolean)
  nameWithType: IStringLocalizer.GetAllStrings(Boolean)
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: GetAllStrings
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nGets all string resources.\n"
  example: []
  syntax:
    content: IEnumerable<LocalizedString> GetAllStrings(bool includeParentCultures)
    parameters:
    - id: includeParentCultures
      type: System.Boolean
      description: "\nA <see cref=\"!:System.Boolean\"></see> indicating whether to include strings from parent cultures.\n"
    return:
      type: IEnumerable{Microsoft.Extensions.Localization.LocalizedString}
      description: The strings.
    content.vb: Function GetAllStrings(includeParentCultures As Boolean) As IEnumerable(Of LocalizedString)
  overload: Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings*
- uid: Microsoft.Extensions.Localization.IStringLocalizer.WithCulture(CultureInfo)
  commentId: M:Microsoft.Extensions.Localization.IStringLocalizer.WithCulture(CultureInfo)
  id: WithCulture(CultureInfo)
  parent: Microsoft.Extensions.Localization.IStringLocalizer
  langs:
  - csharp
  - vb
  name: WithCulture(CultureInfo)
  nameWithType: IStringLocalizer.WithCulture(CultureInfo)
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.WithCulture(CultureInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: WithCulture
    path: ../aspnet/Localization/src/Microsoft.Extensions.Localization.Abstractions/IStringLocalizer.cs
    startLine: 42
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a new <xref href=\"Microsoft.Extensions.Localization.IStringLocalizer\" data-throw-if-not-resolved=\"false\"></xref> for a specific <see cref=\"!:CultureInfo\"></see>.\n"
  example: []
  syntax:
    content: IStringLocalizer WithCulture(CultureInfo culture)
    parameters:
    - id: culture
      type: CultureInfo
      description: The <see cref="!:CultureInfo"></see> to use.
    return:
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: A culture-specific <xref href="Microsoft.Extensions.Localization.IStringLocalizer" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function WithCulture(culture As CultureInfo) As IStringLocalizer
  overload: Microsoft.Extensions.Localization.IStringLocalizer.WithCulture*
references:
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String)
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  definition: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  name: GetString(String)
  nameWithType: StringLocalizerExtensions.GetString(String)
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String)
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String)
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  definition: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  name: GetString(String, Object[])
  nameWithType: StringLocalizerExtensions.GetString(String, Object[])
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String, System.Object[])
  nameWithType.vb: StringLocalizerExtensions.GetString(String, Object())
  fullName.vb: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String, System.Object())
  name.vb: GetString(String, Object())
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String,System.Object[])
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(System.String,System.Object[])
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  parent: Microsoft.Extensions.Localization.StringLocalizerExtensions
  definition: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  name: GetAllStrings()
  nameWithType: StringLocalizerExtensions.GetAllStrings()
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings()
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
    name: GetAllStrings
    nameWithType: StringLocalizerExtensions.GetAllStrings
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
    name: GetAllStrings
    nameWithType: StringLocalizerExtensions.GetAllStrings
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
  isExternal: true
  name: GetString(IStringLocalizer, String)
  nameWithType: StringLocalizerExtensions.GetString(IStringLocalizer, String)
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String)
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions
  commentId: T:Microsoft.Extensions.Localization.StringLocalizerExtensions
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: StringLocalizerExtensions
  nameWithType: StringLocalizerExtensions
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
  isExternal: true
  name: GetString(IStringLocalizer, String, Object[])
  nameWithType: StringLocalizerExtensions.GetString(IStringLocalizer, String, Object[])
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String, System.Object[])
  nameWithType.vb: StringLocalizerExtensions.GetString(IStringLocalizer, String, Object())
  fullName.vb: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer, System.String, System.Object())
  name.vb: GetString(IStringLocalizer, String, Object())
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])
    name: GetString
    nameWithType: StringLocalizerExtensions.GetString
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  commentId: M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  isExternal: false
  name: GetAllStrings(IStringLocalizer)
  nameWithType: StringLocalizerExtensions.GetAllStrings(IStringLocalizer)
  fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
    name: GetAllStrings
    nameWithType: StringLocalizerExtensions.GetAllStrings
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings(Microsoft.Extensions.Localization.IStringLocalizer)
    name: GetAllStrings
    nameWithType: StringLocalizerExtensions.GetAllStrings
    fullName: Microsoft.Extensions.Localization.StringLocalizerExtensions.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Localization.IStringLocalizer
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.LocalizedString
  commentId: T:Microsoft.Extensions.Localization.LocalizedString
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Microsoft.Extensions.Localization.LocalizedString
- uid: Microsoft.Extensions.Localization.IStringLocalizer.Item*
  commentId: Overload:Microsoft.Extensions.Localization.IStringLocalizer.Item
  isExternal: false
  name: Item
  nameWithType: IStringLocalizer.Item
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings*
  commentId: Overload:Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings
  isExternal: false
  name: GetAllStrings
  nameWithType: IStringLocalizer.GetAllStrings
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.GetAllStrings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IEnumerable{Microsoft.Extensions.Localization.LocalizedString}
  commentId: '!:IEnumerable{Microsoft.Extensions.Localization.LocalizedString}'
  definition: IEnumerable`1
  name: IEnumerable<LocalizedString>
  nameWithType: IEnumerable<LocalizedString>
  fullName: IEnumerable<Microsoft.Extensions.Localization.LocalizedString>
  nameWithType.vb: IEnumerable(Of LocalizedString)
  fullName.vb: IEnumerable(Of Microsoft.Extensions.Localization.LocalizedString)
  name.vb: IEnumerable(Of LocalizedString)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Microsoft.Extensions.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Microsoft.Extensions.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.IStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizer
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: IStringLocalizer
  nameWithType: IStringLocalizer
  fullName: Microsoft.Extensions.Localization.IStringLocalizer
- uid: Microsoft.Extensions.Localization.IStringLocalizer.WithCulture*
  commentId: Overload:Microsoft.Extensions.Localization.IStringLocalizer.WithCulture
  isExternal: false
  name: WithCulture
  nameWithType: IStringLocalizer.WithCulture
  fullName: Microsoft.Extensions.Localization.IStringLocalizer.WithCulture
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
shouldSkipMarkup: true
