### YamlMime:ManagedReference
items:
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  id: StringWithQualityHeaderValue
  parent: Microsoft.Net.Http.Headers
  children:
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList(IList{System.String})
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList(IList{System.String})
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.StringWithQualityHeaderValue@)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  - Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
  langs:
  - csharp
  - vb
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  type: Class
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: StringWithQualityHeaderValue
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 10
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: 'public class StringWithQualityHeaderValue : object'
    content.vb: >-
      Public Class StringWithQualityHeaderValue
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 25
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public StringWithQualityHeaderValue(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: StringWithQualityHeaderValue(String, Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String, Double)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(System.String, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 32
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public StringWithQualityHeaderValue(string value, double quality)
    parameters:
    - id: value
      type: System.String
    - id: quality
      type: System.Double
    content.vb: Public Sub New(value As String, quality As Double)
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
  commentId: P:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
  id: Value
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Value
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 45
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  commentId: P:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  id: Quality
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Quality
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 50
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public double ? Quality { get; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public ReadOnly Property Quality As Double?
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  id: ToString
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 55
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 65
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  id: GetHashCode
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 92
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Parse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 104
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static StringWithQualityHeaderValue Parse(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
    content.vb: Public Shared Function Parse(input As String) As StringWithQualityHeaderValue
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.StringWithQualityHeaderValue@)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.StringWithQualityHeaderValue@)
  id: TryParse(System.String,Microsoft.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String, out StringWithQualityHeaderValue)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String, out Microsoft.Net.Http.Headers.StringWithQualityHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParse
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 110
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParse(string input, out StringWithQualityHeaderValue parsedValue)
    parameters:
    - id: input
      type: System.String
    - id: parsedValue
      type: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As StringWithQualityHeaderValue) As Boolean
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  nameWithType.vb: StringWithQualityHeaderValue.TryParse(String, ByRef StringWithQualityHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String, ByRef Microsoft.Net.Http.Headers.StringWithQualityHeaderValue)
  name.vb: TryParse(String, ByRef StringWithQualityHeaderValue)
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList(IList{System.String})
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList(IList{System.String})
  id: ParseList(IList{System.String})
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: ParseList(IList<String>)
  nameWithType: StringWithQualityHeaderValue.ParseList(IList<String>)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList(IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ParseList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 116
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static IList<StringWithQualityHeaderValue> ParseList(IList<string> input)
    parameters:
    - id: input
      type: IList{System.String}
    return:
      type: IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}
    content.vb: Public Shared Function ParseList(input As IList(Of String)) As IList(Of StringWithQualityHeaderValue)
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList*
  nameWithType.vb: StringWithQualityHeaderValue.ParseList(IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList(IList(Of System.String))
  name.vb: ParseList(IList(Of String))
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList(IList{System.String})
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList(IList{System.String})
  id: ParseStrictList(IList{System.String})
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: ParseStrictList(IList<String>)
  nameWithType: StringWithQualityHeaderValue.ParseStrictList(IList<String>)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList(IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ParseStrictList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 121
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static IList<StringWithQualityHeaderValue> ParseStrictList(IList<string> input)
    parameters:
    - id: input
      type: IList{System.String}
    return:
      type: IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}
    content.vb: Public Shared Function ParseStrictList(input As IList(Of String)) As IList(Of StringWithQualityHeaderValue)
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList*
  nameWithType.vb: StringWithQualityHeaderValue.ParseStrictList(IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList(IList(Of System.String))
  name.vb: ParseStrictList(IList(Of String))
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  id: TryParseList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: TryParseList(IList<String>, out IList<StringWithQualityHeaderValue>)
  nameWithType: StringWithQualityHeaderValue.TryParseList(IList<String>, out IList<StringWithQualityHeaderValue>)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList(IList<System.String>, out IList<Microsoft.Net.Http.Headers.StringWithQualityHeaderValue>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParseList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 126
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParseList(IList<string> input, out IList<StringWithQualityHeaderValue> parsedValues)
    parameters:
    - id: input
      type: IList{System.String}
    - id: parsedValues
      type: IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseList(input As IList(Of String), ByRef parsedValues As IList(Of StringWithQualityHeaderValue)) As Boolean
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList*
  nameWithType.vb: StringWithQualityHeaderValue.TryParseList(IList(Of String), ByRef IList(Of StringWithQualityHeaderValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList(IList(Of System.String), ByRef IList(Of Microsoft.Net.Http.Headers.StringWithQualityHeaderValue))
  name.vb: TryParseList(IList(Of String), ByRef IList(Of StringWithQualityHeaderValue))
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  commentId: M:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  id: TryParseStrictList(IList{System.String},IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}@)
  parent: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  - vb
  name: TryParseStrictList(IList<String>, out IList<StringWithQualityHeaderValue>)
  nameWithType: StringWithQualityHeaderValue.TryParseStrictList(IList<String>, out IList<StringWithQualityHeaderValue>)
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList(IList<System.String>, out IList<Microsoft.Net.Http.Headers.StringWithQualityHeaderValue>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParseStrictList
    path: ../aspnet/HttpAbstractions/src/Microsoft.Net.Http.Headers/StringWithQualityHeaderValue.cs
    startLine: 131
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParseStrictList(IList<string> input, out IList<StringWithQualityHeaderValue> parsedValues)
    parameters:
    - id: input
      type: IList{System.String}
    - id: parsedValues
      type: IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseStrictList(input As IList(Of String), ByRef parsedValues As IList(Of StringWithQualityHeaderValue)) As Boolean
  overload: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList*
  nameWithType.vb: StringWithQualityHeaderValue.TryParseStrictList(IList(Of String), ByRef IList(Of StringWithQualityHeaderValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList(IList(Of System.String), ByRef IList(Of Microsoft.Net.Http.Headers.StringWithQualityHeaderValue))
  name.vb: TryParseStrictList(IList(Of String), ByRef IList(Of StringWithQualityHeaderValue))
references:
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.#ctor
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Value
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  isExternal: false
  name: ToString
  nameWithType: StringWithQualityHeaderValue.ToString
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ToString
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals
  isExternal: false
  name: Equals
  nameWithType: StringWithQualityHeaderValue.Equals
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: StringWithQualityHeaderValue.GetHashCode
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse
  isExternal: false
  name: Parse
  nameWithType: StringWithQualityHeaderValue.Parse
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.Parse
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
  isExternal: false
  name: TryParse
  nameWithType: StringWithQualityHeaderValue.TryParse
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList
  isExternal: false
  name: ParseList
  nameWithType: StringWithQualityHeaderValue.ParseList
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseList
- uid: IList{System.String}
  commentId: '!:IList{System.String}'
  definition: IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}
  commentId: '!:IList{Microsoft.Net.Http.Headers.StringWithQualityHeaderValue}'
  definition: IList`1
  name: IList<StringWithQualityHeaderValue>
  nameWithType: IList<StringWithQualityHeaderValue>
  fullName: IList<Microsoft.Net.Http.Headers.StringWithQualityHeaderValue>
  nameWithType.vb: IList(Of StringWithQualityHeaderValue)
  fullName.vb: IList(Of Microsoft.Net.Http.Headers.StringWithQualityHeaderValue)
  name.vb: IList(Of StringWithQualityHeaderValue)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
    name: StringWithQualityHeaderValue
    nameWithType: StringWithQualityHeaderValue
    fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
    name: StringWithQualityHeaderValue
    nameWithType: StringWithQualityHeaderValue
    fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList
  isExternal: false
  name: ParseStrictList
  nameWithType: StringWithQualityHeaderValue.ParseStrictList
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.ParseStrictList
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList
  isExternal: false
  name: TryParseList
  nameWithType: StringWithQualityHeaderValue.TryParseList
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseList
- uid: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList*
  commentId: Overload:Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList
  isExternal: false
  name: TryParseStrictList
  nameWithType: StringWithQualityHeaderValue.TryParseStrictList
  fullName: Microsoft.Net.Http.Headers.StringWithQualityHeaderValue.TryParseStrictList
shouldSkipMarkup: true
