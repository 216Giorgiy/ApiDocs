### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute
  commentId: T:Microsoft.AspNetCore.Mvc.RemoteAttribute
  id: RemoteAttribute
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation(ClientModelValidationContext)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage(System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl(ClientModelValidationContext)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid(System.Object)
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
  - Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
  langs:
  - csharp
  - vb
  name: RemoteAttribute
  nameWithType: RemoteAttribute
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RemoteAttribute
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nA <see cref=\"!:ValidationAttribute\"></see> which configures Unobtrusive validation to send an Ajax request to the\nweb site. The invoked action should return JSON indicating whether the value is valid.\n"
  remarks: Does no server-side validation of the final form submission.
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)]

      public class RemoteAttribute : ValidationAttribute, IClientModelValidator
    content.vb: >-
      <AttributeUsage(AttributeTargets.Property, AllowMultiple:=False, Inherited:=True)>

      Public Class RemoteAttribute
          Inherits ValidationAttribute
          Implements IClientModelValidator
  inheritance:
  - System.Object
  implements:
  - IClientModelValidator
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 128
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RemoteAttribute()
  nameWithType: RemoteAttribute.RemoteAttribute()
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RemoteAttribute()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nIntended for subclasses that support URL generation with no route, action, or controller names.\n"
  example: []
  syntax:
    content: protected RemoteAttribute()
    content.vb: Protected Sub New
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RemoteAttribute(String)
  nameWithType: RemoteAttribute.RemoteAttribute(String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RemoteAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nFinds the <span class=\"paramref\">routeName</span> in any area of the application.\n"
  example: []
  syntax:
    content: public RemoteAttribute(string routeName)
    parameters:
    - id: routeName
      type: System.String
      description: "\nThe route name used when generating the URL where client should send a validation request.\n"
    content.vb: Public Sub New(routeName As String)
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RemoteAttribute(String, String)
  nameWithType: RemoteAttribute.RemoteAttribute(String, String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RemoteAttribute(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\n<p>\nIf either <span class=\"paramref\">action</span> or <span class=\"paramref\">controller</span> is <code>null</code>, uses the corresponding\nambient value.\n</p>\n<p>Finds the <span class=\"paramref\">controller</span> in the current area.</p>\n"
  example: []
  syntax:
    content: public RemoteAttribute(string action, string controller)
    parameters:
    - id: action
      type: System.String
      description: "\nThe action name used when generating the URL where client should send a validation request.\n"
    - id: controller
      type: System.String
      description: "\nThe controller name used when generating the URL where client should send a validation request.\n"
    content.vb: Public Sub New(action As String, controller As String)
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RemoteAttribute(String, String, String)
  nameWithType: RemoteAttribute.RemoteAttribute(String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RemoteAttribute(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 109
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\n<p>\nIf either <span class=\"paramref\">action</span> or <span class=\"paramref\">controller</span> is <code>null</code>, uses the corresponding\nambient value.\n</p>\nIf <span class=\"paramref\">areaName</span> is <code>null</code>, finds the <span class=\"paramref\">controller</span> in the root area.\nUse the <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute.%23ctor(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> overload find the <span class=\"paramref\">controller</span> in\nthe current area. Or explicitly pass the current area&apos;s name as the <span class=\"paramref\">areaName</span> argument to\nthis overload.\n"
  example: []
  syntax:
    content: public RemoteAttribute(string action, string controller, string areaName)
    parameters:
    - id: action
      type: System.String
      description: "\nThe action name used when generating the URL where client should send a validation request.\n"
    - id: controller
      type: System.String
      description: "\nThe controller name used when generating the URL where client should send a validation request.\n"
    - id: areaName
      type: System.String
      description: The name of the area containing the <span class="paramref">controller</span>.
    content.vb: Public Sub New(action As String, controller As String, areaName As String)
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
  commentId: P:Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
  id: HttpMethod
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: RemoteAttribute.HttpMethod
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpMethod
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the HTTP method (<code>&quot;Get&quot;</code> or <code>&quot;Post&quot;</code>) client should use when sending a validation\nrequest.\n"
  example: []
  syntax:
    content: public string HttpMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HttpMethod As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  commentId: P:Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  id: AdditionalFields
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: AdditionalFields
  nameWithType: RemoteAttribute.AdditionalFields
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AdditionalFields
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the comma-separated names of fields the client should include in a validation request.\n"
  example: []
  syntax:
    content: public string AdditionalFields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AdditionalFields As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
  id: RouteData
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RouteData
  nameWithType: RemoteAttribute.RouteData
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RouteData
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <see cref=\"!:RouteValueDictionary\"></see> used when generating the URL where client should send a\nvalidation request.\n"
  example: []
  syntax:
    content: protected RouteValueDictionary RouteData { get; }
    parameters: []
    return:
      type: RouteValueDictionary
    content.vb: Protected ReadOnly Property RouteData As RouteValueDictionary
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
  commentId: P:Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
  id: RouteName
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: RouteName
  nameWithType: RemoteAttribute.RouteName
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RouteName
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 145
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the route name used when generating the URL where client should send a validation request.\n"
  example: []
  syntax:
    content: protected string RouteName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property RouteName As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)
  id: FormatAdditionalFieldsForClientValidation(System.String)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: FormatAdditionalFieldsForClientValidation(String)
  nameWithType: RemoteAttribute.FormatAdditionalFieldsForClientValidation(String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FormatAdditionalFieldsForClientValidation
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 158
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nFormats <span class=\"paramref\">property</span> and <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields\" data-throw-if-not-resolved=\"false\"></xref> for use in generated HTML.\n"
  remarks: "\nExcludes any whitespace from <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields\" data-throw-if-not-resolved=\"false\"></xref> in the return value.\nPrefixes each field name in the return value with <code>&quot;*.&quot;</code>.\n"
  example: []
  syntax:
    content: public string FormatAdditionalFieldsForClientValidation(string property)
    parameters:
    - id: property
      type: System.String
      description: "\nName of the property associated with this <xref href=\"Microsoft.AspNetCore.Mvc.RemoteAttribute\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
    return:
      type: System.String
      description: Comma-separated names of fields the client should include in a validation request.
    content.vb: Public Function FormatAdditionalFieldsForClientValidation(property As String) As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)
  id: FormatPropertyForClientValidation(System.String)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: FormatPropertyForClientValidation(String)
  nameWithType: RemoteAttribute.FormatPropertyForClientValidation(String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FormatPropertyForClientValidation
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 182
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nFormats <span class=\"paramref\">property</span> for use in generated HTML.\n"
  remarks: Returns <span class="paramref">property</span> with a <code>&quot;*.&quot;</code> prefix.
  example: []
  syntax:
    content: public static string FormatPropertyForClientValidation(string property)
    parameters:
    - id: property
      type: System.String
      description: One field name the client should include in a validation request.
    return:
      type: System.String
      description: Name of a field the client should include in a validation request.
    content.vb: Public Shared Function FormatPropertyForClientValidation(property As String) As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl(ClientModelValidationContext)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl(ClientModelValidationContext)
  id: GetUrl(ClientModelValidationContext)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: GetUrl(ClientModelValidationContext)
  nameWithType: RemoteAttribute.GetUrl(ClientModelValidationContext)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl(ClientModelValidationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetUrl
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 197
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns the URL where the client should send a validation request.\n"
  example: []
  syntax:
    content: protected virtual string GetUrl(ClientModelValidationContext context)
    parameters:
    - id: context
      type: ClientModelValidationContext
      description: The <see cref="!:ClientModelValidationContext"></see> used to generate the URL.
    return:
      type: System.String
      description: The URL where the client should send a validation request.
    content.vb: Protected Overridable Function GetUrl(context As ClientModelValidationContext) As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage(System.String)
  id: FormatErrorMessage(System.String)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: FormatErrorMessage(String)
  nameWithType: RemoteAttribute.FormatErrorMessage(String)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FormatErrorMessage
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 223
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  example: []
  syntax:
    content: public override string FormatErrorMessage(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Overrides Function FormatErrorMessage(name As String) As String
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: IsValid(Object)
  nameWithType: RemoteAttribute.IsValid(Object)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsValid
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 233
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  remarks: "\nAlways returns <code>true</code> since this <see cref=\"!:ValidationAttribute\"></see> does no validation itself.\nRelated validations occur only when the client sends a validation request.\n"
  example: []
  syntax:
    content: public override bool IsValid(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsValid(value As Object) As Boolean
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation(ClientModelValidationContext)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation(ClientModelValidationContext)
  id: AddValidation(ClientModelValidationContext)
  parent: Microsoft.AspNetCore.Mvc.RemoteAttribute
  langs:
  - csharp
  - vb
  name: AddValidation(ClientModelValidationContext)
  nameWithType: RemoteAttribute.AddValidation(ClientModelValidationContext)
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation(ClientModelValidationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddValidation
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/RemoteAttribute.cs
    startLine: 238
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc
  syntax:
    content: public virtual void AddValidation(ClientModelValidationContext context)
    parameters:
    - id: context
      type: ClientModelValidationContext
    content.vb: Public Overridable Sub AddValidation(context As ClientModelValidationContext)
  overload: Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IClientModelValidator
  commentId: '!:IClientModelValidator'
  isExternal: true
  name: IClientModelValidator
  nameWithType: IClientModelValidator
  fullName: IClientModelValidator
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute
  commentId: T:Microsoft.AspNetCore.Mvc.RemoteAttribute
  isExternal: false
  name: RemoteAttribute
  nameWithType: RemoteAttribute
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor
  isExternal: false
  name: RemoteAttribute
  nameWithType: RemoteAttribute.RemoteAttribute
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RemoteAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
  isExternal: false
  name: HttpMethod
  nameWithType: RemoteAttribute.HttpMethod
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.HttpMethod
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  isExternal: false
  name: AdditionalFields
  nameWithType: RemoteAttribute.AdditionalFields
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
  isExternal: false
  name: RouteData
  nameWithType: RemoteAttribute.RouteData
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteData
- uid: RouteValueDictionary
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: RouteValueDictionary
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
  isExternal: false
  name: RouteName
  nameWithType: RemoteAttribute.RouteName
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
  commentId: P:Microsoft.AspNetCore.Mvc.RemoteAttribute.AdditionalFields
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation
  isExternal: false
  name: FormatAdditionalFieldsForClientValidation
  nameWithType: RemoteAttribute.FormatAdditionalFieldsForClientValidation
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation
  isExternal: false
  name: FormatPropertyForClientValidation
  nameWithType: RemoteAttribute.FormatPropertyForClientValidation
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatPropertyForClientValidation
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl
  isExternal: false
  name: GetUrl
  nameWithType: RemoteAttribute.GetUrl
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl
- uid: ClientModelValidationContext
  isExternal: true
  name: ClientModelValidationContext
  nameWithType: ClientModelValidationContext
  fullName: ClientModelValidationContext
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage
  isExternal: false
  name: FormatErrorMessage
  nameWithType: RemoteAttribute.FormatErrorMessage
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.FormatErrorMessage
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid
  isExternal: false
  name: IsValid
  nameWithType: RemoteAttribute.IsValid
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation*
  commentId: Overload:Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation
  isExternal: false
  name: AddValidation
  nameWithType: RemoteAttribute.AddValidation
  fullName: Microsoft.AspNetCore.Mvc.RemoteAttribute.AddValidation
shouldSkipMarkup: true
