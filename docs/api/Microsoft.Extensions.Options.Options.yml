### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.Options
  commentId: T:Microsoft.Extensions.Options.Options
  id: Options
  parent: Microsoft.Extensions.Options
  children:
  - Microsoft.Extensions.Options.Options.Create``1(``0)
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: Options
  fullName: Microsoft.Extensions.Options.Options
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Options/Options.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: Options
    path: ../aspnet/Options/src/Microsoft.Extensions.Options/Options.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nHelper class.\n"
  example: []
  syntax:
    content: 'public static class Options : object'
    content.vb: >-
      Public Module Options
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Options.Options.Create``1(``0)
  commentId: M:Microsoft.Extensions.Options.Options.Create``1(``0)
  id: Create``1(``0)
  parent: Microsoft.Extensions.Options.Options
  langs:
  - csharp
  - vb
  name: Create<TOptions>(TOptions)
  nameWithType: Options.Create<TOptions>(TOptions)
  fullName: Microsoft.Extensions.Options.Options.Create<TOptions>(TOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Options/Options.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: Create
    path: ../aspnet/Options/src/Microsoft.Extensions.Options/Options.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nCreates a wrapper around an instance of TOptions to return itself as an IOptions.\n"
  example: []
  syntax:
    content: 'public static IOptions<TOptions> Create<TOptions>(TOptions options)where TOptions : class, new ()'
    parameters:
    - id: options
      type: '{TOptions}'
      description: ''
    typeParameters:
    - id: TOptions
      description: ''
    return:
      type: Microsoft.Extensions.Options.IOptions{{TOptions}}
      description: ''
    content.vb: Public Shared Function Create(Of TOptions As {Class, New})(options As TOptions) As IOptions(Of TOptions)
  overload: Microsoft.Extensions.Options.Options.Create*
  nameWithType.vb: Options.Create(Of TOptions)(TOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Options.Options.Create(Of TOptions)(TOptions)
  name.vb: Create(Of TOptions)(TOptions)
references:
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Options.Options.Create*
  commentId: Overload:Microsoft.Extensions.Options.Options.Create
  isExternal: false
  name: Create
  nameWithType: Options.Create
  fullName: Microsoft.Extensions.Options.Options.Create
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: Microsoft.Extensions.Options.IOptions{{TOptions}}
  commentId: T:Microsoft.Extensions.Options.IOptions{``0}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: TOptions
  isExternal: false
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: false
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
