### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  id: OAuthHandler`1
  parent: Microsoft.AspNetCore.Authentication.OAuth
  children:
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor(HttpClient)
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(AuthenticationProperties,System.String)
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(System.String,System.String)
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  langs:
  - csharp
  - vb
  name: OAuthHandler<TOptions>
  nameWithType: OAuthHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OAuthHandler
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: 'public class OAuthHandler<TOptions> : RemoteAuthenticationHandler<TOptions> where TOptions : OAuthOptions'
    typeParameters:
    - id: TOptions
    content.vb: >-
      Public Class OAuthHandler(Of TOptions As OAuthOptions)
          Inherits RemoteAuthenticationHandler(Of TOptions)
  inheritance:
  - System.Object
  nameWithType.vb: OAuthHandler(Of TOptions)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions)
  name.vb: OAuthHandler(Of TOptions)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor(HttpClient)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor(HttpClient)
  id: '#ctor(HttpClient)'
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: OAuthHandler(HttpClient)
  nameWithType: OAuthHandler<TOptions>.OAuthHandler(HttpClient)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.OAuthHandler(HttpClient)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: public OAuthHandler(HttpClient backchannel)
    parameters:
    - id: backchannel
      type: HttpClient
    content.vb: Public Sub New(backchannel As HttpClient)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor*
  nameWithType.vb: OAuthHandler(Of TOptions).OAuthHandler(HttpClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).OAuthHandler(HttpClient)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  id: Backchannel
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: Backchannel
  nameWithType: OAuthHandler<TOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Backchannel
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Backchannel
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected HttpClient Backchannel { get; }
    parameters: []
    return:
      type: HttpClient
    content.vb: Protected ReadOnly Property Backchannel As HttpClient
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel*
  nameWithType.vb: OAuthHandler(Of TOptions).Backchannel
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).Backchannel
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  id: HandleRemoteAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: HandleRemoteAuthenticateAsync()
  nameWithType: OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRemoteAuthenticateAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected override Task<AuthenticateResult> HandleRemoteAuthenticateAsync()
    return:
      type: System.Threading.Tasks.Task{AuthenticateResult}
    content.vb: Protected Overrides Function HandleRemoteAuthenticateAsync As Task(Of AuthenticateResult)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync*
  nameWithType.vb: OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync()
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(System.String,System.String)
  id: ExchangeCodeAsync(System.String,System.String)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: ExchangeCodeAsync(String, String)
  nameWithType: OAuthHandler<TOptions>.ExchangeCodeAsync(String, String)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.ExchangeCodeAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ExchangeCodeAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected virtual Task<OAuthTokenResponse> ExchangeCodeAsync(string code, string redirectUri)
    parameters:
    - id: code
      type: System.String
    - id: redirectUri
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
    content.vb: Protected Overridable Function ExchangeCodeAsync(code As String, redirectUri As String) As Task(Of OAuthTokenResponse)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync*
  nameWithType.vb: OAuthHandler(Of TOptions).ExchangeCodeAsync(String, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).ExchangeCodeAsync(System.String, System.String)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  id: CreateTicketAsync(System.Security.Claims.ClaimsIdentity,AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  nameWithType: OAuthHandler<TOptions>.CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateTicketAsync(System.Security.Claims.ClaimsIdentity, AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CreateTicketAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 162
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected virtual Task<AuthenticationTicket> CreateTicketAsync(ClaimsIdentity identity, AuthenticationProperties properties, OAuthTokenResponse tokens)
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
    - id: properties
      type: AuthenticationProperties
    - id: tokens
      type: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    return:
      type: System.Threading.Tasks.Task{AuthenticationTicket}
    content.vb: Protected Overridable Function CreateTicketAsync(identity As ClaimsIdentity, properties As AuthenticationProperties, tokens As OAuthTokenResponse) As Task(Of AuthenticationTicket)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync*
  nameWithType.vb: OAuthHandler(Of TOptions).CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateTicketAsync(System.Security.Claims.ClaimsIdentity, AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync(ChallengeContext)
  id: HandleUnauthorizedAsync(ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: HandleUnauthorizedAsync(ChallengeContext)
  nameWithType: OAuthHandler<TOptions>.HandleUnauthorizedAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleUnauthorizedAsync(ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleUnauthorizedAsync
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected override Task<bool> HandleUnauthorizedAsync(ChallengeContext context)
    parameters:
    - id: context
      type: ChallengeContext
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overrides Function HandleUnauthorizedAsync(context As ChallengeContext) As Task(Of Boolean)
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync*
  nameWithType.vb: OAuthHandler(Of TOptions).HandleUnauthorizedAsync(ChallengeContext)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleUnauthorizedAsync(ChallengeContext)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(AuthenticationProperties,System.String)
  id: BuildChallengeUrl(AuthenticationProperties,System.String)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: BuildChallengeUrl(AuthenticationProperties, String)
  nameWithType: OAuthHandler<TOptions>.BuildChallengeUrl(AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.BuildChallengeUrl(AuthenticationProperties, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BuildChallengeUrl
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 198
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected virtual string BuildChallengeUrl(AuthenticationProperties properties, string redirectUri)
    parameters:
    - id: properties
      type: AuthenticationProperties
    - id: redirectUri
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function BuildChallengeUrl(properties As AuthenticationProperties, redirectUri As String) As String
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl*
  nameWithType.vb: OAuthHandler(Of TOptions).BuildChallengeUrl(AuthenticationProperties, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).BuildChallengeUrl(AuthenticationProperties, System.String)
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  id: FormatScope
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  langs:
  - csharp
  - vb
  name: FormatScope()
  nameWithType: OAuthHandler<TOptions>.FormatScope()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: FormatScope
    path: ../aspnet/Security/src/Microsoft.AspNetCore.Authentication.OAuth/OAuthHandler.cs
    startLine: 215
  assemblies:
  - Microsoft.AspNetCore.Authentication.OAuth
  namespace: Microsoft.AspNetCore.Authentication.OAuth
  syntax:
    content: protected virtual string FormatScope()
    return:
      type: System.String
    content.vb: Protected Overridable Function FormatScope As String
  overload: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope*
  nameWithType.vb: OAuthHandler(Of TOptions).FormatScope()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope()
references:
- uid: Microsoft.AspNetCore.Authentication.OAuth
  commentId: N:Microsoft.AspNetCore.Authentication.OAuth
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.OAuth
  nameWithType: Microsoft.AspNetCore.Authentication.OAuth
  fullName: Microsoft.AspNetCore.Authentication.OAuth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.#ctor
  isExternal: false
  name: OAuthHandler
  nameWithType: OAuthHandler<TOptions>.OAuthHandler
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.OAuthHandler
  nameWithType.vb: OAuthHandler(Of TOptions).OAuthHandler
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).OAuthHandler
- uid: HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: HttpClient
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  isExternal: false
  name: Backchannel
  nameWithType: OAuthHandler<TOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Backchannel
  nameWithType.vb: OAuthHandler(Of TOptions).Backchannel
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).Backchannel
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  isExternal: false
  name: HandleRemoteAuthenticateAsync
  nameWithType: OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync
  nameWithType.vb: OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync
- uid: System.Threading.Tasks.Task{AuthenticateResult}
  commentId: T:System.Threading.Tasks.Task{AuthenticateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticateResult>
  nameWithType: Task<AuthenticateResult>
  fullName: System.Threading.Tasks.Task<AuthenticateResult>
  nameWithType.vb: Task(Of AuthenticateResult)
  fullName.vb: System.Threading.Tasks.Task(Of AuthenticateResult)
  name.vb: Task(Of AuthenticateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: AuthenticateResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: AuthenticateResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync
  isExternal: false
  name: ExchangeCodeAsync
  nameWithType: OAuthHandler<TOptions>.ExchangeCodeAsync
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.ExchangeCodeAsync
  nameWithType.vb: OAuthHandler(Of TOptions).ExchangeCodeAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).ExchangeCodeAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OAuthTokenResponse>
  nameWithType: Task<OAuthTokenResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse>
  nameWithType.vb: Task(Of OAuthTokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  name.vb: Task(Of OAuthTokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync
  isExternal: false
  name: CreateTicketAsync
  nameWithType: OAuthHandler<TOptions>.CreateTicketAsync
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateTicketAsync
  nameWithType.vb: OAuthHandler(Of TOptions).CreateTicketAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateTicketAsync
- uid: System.Security.Claims.ClaimsIdentity
  commentId: T:System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: AuthenticationProperties
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: AuthenticationProperties
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  parent: Microsoft.AspNetCore.Authentication.OAuth
  isExternal: false
  name: OAuthTokenResponse
  nameWithType: OAuthTokenResponse
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
- uid: System.Threading.Tasks.Task{AuthenticationTicket}
  commentId: T:System.Threading.Tasks.Task{AuthenticationTicket}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticationTicket>
  nameWithType: Task<AuthenticationTicket>
  fullName: System.Threading.Tasks.Task<AuthenticationTicket>
  nameWithType.vb: Task(Of AuthenticationTicket)
  fullName.vb: System.Threading.Tasks.Task(Of AuthenticationTicket)
  name.vb: Task(Of AuthenticationTicket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: AuthenticationTicket
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: AuthenticationTicket
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleUnauthorizedAsync
  isExternal: false
  name: HandleUnauthorizedAsync
  nameWithType: OAuthHandler<TOptions>.HandleUnauthorizedAsync
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleUnauthorizedAsync
  nameWithType.vb: OAuthHandler(Of TOptions).HandleUnauthorizedAsync
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleUnauthorizedAsync
- uid: ChallengeContext
  isExternal: true
  name: ChallengeContext
  nameWithType: ChallengeContext
  fullName: ChallengeContext
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl
  isExternal: false
  name: BuildChallengeUrl
  nameWithType: OAuthHandler<TOptions>.BuildChallengeUrl
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.BuildChallengeUrl
  nameWithType.vb: OAuthHandler(Of TOptions).BuildChallengeUrl
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).BuildChallengeUrl
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope*
  commentId: Overload:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  isExternal: false
  name: FormatScope
  nameWithType: OAuthHandler<TOptions>.FormatScope
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope
  nameWithType.vb: OAuthHandler(Of TOptions).FormatScope
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope
shouldSkipMarkup: true
