### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  id: TypeWithSupersetConstructors
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  children:
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
  - Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors
  nameWithType: TypeWithSupersetConstructors
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: TypeWithSupersetConstructors
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: 'public class TypeWithSupersetConstructors : object'
    content.vb: >-
      Public Class TypeWithSupersetConstructors
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors(IFactoryService)
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors(IFactoryService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public TypeWithSupersetConstructors(IFactoryService factoryService)
    parameters:
    - id: factoryService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public Sub New(factoryService As IFactoryService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors(IFakeService)
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors(IFakeService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public TypeWithSupersetConstructors(IFakeService fakeService)
    parameters:
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    content.vb: Public Sub New(fakeService As IFakeService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors(IFakeService, IFactoryService)
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors(IFakeService, IFactoryService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public TypeWithSupersetConstructors(IFakeService fakeService, IFactoryService factoryService)
    parameters:
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: factoryService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public Sub New(fakeService As IFakeService, factoryService As IFactoryService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors(IFakeService, IFakeMultipleService, IFactoryService)
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors(IFakeService, IFakeMultipleService, IFactoryService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 31
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public TypeWithSupersetConstructors(IFakeService fakeService, IFakeMultipleService multipleService, IFactoryService factoryService)
    parameters:
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: multipleService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
    - id: factoryService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public Sub New(fakeService As IFakeService, multipleService As IFakeMultipleService, factoryService As IFactoryService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)
  commentId: M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)'
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: TypeWithSupersetConstructors(IFakeMultipleService, IFactoryService, IFakeService, IFakeScopedService)
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors(IFakeMultipleService, IFactoryService, IFakeService, IFakeScopedService)
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService, Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: .ctor
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public TypeWithSupersetConstructors(IFakeMultipleService multipleService, IFactoryService factoryService, IFakeService fakeService, IFakeScopedService scopedService)
    parameters:
    - id: multipleService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
    - id: factoryService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    - id: fakeService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    - id: scopedService
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
    content.vb: Public Sub New(multipleService As IFakeMultipleService, factoryService As IFactoryService, fakeService As IFakeService, scopedService As IFakeScopedService)
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
  id: Service
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: TypeWithSupersetConstructors.Service
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Service
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 55
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeService Service { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
    content.vb: Public ReadOnly Property Service As IFakeService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
  id: FactoryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: FactoryService
  nameWithType: TypeWithSupersetConstructors.FactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: FactoryService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 57
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFactoryService FactoryService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
    content.vb: Public ReadOnly Property FactoryService As IFactoryService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
  id: MultipleService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: MultipleService
  nameWithType: TypeWithSupersetConstructors.MultipleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: MultipleService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 59
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeMultipleService MultipleService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
    content.vb: Public ReadOnly Property MultipleService As IFakeMultipleService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
  commentId: P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
  id: ScopedService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors
  langs:
  - csharp
  - vb
  name: ScopedService
  nameWithType: TypeWithSupersetConstructors.ScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ScopedService
    path: ../aspnet/DependencyInjection/src/Microsoft.Extensions.DependencyInjection.Specification.Tests/Fakes/TypeWithSupersetConstructors.cs
    startLine: 61
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Specification.Tests
  namespace: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  syntax:
    content: public IFakeScopedService ScopedService { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
    content.vb: Public ReadOnly Property ScopedService As IFakeScopedService
  overload: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  commentId: N:Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  nameWithType: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor
  isExternal: false
  name: TypeWithSupersetConstructors
  nameWithType: TypeWithSupersetConstructors.TypeWithSupersetConstructors
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.TypeWithSupersetConstructors
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFactoryService
  nameWithType: IFactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeService
  nameWithType: IFakeService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeMultipleService
  nameWithType: IFakeMultipleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
  commentId: T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
  parent: Microsoft.Extensions.DependencyInjection.Specification.Fakes
  isExternal: false
  name: IFakeScopedService
  nameWithType: IFakeScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
  isExternal: false
  name: Service
  nameWithType: TypeWithSupersetConstructors.Service
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
  isExternal: false
  name: FactoryService
  nameWithType: TypeWithSupersetConstructors.FactoryService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
  isExternal: false
  name: MultipleService
  nameWithType: TypeWithSupersetConstructors.MultipleService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService
- uid: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
  isExternal: false
  name: ScopedService
  nameWithType: TypeWithSupersetConstructors.ScopedService
  fullName: Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService
shouldSkipMarkup: true
