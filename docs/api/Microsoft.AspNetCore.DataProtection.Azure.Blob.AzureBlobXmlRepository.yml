### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  id: AzureBlobXmlRepository
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob
  children:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.#ctor(System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob})
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.GetAllElements
  - Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  langs:
  - csharp
  - vb
  name: AzureBlobXmlRepository
  nameWithType: AzureBlobXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: AzureBlobXmlRepository
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nAn <see cref=\"T:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository\"></see> which is backed by Azure Blob Storage.\n"
  remarks: "\nInstances of this type are thread-safe.\n"
  example: []
  syntax:
    content: 'public sealed class AzureBlobXmlRepository : IXmlRepository'
    content.vb: >-
      Public NotInheritable Class AzureBlobXmlRepository
          Implements IXmlRepository
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.#ctor(System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob})
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.#ctor(System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob})
  id: '#ctor(System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob})'
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  langs:
  - csharp
  - vb
  name: AzureBlobXmlRepository(Func<ICloudBlob>)
  nameWithType: AzureBlobXmlRepository.AzureBlobXmlRepository(Func<ICloudBlob>)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.AzureBlobXmlRepository(System.Func<Microsoft.WindowsAzure.Storage.Blob.ICloudBlob>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  summary: "\nCreates a new instance of the <see cref=\"T:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository\"></see>.\n"
  example: []
  syntax:
    content: public AzureBlobXmlRepository(Func<ICloudBlob> blobRefFactory)
    content.vb: Public Sub New(blobRefFactory As Func(Of ICloudBlob))
    parameters:
    - id: blobRefFactory
      type: System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: >-
        A factory which can create <see cref="T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob"></see>

        instances. The factory must be thread-safe for invocation by multiple

        concurrent threads, and each invocation must return a new object.
  nameWithType.vb: AzureBlobXmlRepository.AzureBlobXmlRepository(Func(Of ICloudBlob))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.AzureBlobXmlRepository(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.ICloudBlob))
  name.vb: AzureBlobXmlRepository(Func(Of ICloudBlob))
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.GetAllElements
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.GetAllElements
  id: GetAllElements
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  langs:
  - csharp
  - vb
  name: GetAllElements()
  nameWithType: AzureBlobXmlRepository.GetAllElements()
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.GetAllElements()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: GetAllElements
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  syntax:
    content: public IReadOnlyCollection<XElement> GetAllElements()
    content.vb: Public Function GetAllElements As IReadOnlyCollection(Of XElement)
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  id: StoreElement(System.Xml.Linq.XElement,System.String)
  parent: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository
  langs:
  - csharp
  - vb
  name: StoreElement(XElement, String)
  nameWithType: AzureBlobXmlRepository.StoreElement(XElement, String)
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob.AzureBlobXmlRepository.StoreElement(System.Xml.Linq.XElement, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
      branch: dev
      repo: https://github.com/aspnet/dataprotection
    id: StoreElement
    path: src/Microsoft.AspNetCore.DataProtection.Azure.Blob/AzureBlobXmlRepository.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Azure.Blob
  namespace: Microsoft.AspNetCore.DataProtection.Azure.Blob
  syntax:
    content: public void StoreElement(XElement element, string friendlyName)
    content.vb: Public Sub StoreElement(element As XElement, friendlyName As String)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    - id: friendlyName
      type: System.String
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.Azure.Blob
  commentId: N:Microsoft.AspNetCore.DataProtection.Azure.Blob
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.Azure.Blob
  nameWithType: Microsoft.AspNetCore.DataProtection.Azure.Blob
  fullName: Microsoft.AspNetCore.DataProtection.Azure.Blob
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  parent: Microsoft.AspNetCore.DataProtection.Repositories
  isExternal: false
  name: IXmlRepository
  nameWithType: IXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.Repositories
  commentId: N:Microsoft.AspNetCore.DataProtection.Repositories
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.Repositories
  nameWithType: Microsoft.AspNetCore.DataProtection.Repositories
  fullName: Microsoft.AspNetCore.DataProtection.Repositories
- uid: System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
  commentId: T:System.Func{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
  parent: System
  definition: System.Func`1
  name: Func<ICloudBlob>
  nameWithType: Func<ICloudBlob>
  fullName: System.Func<Microsoft.WindowsAzure.Storage.Blob.ICloudBlob>
  nameWithType.vb: Func(Of ICloudBlob)
  fullname.vb: System.Func(Of Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)
  name.vb: Func(Of ICloudBlob)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    nameWithType: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    nameWithType: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  isExternal: false
  name: GetAllElements()
  nameWithType: IXmlRepository.GetAllElements()
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements()
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
    name: GetAllElements
    nameWithType: IXmlRepository.GetAllElements
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
    name: GetAllElements
    nameWithType: IXmlRepository.GetAllElements
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<XElement>
  nameWithType: IReadOnlyCollection<XElement>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Xml.Linq.XElement>
  nameWithType.vb: IReadOnlyCollection(Of XElement)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Xml.Linq.XElement)
  name.vb: IReadOnlyCollection(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  isExternal: true
  name: StoreElement(XElement, String)
  nameWithType: IXmlRepository.StoreElement(XElement, String)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
    name: StoreElement
    nameWithType: IXmlRepository.StoreElement
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
    name: StoreElement
    nameWithType: IXmlRepository.StoreElement
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
