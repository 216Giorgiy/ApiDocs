### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  id: HtmlContentBuilderExtensions
  parent: Microsoft.AspNetCore.Html
  children:
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,IFormatProvider,System.String,System.Object[])
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String,System.Object[])
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  - Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  langs:
  - csharp
  - vb
  name: HtmlContentBuilderExtensions
  nameWithType: HtmlContentBuilderExtensions
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: HtmlContentBuilderExtensions
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nExtension methods for <xref href=\"Microsoft.AspNetCore.Html.IHtmlContentBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public static class HtmlContentBuilderExtensions : object'
    content.vb: >-
      Public Module HtmlContentBuilderExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String,System.Object[])
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String,System.Object[])
  id: AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendFormat(IHtmlContentBuilder, String, Object[])
  nameWithType: HtmlContentBuilderExtensions.AppendFormat(IHtmlContentBuilder, String, Object[])
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendFormat
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code> to the existing content after replacing each format\nitem with the HTML encoded <see cref=\"!:System.String\"></see> representation of the corresponding item in the\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">args</code> array.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendFormat(this IHtmlContentBuilder builder, string format, params object[] args)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: format
      type: System.String
      description: "\nThe composite format <see cref=\"!:System.String\"></see> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\nThe format string is assumed to be HTML encoded as-provided, and no further encoding will be performed.\n"
    - id: args
      type: System.Object[]
      description: "\nThe object array to format. Each element in the array will be formatted and then HTML encoded.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: A reference to this instance after the append operation has completed.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendFormat(builder As IHtmlContentBuilder, format As String, ParamArray args As Object()) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat*
  nameWithType.vb: HtmlContentBuilderExtensions.AppendFormat(IHtmlContentBuilder, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String, System.Object())
  name.vb: AppendFormat(IHtmlContentBuilder, String, Object())
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,IFormatProvider,System.String,System.Object[])
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,IFormatProvider,System.String,System.Object[])
  id: AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder,IFormatProvider,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendFormat(IHtmlContentBuilder, IFormatProvider, String, Object[])
  nameWithType: HtmlContentBuilderExtensions.AppendFormat(IHtmlContentBuilder, IFormatProvider, String, Object[])
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder, IFormatProvider, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendFormat
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code> to the existing content with information from the\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">formatProvider</code> after replacing each format item with the HTML encoded\n<see cref=\"!:System.String\"></see> representation of the corresponding item in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">args</code> array.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendFormat(this IHtmlContentBuilder builder, IFormatProvider formatProvider, string format, params object[] args)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: formatProvider
      type: IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: "\nThe composite format <see cref=\"!:System.String\"></see> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\nThe format string is assumed to be HTML encoded as-provided, and no further encoding will be performed.\n"
    - id: args
      type: System.Object[]
      description: "\nThe object array to format. Each element in the array will be formatted and then HTML encoded.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: A reference to this instance after the append operation has completed.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendFormat(builder As IHtmlContentBuilder, formatProvider As IFormatProvider, format As String, ParamArray args As Object()) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat*
  nameWithType.vb: HtmlContentBuilderExtensions.AppendFormat(IHtmlContentBuilder, IFormatProvider, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat(Microsoft.AspNetCore.Html.IHtmlContentBuilder, IFormatProvider, System.String, System.Object())
  name.vb: AppendFormat(IHtmlContentBuilder, IFormatProvider, String, Object())
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder)
  id: AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLine(IHtmlContentBuilder)
  nameWithType: HtmlContentBuilderExtensions.AppendLine(IHtmlContentBuilder)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendLine
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends an <see cref=\"!:Environment.NewLine\"></see>.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendLine(this IHtmlContentBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLine(builder As IHtmlContentBuilder) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  id: AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLine(IHtmlContentBuilder, String)
  nameWithType: HtmlContentBuilderExtensions.AppendLine(IHtmlContentBuilder, String)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendLine
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends an <see cref=\"!:Environment.NewLine\"></see> after appending the <see cref=\"!:System.String\"></see> value.\nThe value is treated as unencoded as-provided, and will be HTML encoded before writing to output.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendLine(this IHtmlContentBuilder builder, string unencoded)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: unencoded
      type: System.String
      description: The <see cref="!:System.String"></see> to append.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLine(builder As IHtmlContentBuilder, unencoded As String) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  id: AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLine(IHtmlContentBuilder, IHtmlContent)
  nameWithType: HtmlContentBuilderExtensions.AppendLine(IHtmlContentBuilder, IHtmlContent)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder, Microsoft.AspNetCore.Html.IHtmlContent)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendLine
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends an <see cref=\"!:Environment.NewLine\"></see> after appending the <xref href=\"Microsoft.AspNetCore.Html.IHtmlContent\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendLine(this IHtmlContentBuilder builder, IHtmlContent content)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: content
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> to append.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLine(builder As IHtmlContentBuilder, content As IHtmlContent) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  id: AppendHtmlLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendHtmlLine(IHtmlContentBuilder, String)
  nameWithType: HtmlContentBuilderExtensions.AppendHtmlLine(IHtmlContentBuilder, String)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: AppendHtmlLine
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 154
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAppends an <see cref=\"!:Environment.NewLine\"></see> after appending the <see cref=\"!:System.String\"></see> value.\nThe value is treated as HTML encoded as-provided, and no further encoding will be performed.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder AppendHtmlLine(this IHtmlContentBuilder builder, string encoded)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: encoded
      type: System.String
      description: The HTML encoded <see cref="!:System.String"></see> to append.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendHtmlLine(builder As IHtmlContentBuilder, encoded As String) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  id: SetContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContent(IHtmlContentBuilder, String)
  nameWithType: HtmlContentBuilderExtensions.SetContent(IHtmlContentBuilder, String)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: SetContent
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 173
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nSets the content to the <see cref=\"!:System.String\"></see> value. The value is treated as unencoded as-provided,\nand will be HTML encoded before writing to output.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder SetContent(this IHtmlContentBuilder builder, string unencoded)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: unencoded
      type: System.String
      description: The <see cref="!:System.String"></see> value that replaces the content.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContent(builder As IHtmlContentBuilder, unencoded As String) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  id: SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,Microsoft.AspNetCore.Html.IHtmlContent)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetHtmlContent(IHtmlContentBuilder, IHtmlContent)
  nameWithType: HtmlContentBuilderExtensions.SetHtmlContent(IHtmlContentBuilder, IHtmlContent)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder, Microsoft.AspNetCore.Html.IHtmlContent)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: SetHtmlContent
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nSets the content to the <xref href=\"Microsoft.AspNetCore.Html.IHtmlContent\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder SetHtmlContent(this IHtmlContentBuilder builder, IHtmlContent content)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: content
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> value that replaces the content.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetHtmlContent(builder As IHtmlContentBuilder, content As IHtmlContent) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  id: SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetHtmlContent(IHtmlContentBuilder, String)
  nameWithType: HtmlContentBuilderExtensions.SetHtmlContent(IHtmlContentBuilder, String)
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent(Microsoft.AspNetCore.Html.IHtmlContentBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: SetHtmlContent
    path: ../aspnet/HtmlAbstractions/src/Microsoft.AspNetCore.Html.Abstractions/HtmlContentBuilderExtensions.cs
    startLine: 210
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nSets the content to the <see cref=\"!:System.String\"></see> value. The value is treated as HTML encoded as-provided, and\nno further encoding will be performed.\n"
  example: []
  syntax:
    content: public static IHtmlContentBuilder SetHtmlContent(this IHtmlContentBuilder builder, string encoded)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: encoded
      type: System.String
      description: The HTML encoded <see cref="!:System.String"></see> that replaces the content.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
      description: The <xref href="Microsoft.AspNetCore.Html.IHtmlContentBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetHtmlContent(builder As IHtmlContentBuilder, encoded As String) As IHtmlContentBuilder
  overload: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Html.IHtmlContentBuilder
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContentBuilder
  parent: Microsoft.AspNetCore.Html
  isExternal: false
  name: IHtmlContentBuilder
  nameWithType: IHtmlContentBuilder
  fullName: Microsoft.AspNetCore.Html.IHtmlContentBuilder
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat*
  commentId: Overload:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat
  isExternal: false
  name: AppendFormat
  nameWithType: HtmlContentBuilderExtensions.AppendFormat
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendFormat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: IFormatProvider
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: IFormatProvider
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine*
  commentId: Overload:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine
  isExternal: false
  name: AppendLine
  nameWithType: HtmlContentBuilderExtensions.AppendLine
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendLine
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: false
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine*
  commentId: Overload:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine
  isExternal: false
  name: AppendHtmlLine
  nameWithType: HtmlContentBuilderExtensions.AppendHtmlLine
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.AppendHtmlLine
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent*
  commentId: Overload:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent
  isExternal: false
  name: SetContent
  nameWithType: HtmlContentBuilderExtensions.SetContent
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetContent
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent*
  commentId: Overload:Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent
  isExternal: false
  name: SetHtmlContent
  nameWithType: HtmlContentBuilderExtensions.SetHtmlContent
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilderExtensions.SetHtmlContent
shouldSkipMarkup: true
