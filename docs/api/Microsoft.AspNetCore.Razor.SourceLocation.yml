### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  id: SourceLocation
  parent: Microsoft.AspNetCore.Razor
  children:
  - Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.Int32,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  - Microsoft.AspNetCore.Razor.SourceLocation.Advance(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  - Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  - Microsoft.AspNetCore.Razor.SourceLocation.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  - Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode
  - Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  - Microsoft.AspNetCore.Razor.SourceLocation.op_Addition(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.op_Equality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.SourceLocation.ToString
  - Microsoft.AspNetCore.Razor.SourceLocation.Undefined
  - Microsoft.AspNetCore.Razor.SourceLocation.Zero
  langs:
  - csharp
  - vb
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SourceLocation
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nA location in a Razor file.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct SourceLocation : IEquatable<SourceLocation>, IComparable<SourceLocation>
    content.vb: >-
      <Serializable>

      Public Structure SourceLocation
          Implements IEquatable(Of SourceLocation), IComparable(Of SourceLocation)
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}
  - System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Undefined
  commentId: F:Microsoft.AspNetCore.Razor.SourceLocation.Undefined
  id: Undefined
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Undefined
  nameWithType: SourceLocation.Undefined
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Undefined
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Undefined
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nAn undefined <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly SourceLocation Undefined
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
    content.vb: Public Shared ReadOnly Undefined As SourceLocation
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Zero
  commentId: F:Microsoft.AspNetCore.Razor.SourceLocation.Zero
  id: Zero
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: SourceLocation.Zero
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Zero
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Zero
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation.LineIndex\" data-throw-if-not-resolved=\"false\"></xref>, and\n<xref href=\"Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex\" data-throw-if-not-resolved=\"false\"></xref> initialized to 0.\n"
  example: []
  syntax:
    content: public static readonly SourceLocation Zero
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
    content.vb: Public Shared ReadOnly Zero As SourceLocation
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: SourceLocation(Int32, Int32, Int32)
  nameWithType: SourceLocation.SourceLocation(Int32, Int32, Int32)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.SourceLocation(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SourceLocation(int absoluteIndex, int lineIndex, int characterIndex)
    parameters:
    - id: absoluteIndex
      type: System.Int32
      description: The absolute index.
    - id: lineIndex
      type: System.Int32
      description: The line index.
    - id: characterIndex
      type: System.Int32
      description: The character index.
    content.vb: Public Sub New(absoluteIndex As Integer, lineIndex As Integer, characterIndex As Integer)
  overload: Microsoft.AspNetCore.Razor.SourceLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: SourceLocation(String, Int32, Int32, Int32)
  nameWithType: SourceLocation.SourceLocation(String, Int32, Int32, Int32)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.SourceLocation(System.String, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SourceLocation(string filePath, int absoluteIndex, int lineIndex, int characterIndex)
    parameters:
    - id: filePath
      type: System.String
      description: The file path.
    - id: absoluteIndex
      type: System.Int32
      description: The absolute index.
    - id: lineIndex
      type: System.Int32
      description: The line index.
    - id: characterIndex
      type: System.Int32
      description: The character index.
    content.vb: Public Sub New(filePath As String, absoluteIndex As Integer, lineIndex As Integer, characterIndex As Integer)
  overload: Microsoft.AspNetCore.Razor.SourceLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  id: FilePath
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: SourceLocation.FilePath
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: FilePath
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nPath of the file.\n"
  remarks: >
    When <code>null</code>, the parser assumes the location is in the file currently being processed.
  example: []
  syntax:
    content: public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilePath As String
  overload: Microsoft.AspNetCore.Razor.SourceLocation.FilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  id: AbsoluteIndex
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: AbsoluteIndex
  nameWithType: SourceLocation.AbsoluteIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AbsoluteIndex
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public int AbsoluteIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AbsoluteIndex As Integer
  overload: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  id: LineIndex
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: LineIndex
  nameWithType: SourceLocation.LineIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LineIndex
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets the 1-based index of the line referred to by this Source Location.\n"
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public int LineIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LineIndex As Integer
  overload: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  id: CharacterIndex
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: CharacterIndex
  nameWithType: SourceLocation.CharacterIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CharacterIndex
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public int CharacterIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CharacterIndex As Integer
  overload: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.ToString
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SourceLocation.ToString()
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.AspNetCore.Razor.SourceLocation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SourceLocation.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.AspNetCore.Razor.SourceLocation.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SourceLocation.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  id: Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Equals(SourceLocation)
  nameWithType: SourceLocation.Equals(SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  example: []
  syntax:
    content: public bool Equals(SourceLocation other)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Razor.SourceLocation
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SourceLocation) As Boolean
  overload: Microsoft.AspNetCore.Razor.SourceLocation.Equals*
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  id: CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: CompareTo(SourceLocation)
  nameWithType: SourceLocation.CompareTo(SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CompareTo
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  example: []
  syntax:
    content: public int CompareTo(SourceLocation other)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Razor.SourceLocation
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As SourceLocation) As Integer
  overload: Microsoft.AspNetCore.Razor.SourceLocation.CompareTo*
  implements:
  - System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Advance(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.Advance(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  id: Advance(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Advance(SourceLocation, String)
  nameWithType: SourceLocation.Advance(SourceLocation, String)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Advance(Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Advance
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nAdvances the <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref> by the length of the <span class=\"paramref\">text</span>.\n"
  example: []
  syntax:
    content: public static SourceLocation Advance(SourceLocation left, string text)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The <xref href="Microsoft.AspNetCore.Razor.SourceLocation" data-throw-if-not-resolved="false"></xref> to advance.
    - id: text
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to advance <span class="paramref">left</span> by.
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The advanced <xref href="Microsoft.AspNetCore.Razor.SourceLocation" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Advance(left As SourceLocation, text As String) As SourceLocation
  overload: Microsoft.AspNetCore.Razor.SourceLocation.Advance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Addition(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_Addition(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_Addition(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Addition(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.Addition(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Addition(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Addition
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nAdds two <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public static SourceLocation operator +(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: A <xref href="Microsoft.AspNetCore.Razor.SourceLocation" data-throw-if-not-resolved="false"></xref> that is the sum of the left and right operands.
    content.vb: Public Shared Operator +(left As SourceLocation, right As SourceLocation) As SourceLocation
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_Addition*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      if the <xref href="Microsoft.AspNetCore.Razor.SourceLocation.FilePath" data-throw-if-not-resolved="false"></xref> of the left and right operands

      are different, and neither is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_Subtraction(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Subtraction(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.Subtraction(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Subtraction(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Subtraction
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 190
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nSubtracts two <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public static SourceLocation operator -(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: A <xref href="Microsoft.AspNetCore.Razor.SourceLocation" data-throw-if-not-resolved="false"></xref> that is the difference of the left and right operands.
    content.vb: Public Shared Operator -(left As SourceLocation, right As SourceLocation) As SourceLocation
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      if the <xref href="Microsoft.AspNetCore.Razor.SourceLocation.FilePath" data-throw-if-not-resolved="false"></xref> of the left and right operands

      are different.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_LessThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: LessThan(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.LessThan(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.LessThan(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_LessThan
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 215
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDetermines whether the first operand is less than the second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: System.Boolean
      description: <code>true</code> if <span class="paramref">left</span> is less than <span class="paramref">right</span>.
    content.vb: Public Shared Operator <(left As SourceLocation, right As SourceLocation) As Boolean
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_GreaterThan(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: GreaterThan(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.GreaterThan(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.GreaterThan(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_GreaterThan
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDetermines whether the first operand is greater than the second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: System.Boolean
      description: <code>true</code> if <span class="paramref">left</span> is greater than <span class="paramref">right</span>.
    content.vb: Public Shared Operator>(left As SourceLocation, right As SourceLocation) As Boolean
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Equality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_Equality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_Equality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Equality(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.Equality(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Equality(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Equality
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 237
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDetermines whether the operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: System.Boolean
      description: <code>true</code> if <span class="paramref">left</span> and <span class="paramref">right</span> are equal.
    content.vb: Public Shared Operator =(left As SourceLocation, right As SourceLocation) As Boolean
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  id: op_Inequality(Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.SourceLocation
  langs:
  - csharp
  - vb
  name: Inequality(SourceLocation, SourceLocation)
  nameWithType: SourceLocation.Inequality(SourceLocation, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Inequality(Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/SourceLocation.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Inequality
    path: ../aspnet/Razor/src/Microsoft.AspNetCore.Razor/SourceLocation.cs
    startLine: 248
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDetermines whether the operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(SourceLocation left, SourceLocation right)
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The left operand.
    - id: right
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The right operand.
    return:
      type: System.Boolean
      description: <code>true</code> if <span class="paramref">left</span> and <span class="paramref">right</span> are not equal.
    content.vb: Public Shared Operator <>(left As SourceLocation, right As SourceLocation) As Boolean
  overload: Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SourceLocation>
  nameWithType: IEquatable<SourceLocation>
  fullName: System.IEquatable<Microsoft.AspNetCore.Razor.SourceLocation>
  nameWithType.vb: IEquatable(Of SourceLocation)
  fullName.vb: System.IEquatable(Of Microsoft.AspNetCore.Razor.SourceLocation)
  name.vb: IEquatable(Of SourceLocation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}
  commentId: T:System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}
  parent: System
  definition: System.IComparable`1
  name: IComparable<SourceLocation>
  nameWithType: IComparable<SourceLocation>
  fullName: System.IComparable<Microsoft.AspNetCore.Razor.SourceLocation>
  nameWithType.vb: IComparable(Of SourceLocation)
  fullName.vb: System.IComparable(Of Microsoft.AspNetCore.Razor.SourceLocation)
  name.vb: IComparable(Of SourceLocation)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
- uid: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
- uid: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
- uid: Microsoft.AspNetCore.Razor.SourceLocation.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.#ctor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation.SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.SourceLocation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.SourceLocation.FilePath*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  isExternal: false
  name: FilePath
  nameWithType: SourceLocation.FilePath
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.FilePath
- uid: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
  isExternal: false
  name: AbsoluteIndex
  nameWithType: SourceLocation.AbsoluteIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.AbsoluteIndex
- uid: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
  isExternal: false
  name: LineIndex
  nameWithType: SourceLocation.LineIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.LineIndex
- uid: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
  isExternal: false
  name: CharacterIndex
  nameWithType: SourceLocation.CharacterIndex
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.CharacterIndex
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.SourceLocation.ToString*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.ToString
  isExternal: false
  name: ToString
  nameWithType: SourceLocation.ToString
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Equals*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.Equals
  isExternal: false
  name: Equals
  nameWithType: SourceLocation.Equals
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: SourceLocation.GetHashCode
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.GetHashCode
- uid: System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  parent: System.IEquatable{Microsoft.AspNetCore.Razor.SourceLocation}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SourceLocation)
  nameWithType: IEquatable<SourceLocation>.Equals(SourceLocation)
  fullName: System.IEquatable<Microsoft.AspNetCore.Razor.SourceLocation>.Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: IEquatable(Of SourceLocation).Equals(SourceLocation)
  fullName.vb: System.IEquatable(Of Microsoft.AspNetCore.Razor.SourceLocation).Equals(Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SourceLocation>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Razor.SourceLocation>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SourceLocation).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Razor.SourceLocation).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.SourceLocation.CompareTo*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: SourceLocation.CompareTo
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.CompareTo
- uid: System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  parent: System.IComparable{Microsoft.AspNetCore.Razor.SourceLocation}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(SourceLocation)
  nameWithType: IComparable<SourceLocation>.CompareTo(SourceLocation)
  fullName: System.IComparable<Microsoft.AspNetCore.Razor.SourceLocation>.CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: IComparable(Of SourceLocation).CompareTo(SourceLocation)
  fullName.vb: System.IComparable(Of Microsoft.AspNetCore.Razor.SourceLocation).CompareTo(Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<SourceLocation>.CompareTo
    fullName: System.IComparable<Microsoft.AspNetCore.Razor.SourceLocation>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of SourceLocation).CompareTo
    fullName: System.IComparable(Of Microsoft.AspNetCore.Razor.SourceLocation).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.SourceLocation.Advance*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.Advance
  isExternal: false
  name: Advance
  nameWithType: SourceLocation.Advance
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Advance
- uid: Microsoft.AspNetCore.Razor.SourceLocation.FilePath
  commentId: P:Microsoft.AspNetCore.Razor.SourceLocation.FilePath
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Addition*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_Addition
  isExternal: false
  name: Addition
  nameWithType: SourceLocation.Addition
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Addition
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_Subtraction
  isExternal: false
  name: Subtraction
  nameWithType: SourceLocation.Subtraction
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Subtraction
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: SourceLocation.LessThan
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.LessThan
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: SourceLocation.GreaterThan
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.GreaterThan
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Equality*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_Equality
  isExternal: false
  name: Equality
  nameWithType: SourceLocation.Equality
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Equality
- uid: Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality*
  commentId: Overload:Microsoft.AspNetCore.Razor.SourceLocation.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: SourceLocation.Inequality
  fullName: Microsoft.AspNetCore.Razor.SourceLocation.Inequality
shouldSkipMarkup: true
