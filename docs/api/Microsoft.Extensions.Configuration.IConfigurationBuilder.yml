### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  id: IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)
  - Microsoft.Extensions.Configuration.IConfigurationBuilder.Build
  - Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  - Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  langs:
  - csharp
  - vb
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: IConfigurationBuilder
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.Abstractions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nRepresents a type used to build application configuration.\n"
  example: []
  syntax:
    content: public interface IConfigurationBuilder
    content.vb: Public Interface IConfigurationBuilder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  commentId: P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  id: Properties
  parent: Microsoft.Extensions.Configuration.IConfigurationBuilder
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: IConfigurationBuilder.Properties
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Properties
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Configuration.Abstractions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets a key/value collection that can be used to share data between the <xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder\" data-throw-if-not-resolved=\"false\"></xref>\nand the registered <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: Dictionary<string, object> Properties { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.Object}
    content.vb: ReadOnly Property Properties As Dictionary(Of String, Object)
  overload: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  commentId: P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  id: Sources
  parent: Microsoft.Extensions.Configuration.IConfigurationBuilder
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: IConfigurationBuilder.Sources
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Sources
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Configuration.Abstractions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets the sources used to obtain configuation values\n"
  example: []
  syntax:
    content: IEnumerable<IConfigurationSource> Sources { get; }
    parameters: []
    return:
      type: IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSource}
    content.vb: ReadOnly Property Sources As IEnumerable(Of IConfigurationSource)
  overload: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)
  commentId: M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)
  id: Add(Microsoft.Extensions.Configuration.IConfigurationSource)
  parent: Microsoft.Extensions.Configuration.IConfigurationBuilder
  langs:
  - csharp
  - vb
  name: Add(IConfigurationSource)
  nameWithType: IConfigurationBuilder.Add(IConfigurationSource)
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Add
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.Configuration.Abstractions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds a new configuration source.\n"
  example: []
  syntax:
    content: IConfigurationBuilder Add(IConfigurationSource source)
    parameters:
    - id: source
      type: Microsoft.Extensions.Configuration.IConfigurationSource
      description: The configuration source to add.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The same <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function Add(source As IConfigurationSource) As IConfigurationBuilder
  overload: Microsoft.Extensions.Configuration.IConfigurationBuilder.Add*
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Build
  commentId: M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Build
  id: Build
  parent: Microsoft.Extensions.Configuration.IConfigurationBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IConfigurationBuilder.Build()
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Build
    path: ../aspnet/Configuration/src/Microsoft.Extensions.Configuration.Abstractions/IConfigurationBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.Configuration.Abstractions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nBuilds an <xref href=\"Microsoft.Extensions.Configuration.IConfiguration\" data-throw-if-not-resolved=\"false\"></xref> with keys and values from the set of sources registered in\n<xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IConfigurationRoot Build()
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: An <xref href="Microsoft.Extensions.Configuration.IConfigurationRoot" data-throw-if-not-resolved="false"></xref> with keys and values from the registered sources.
    content.vb: Function Build As IConfigurationRoot
  overload: Microsoft.Extensions.Configuration.IConfigurationBuilder.Build*
references:
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: Microsoft.Extensions.Configuration.IConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationSource
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationSource
  nameWithType: IConfigurationSource
  fullName: Microsoft.Extensions.Configuration.IConfigurationSource
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties*
  commentId: Overload:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  isExternal: false
  name: Properties
  nameWithType: IConfigurationBuilder.Properties
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
- uid: Dictionary{System.String,System.Object}
  commentId: '!:Dictionary{System.String,System.Object}'
  definition: Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources*
  commentId: Overload:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  isExternal: false
  name: Sources
  nameWithType: IConfigurationBuilder.Sources
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
- uid: IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSource}
  commentId: '!:IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSource}'
  definition: IEnumerable`1
  name: IEnumerable<IConfigurationSource>
  nameWithType: IEnumerable<IConfigurationSource>
  fullName: IEnumerable<Microsoft.Extensions.Configuration.IConfigurationSource>
  nameWithType.vb: IEnumerable(Of IConfigurationSource)
  fullName.vb: IEnumerable(Of Microsoft.Extensions.Configuration.IConfigurationSource)
  name.vb: IEnumerable(Of IConfigurationSource)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource
    name: IConfigurationSource
    nameWithType: IConfigurationSource
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource
    name: IConfigurationSource
    nameWithType: IConfigurationSource
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Add*
  commentId: Overload:Microsoft.Extensions.Configuration.IConfigurationBuilder.Add
  isExternal: false
  name: Add
  nameWithType: IConfigurationBuilder.Add
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Add
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
  commentId: P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Build*
  commentId: Overload:Microsoft.Extensions.Configuration.IConfigurationBuilder.Build
  isExternal: false
  name: Build
  nameWithType: IConfigurationBuilder.Build
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Build
shouldSkipMarkup: true
