### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  id: IServiceProviderFactory`1
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  langs:
  - csharp
  - vb
  name: IServiceProviderFactory<TContainerBuilder>
  nameWithType: IServiceProviderFactory<TContainerBuilder>
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: IServiceProviderFactory
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nProvides an extension point for creating a container specific builder and an <see cref=\"T:System.IServiceProvider\"></see>.\n"
  example: []
  syntax:
    content: public interface IServiceProviderFactory<TContainerBuilder>
    content.vb: Public Interface IServiceProviderFactory(Of TContainerBuilder)
    typeParameters:
    - id: TContainerBuilder
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder)
  name.vb: IServiceProviderFactory(Of TContainerBuilder)
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  langs:
  - csharp
  - vb
  name: CreateBuilder(IServiceCollection)
  nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateBuilder(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: CreateBuilder
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nCreates a container builder from an <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceCollection\"></see>.\n"
  example: []
  syntax:
    content: TContainerBuilder CreateBuilder(IServiceCollection services)
    content.vb: Function CreateBuilder(services As IServiceCollection) As TContainerBuilder
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The collection of services
    return:
      type: '{TContainerBuilder}'
      description: A container builder that can be used to create an <see cref="T:System.IServiceProvider"></see>.
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder).CreateBuilder(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)
  id: CreateServiceProvider(`0)
  parent: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceProvider(TContainerBuilder)
  nameWithType: IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider(TContainerBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>.CreateServiceProvider(TContainerBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: CreateServiceProvider
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceProviderFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nCreates an <see cref=\"T:System.IServiceProvider\"></see> from the container builder.\n"
  example: []
  syntax:
    content: IServiceProvider CreateServiceProvider(TContainerBuilder containerBuilder)
    content.vb: Function CreateServiceProvider(containerBuilder As TContainerBuilder) As IServiceProvider
    parameters:
    - id: containerBuilder
      type: '{TContainerBuilder}'
      description: The container builder
    return:
      type: System.IServiceProvider
      description: An <see cref="T:System.IServiceProvider"></see>
  nameWithType.vb: IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider(TContainerBuilder)
  fullName.vb: Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder).CreateServiceProvider(TContainerBuilder)
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: '{TContainerBuilder}'
  commentId: '!:TContainerBuilder'
  definition: TContainerBuilder
  name: TContainerBuilder
  nameWithType: TContainerBuilder
  fullName: TContainerBuilder
- uid: TContainerBuilder
  isExternal: false
  name: TContainerBuilder
  nameWithType: TContainerBuilder
  fullName: TContainerBuilder
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
