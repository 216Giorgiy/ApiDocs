### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  commentId: T:Microsoft.AspNetCore.Http.Headers.RequestHeaders
  id: RequestHeaders
  parent: Microsoft.AspNetCore.Http.Headers
  children:
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor(IHeaderDictionary)
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append(System.String,System.Object)
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList``1(System.String,System.Collections.Generic.IList{``0})
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get``1(System.String)
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList``1(System.String)
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set(System.String,System.Object)
  - Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList``1(System.String,System.Collections.Generic.IList{``0})
  langs:
  - csharp
  - vb
  name: RequestHeaders
  nameWithType: RequestHeaders
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RequestHeaders
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public class RequestHeaders
    content.vb: Public Class RequestHeaders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor(IHeaderDictionary)
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor(IHeaderDictionary)
  id: '#ctor(IHeaderDictionary)'
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: RequestHeaders(IHeaderDictionary)
  nameWithType: RequestHeaders.RequestHeaders(IHeaderDictionary)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.RequestHeaders(IHeaderDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public RequestHeaders(IHeaderDictionary headers)
    parameters:
    - id: headers
      type: IHeaderDictionary
    content.vb: Public Sub New(headers As IHeaderDictionary)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
  id: Headers
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: RequestHeaders.Headers
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Headers
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IHeaderDictionary Headers { get; }
    parameters: []
    return:
      type: IHeaderDictionary
    content.vb: Public ReadOnly Property Headers As IHeaderDictionary
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
  id: Accept
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Accept
  nameWithType: RequestHeaders.Accept
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Accept
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<MediaTypeHeaderValue> Accept { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{MediaTypeHeaderValue}
    content.vb: Public Property Accept As IList(Of MediaTypeHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
  id: AcceptCharset
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: AcceptCharset
  nameWithType: RequestHeaders.AcceptCharset
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AcceptCharset
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<StringWithQualityHeaderValue> AcceptCharset { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{StringWithQualityHeaderValue}
    content.vb: Public Property AcceptCharset As IList(Of StringWithQualityHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
  id: AcceptEncoding
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: AcceptEncoding
  nameWithType: RequestHeaders.AcceptEncoding
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AcceptEncoding
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<StringWithQualityHeaderValue> AcceptEncoding { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{StringWithQualityHeaderValue}
    content.vb: Public Property AcceptEncoding As IList(Of StringWithQualityHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  nameWithType: RequestHeaders.AcceptLanguage
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AcceptLanguage
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<StringWithQualityHeaderValue> AcceptLanguage { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{StringWithQualityHeaderValue}
    content.vb: Public Property AcceptLanguage As IList(Of StringWithQualityHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
  id: CacheControl
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: CacheControl
  nameWithType: RequestHeaders.CacheControl
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: CacheControl
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public CacheControlHeaderValue CacheControl { get; set; }
    parameters: []
    return:
      type: CacheControlHeaderValue
    content.vb: Public Property CacheControl As CacheControlHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
  id: ContentDisposition
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: ContentDisposition
  nameWithType: RequestHeaders.ContentDisposition
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContentDisposition
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public ContentDispositionHeaderValue ContentDisposition { get; set; }
    parameters: []
    return:
      type: ContentDispositionHeaderValue
    content.vb: Public Property ContentDisposition As ContentDispositionHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
  id: ContentLength
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: ContentLength
  nameWithType: RequestHeaders.ContentLength
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContentLength
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public long ? ContentLength { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property ContentLength As Long?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
  id: ContentRange
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: ContentRange
  nameWithType: RequestHeaders.ContentRange
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContentRange
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public ContentRangeHeaderValue ContentRange { get; set; }
    parameters: []
    return:
      type: ContentRangeHeaderValue
    content.vb: Public Property ContentRange As ContentRangeHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
  id: ContentType
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: RequestHeaders.ContentType
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContentType
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public MediaTypeHeaderValue ContentType { get; set; }
    parameters: []
    return:
      type: MediaTypeHeaderValue
    content.vb: Public Property ContentType As MediaTypeHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
  id: Cookie
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Cookie
  nameWithType: RequestHeaders.Cookie
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Cookie
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 131
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<CookieHeaderValue> Cookie { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{CookieHeaderValue}
    content.vb: Public Property Cookie As IList(Of CookieHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
  id: Date
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: RequestHeaders.Date
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Date
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public DateTimeOffset? Date { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property Date As DateTimeOffset?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
  id: Expires
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Expires
  nameWithType: RequestHeaders.Expires
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Expires
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public DateTimeOffset? Expires { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property Expires As DateTimeOffset?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
  id: Host
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: RequestHeaders.Host
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Host
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public HostString Host { get; set; }
    parameters: []
    return:
      type: HostString
    content.vb: Public Property Host As HostString
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
  id: IfMatch
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: IfMatch
  nameWithType: RequestHeaders.IfMatch
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IfMatch
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<EntityTagHeaderValue> IfMatch { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{EntityTagHeaderValue}
    content.vb: Public Property IfMatch As IList(Of EntityTagHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
  id: IfModifiedSince
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: IfModifiedSince
  nameWithType: RequestHeaders.IfModifiedSince
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IfModifiedSince
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public DateTimeOffset? IfModifiedSince { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property IfModifiedSince As DateTimeOffset?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
  id: IfNoneMatch
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: IfNoneMatch
  nameWithType: RequestHeaders.IfNoneMatch
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IfNoneMatch
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<EntityTagHeaderValue> IfNoneMatch { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{EntityTagHeaderValue}
    content.vb: Public Property IfNoneMatch As IList(Of EntityTagHeaderValue)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
  id: IfRange
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: IfRange
  nameWithType: RequestHeaders.IfRange
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IfRange
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 215
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public RangeConditionHeaderValue IfRange { get; set; }
    parameters: []
    return:
      type: RangeConditionHeaderValue
    content.vb: Public Property IfRange As RangeConditionHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
  id: IfUnmodifiedSince
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: IfUnmodifiedSince
  nameWithType: RequestHeaders.IfUnmodifiedSince
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IfUnmodifiedSince
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public DateTimeOffset? IfUnmodifiedSince { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property IfUnmodifiedSince As DateTimeOffset?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
  id: LastModified
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: RequestHeaders.LastModified
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: LastModified
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 239
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public DateTimeOffset? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property LastModified As DateTimeOffset?
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
  commentId: P:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
  id: Range
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: RequestHeaders.Range
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Range
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 251
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public RangeHeaderValue Range { get; set; }
    parameters: []
    return:
      type: RangeHeaderValue
    content.vb: Public Property Range As RangeHeaderValue
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get``1(System.String)
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get``1(System.String)
  id: Get``1(System.String)
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: RequestHeaders.Get<T>(String)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Get
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 263
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public T Get<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Get(Of T)(name As String) As T
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get*
  nameWithType.vb: RequestHeaders.Get(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList``1(System.String)
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList``1(System.String)
  id: GetList``1(System.String)
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: GetList<T>(String)
  nameWithType: RequestHeaders.GetList<T>(String)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetList
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 268
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public IList<T> GetList<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IList{{T}}
    content.vb: Public Function GetList(Of T)(name As String) As IList(Of T)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList*
  nameWithType.vb: RequestHeaders.GetList(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList(Of T)(System.String)
  name.vb: GetList(Of T)(String)
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set(System.String,System.Object)
  id: Set(System.String,System.Object)
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Set(String, Object)
  nameWithType: RequestHeaders.Set(String, Object)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Set
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 273
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public void Set(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub Set(name As String, value As Object)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList``1(System.String,System.Collections.Generic.IList{``0})
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList``1(System.String,System.Collections.Generic.IList{``0})
  id: SetList``1(System.String,System.Collections.Generic.IList{``0})
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: SetList<T>(String, IList<T>)
  nameWithType: RequestHeaders.SetList<T>(String, IList<T>)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList<T>(System.String, System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SetList
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 283
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public void SetList<T>(string name, IList<T> values)
    parameters:
    - id: name
      type: System.String
    - id: values
      type: System.Collections.Generic.IList{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub SetList(Of T)(name As String, values As IList(Of T))
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList*
  nameWithType.vb: RequestHeaders.SetList(Of T)(String, IList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList(Of T)(System.String, System.Collections.Generic.IList(Of T))
  name.vb: SetList(Of T)(String, IList(Of T))
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append(System.String,System.Object)
  id: Append(System.String,System.Object)
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: Append(String, Object)
  nameWithType: RequestHeaders.Append(String, Object)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Append
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 293
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public void Append(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub Append(name As String, value As Object)
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList``1(System.String,System.Collections.Generic.IList{``0})
  commentId: M:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList``1(System.String,System.Collections.Generic.IList{``0})
  id: AppendList``1(System.String,System.Collections.Generic.IList{``0})
  parent: Microsoft.AspNetCore.Http.Headers.RequestHeaders
  langs:
  - csharp
  - vb
  name: AppendList<T>(String, IList<T>)
  nameWithType: RequestHeaders.AppendList<T>(String, IList<T>)
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList<T>(System.String, System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AppendList
    path: ../aspnet/HttpAbstractions/src/Microsoft.AspNetCore.Http.Extensions/RequestHeaders.cs
    startLine: 308
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Headers
  syntax:
    content: public void AppendList<T>(string name, IList<T> values)
    parameters:
    - id: name
      type: System.String
    - id: values
      type: System.Collections.Generic.IList{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub AppendList(Of T)(name As String, values As IList(Of T))
  overload: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList*
  nameWithType.vb: RequestHeaders.AppendList(Of T)(String, IList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList(Of T)(System.String, System.Collections.Generic.IList(Of T))
  name.vb: AppendList(Of T)(String, IList(Of T))
references:
- uid: Microsoft.AspNetCore.Http.Headers
  commentId: N:Microsoft.AspNetCore.Http.Headers
  isExternal: false
  name: Microsoft.AspNetCore.Http.Headers
  nameWithType: Microsoft.AspNetCore.Http.Headers
  fullName: Microsoft.AspNetCore.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.#ctor
  isExternal: false
  name: RequestHeaders
  nameWithType: RequestHeaders.RequestHeaders
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.RequestHeaders
- uid: IHeaderDictionary
  isExternal: true
  name: IHeaderDictionary
  nameWithType: IHeaderDictionary
  fullName: IHeaderDictionary
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
  isExternal: false
  name: Headers
  nameWithType: RequestHeaders.Headers
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Headers
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
  isExternal: false
  name: Accept
  nameWithType: RequestHeaders.Accept
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Accept
- uid: System.Collections.Generic.IList{MediaTypeHeaderValue}
  commentId: T:System.Collections.Generic.IList{MediaTypeHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MediaTypeHeaderValue>
  nameWithType: IList<MediaTypeHeaderValue>
  fullName: System.Collections.Generic.IList<MediaTypeHeaderValue>
  nameWithType.vb: IList(Of MediaTypeHeaderValue)
  fullName.vb: System.Collections.Generic.IList(Of MediaTypeHeaderValue)
  name.vb: IList(Of MediaTypeHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: MediaTypeHeaderValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: MediaTypeHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
  isExternal: false
  name: AcceptCharset
  nameWithType: RequestHeaders.AcceptCharset
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptCharset
- uid: System.Collections.Generic.IList{StringWithQualityHeaderValue}
  commentId: T:System.Collections.Generic.IList{StringWithQualityHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<StringWithQualityHeaderValue>
  nameWithType: IList<StringWithQualityHeaderValue>
  fullName: System.Collections.Generic.IList<StringWithQualityHeaderValue>
  nameWithType.vb: IList(Of StringWithQualityHeaderValue)
  fullName.vb: System.Collections.Generic.IList(Of StringWithQualityHeaderValue)
  name.vb: IList(Of StringWithQualityHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StringWithQualityHeaderValue
    name: StringWithQualityHeaderValue
    nameWithType: StringWithQualityHeaderValue
    fullName: StringWithQualityHeaderValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StringWithQualityHeaderValue
    name: StringWithQualityHeaderValue
    nameWithType: StringWithQualityHeaderValue
    fullName: StringWithQualityHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
  isExternal: false
  name: AcceptEncoding
  nameWithType: RequestHeaders.AcceptEncoding
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptEncoding
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
  isExternal: false
  name: AcceptLanguage
  nameWithType: RequestHeaders.AcceptLanguage
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AcceptLanguage
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
  isExternal: false
  name: CacheControl
  nameWithType: RequestHeaders.CacheControl
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.CacheControl
- uid: CacheControlHeaderValue
  isExternal: true
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: CacheControlHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
  isExternal: false
  name: ContentDisposition
  nameWithType: RequestHeaders.ContentDisposition
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentDisposition
- uid: ContentDispositionHeaderValue
  isExternal: true
  name: ContentDispositionHeaderValue
  nameWithType: ContentDispositionHeaderValue
  fullName: ContentDispositionHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
  isExternal: false
  name: ContentLength
  nameWithType: RequestHeaders.ContentLength
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentLength
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
  isExternal: false
  name: ContentRange
  nameWithType: RequestHeaders.ContentRange
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentRange
- uid: ContentRangeHeaderValue
  isExternal: true
  name: ContentRangeHeaderValue
  nameWithType: ContentRangeHeaderValue
  fullName: ContentRangeHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
  isExternal: false
  name: ContentType
  nameWithType: RequestHeaders.ContentType
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.ContentType
- uid: MediaTypeHeaderValue
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: MediaTypeHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
  isExternal: false
  name: Cookie
  nameWithType: RequestHeaders.Cookie
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Cookie
- uid: System.Collections.Generic.IList{CookieHeaderValue}
  commentId: T:System.Collections.Generic.IList{CookieHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CookieHeaderValue>
  nameWithType: IList<CookieHeaderValue>
  fullName: System.Collections.Generic.IList<CookieHeaderValue>
  nameWithType.vb: IList(Of CookieHeaderValue)
  fullName.vb: System.Collections.Generic.IList(Of CookieHeaderValue)
  name.vb: IList(Of CookieHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CookieHeaderValue
    name: CookieHeaderValue
    nameWithType: CookieHeaderValue
    fullName: CookieHeaderValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CookieHeaderValue
    name: CookieHeaderValue
    nameWithType: CookieHeaderValue
    fullName: CookieHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
  isExternal: false
  name: Date
  nameWithType: RequestHeaders.Date
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Date
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
  isExternal: false
  name: Expires
  nameWithType: RequestHeaders.Expires
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Expires
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
  isExternal: false
  name: Host
  nameWithType: RequestHeaders.Host
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Host
- uid: HostString
  isExternal: true
  name: HostString
  nameWithType: HostString
  fullName: HostString
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
  isExternal: false
  name: IfMatch
  nameWithType: RequestHeaders.IfMatch
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfMatch
- uid: System.Collections.Generic.IList{EntityTagHeaderValue}
  commentId: T:System.Collections.Generic.IList{EntityTagHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EntityTagHeaderValue>
  nameWithType: IList<EntityTagHeaderValue>
  fullName: System.Collections.Generic.IList<EntityTagHeaderValue>
  nameWithType.vb: IList(Of EntityTagHeaderValue)
  fullName.vb: System.Collections.Generic.IList(Of EntityTagHeaderValue)
  name.vb: IList(Of EntityTagHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EntityTagHeaderValue
    name: EntityTagHeaderValue
    nameWithType: EntityTagHeaderValue
    fullName: EntityTagHeaderValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EntityTagHeaderValue
    name: EntityTagHeaderValue
    nameWithType: EntityTagHeaderValue
    fullName: EntityTagHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
  isExternal: false
  name: IfModifiedSince
  nameWithType: RequestHeaders.IfModifiedSince
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfModifiedSince
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
  isExternal: false
  name: IfNoneMatch
  nameWithType: RequestHeaders.IfNoneMatch
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfNoneMatch
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
  isExternal: false
  name: IfRange
  nameWithType: RequestHeaders.IfRange
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfRange
- uid: RangeConditionHeaderValue
  commentId: '!:RangeConditionHeaderValue'
  isExternal: true
  name: RangeConditionHeaderValue
  nameWithType: RangeConditionHeaderValue
  fullName: RangeConditionHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
  isExternal: false
  name: IfUnmodifiedSince
  nameWithType: RequestHeaders.IfUnmodifiedSince
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.IfUnmodifiedSince
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
  isExternal: false
  name: LastModified
  nameWithType: RequestHeaders.LastModified
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.LastModified
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
  isExternal: false
  name: Range
  nameWithType: RequestHeaders.Range
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Range
- uid: RangeHeaderValue
  commentId: '!:RangeHeaderValue'
  isExternal: true
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: RangeHeaderValue
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get
  isExternal: false
  name: Get
  nameWithType: RequestHeaders.Get
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList
  isExternal: false
  name: GetList
  nameWithType: RequestHeaders.GetList
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.GetList
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set
  isExternal: false
  name: Set
  nameWithType: RequestHeaders.Set
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Set
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList
  isExternal: false
  name: SetList
  nameWithType: RequestHeaders.SetList
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.SetList
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append
  isExternal: false
  name: Append
  nameWithType: RequestHeaders.Append
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.Append
- uid: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList*
  commentId: Overload:Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList
  isExternal: false
  name: AppendList
  nameWithType: RequestHeaders.AppendList
  fullName: Microsoft.AspNetCore.Http.Headers.RequestHeaders.AppendList
shouldSkipMarkup: true
