### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory
  id: IAuthorizationHandlerContextFactory
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory.CreateContext(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  langs:
  - csharp
  - vb
  name: IAuthorizationHandlerContextFactory
  nameWithType: IAuthorizationHandlerContextFactory
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationHandlerContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: IAuthorizationHandlerContextFactory
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationHandlerContextFactory.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nA type used to provide a <see cref=\"T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext\"></see> used for authorization.\n"
  example: []
  syntax:
    content: public interface IAuthorizationHandlerContextFactory
    content.vb: Public Interface IAuthorizationHandlerContextFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory.CreateContext(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory.CreateContext(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  id: CreateContext(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory
  langs:
  - csharp
  - vb
  name: CreateContext(IEnumerable<IAuthorizationRequirement>, ClaimsPrincipal, Object)
  nameWithType: IAuthorizationHandlerContextFactory.CreateContext(IEnumerable<IAuthorizationRequirement>, ClaimsPrincipal, Object)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory.CreateContext(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>, System.Security.Claims.ClaimsPrincipal, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationHandlerContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/security
    id: CreateContext
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationHandlerContextFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a <see cref=\"T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext\"></see> used for authorization.\n"
  example: []
  syntax:
    content: AuthorizationHandlerContext CreateContext(IEnumerable<IAuthorizationRequirement> requirements, ClaimsPrincipal user, object resource)
    content.vb: Function CreateContext(requirements As IEnumerable(Of IAuthorizationRequirement), user As ClaimsPrincipal, resource As Object) As AuthorizationHandlerContext
    parameters:
    - id: requirements
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
      description: The requirements to evaluate.
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
      description: The user to evaluate the requirements against.
    - id: resource
      type: System.Object
      description: "\nAn optional resource the policy should be checked with.\nIf a resource is not required for policy evaluation you may pass null as the value.\n"
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext"></see>.
  nameWithType.vb: IAuthorizationHandlerContextFactory.CreateContext(IEnumerable(Of IAuthorizationRequirement), ClaimsPrincipal, Object)
  fullName.vb: Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory.CreateContext(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement), System.Security.Claims.ClaimsPrincipal, System.Object)
  name.vb: CreateContext(IEnumerable(Of IAuthorizationRequirement), ClaimsPrincipal, Object)
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizationRequirement>
  nameWithType: IEnumerable<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IEnumerable(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IEnumerable(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
