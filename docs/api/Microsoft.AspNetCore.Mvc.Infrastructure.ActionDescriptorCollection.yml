### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  commentId: T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  id: ActionDescriptorCollection
  parent: Microsoft.AspNetCore.Mvc.Infrastructure
  children:
  - Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor(System.Collections.Generic.IReadOnlyList{ActionDescriptor},System.Int32)
  - Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
  - Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  langs:
  - csharp
  - vb
  name: ActionDescriptorCollection
  nameWithType: ActionDescriptorCollection
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionDescriptorCollection
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Infrastructure
  summary: "\nA cached collection of <see cref=\"!:ActionDescriptor\"></see>.\n"
  example: []
  syntax:
    content: public class ActionDescriptorCollection
    content.vb: Public Class ActionDescriptorCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor(System.Collections.Generic.IReadOnlyList{ActionDescriptor},System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor(System.Collections.Generic.IReadOnlyList{ActionDescriptor},System.Int32)
  id: '#ctor(System.Collections.Generic.IReadOnlyList{ActionDescriptor},System.Int32)'
  parent: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  langs:
  - csharp
  - vb
  name: ActionDescriptorCollection(IReadOnlyList<ActionDescriptor>, Int32)
  nameWithType: ActionDescriptorCollection.ActionDescriptorCollection(IReadOnlyList<ActionDescriptor>, Int32)
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.ActionDescriptorCollection(System.Collections.Generic.IReadOnlyList<ActionDescriptor>, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Infrastructure
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionDescriptorCollection(IReadOnlyList<ActionDescriptor> items, int version)
    parameters:
    - id: items
      type: System.Collections.Generic.IReadOnlyList{ActionDescriptor}
      description: The result of action discovery
    - id: version
      type: System.Int32
      description: The unique version of discovered actions.
    content.vb: Public Sub New(items As IReadOnlyList(Of ActionDescriptor), version As Integer)
  overload: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor*
  nameWithType.vb: ActionDescriptorCollection.ActionDescriptorCollection(IReadOnlyList(Of ActionDescriptor), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.ActionDescriptorCollection(System.Collections.Generic.IReadOnlyList(Of ActionDescriptor), System.Int32)
  name.vb: ActionDescriptorCollection(IReadOnlyList(Of ActionDescriptor), Int32)
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
  commentId: P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
  id: Items
  parent: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ActionDescriptorCollection.Items
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Items
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Infrastructure
  summary: "\nReturns the cached <xref href=\"System.Collections.Generic.IReadOnlyList%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ActionDescriptor> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{ActionDescriptor}
    content.vb: Public ReadOnly Property Items As IReadOnlyList(Of ActionDescriptor)
  overload: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  commentId: P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  id: Version
  parent: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ActionDescriptorCollection.Version
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Version
    path: ../aspnet/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/ActionDescriptorCollection.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Infrastructure
  summary: "\nReturns the unique version of the currently cached items.\n"
  example: []
  syntax:
    content: public int Version { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Version As Integer
  overload: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Infrastructure
  commentId: N:Microsoft.AspNetCore.Mvc.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Infrastructure
  nameWithType: Microsoft.AspNetCore.Mvc.Infrastructure
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  commentId: T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
  parent: Microsoft.AspNetCore.Mvc.Infrastructure
  isExternal: false
  name: ActionDescriptorCollection
  nameWithType: ActionDescriptorCollection
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor
  isExternal: false
  name: ActionDescriptorCollection
  nameWithType: ActionDescriptorCollection.ActionDescriptorCollection
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.ActionDescriptorCollection
- uid: System.Collections.Generic.IReadOnlyList{ActionDescriptor}
  commentId: T:System.Collections.Generic.IReadOnlyList{ActionDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ActionDescriptor>
  nameWithType: IReadOnlyList<ActionDescriptor>
  fullName: System.Collections.Generic.IReadOnlyList<ActionDescriptor>
  nameWithType.vb: IReadOnlyList(Of ActionDescriptor)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of ActionDescriptor)
  name.vb: IReadOnlyList(Of ActionDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: ActionDescriptor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: ActionDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
  isExternal: false
  name: Items
  nameWithType: ActionDescriptorCollection.Items
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version*
  commentId: Overload:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  isExternal: false
  name: Version
  nameWithType: ActionDescriptorCollection.Version
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
shouldSkipMarkup: true
