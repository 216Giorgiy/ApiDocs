### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.FileLoadExceptionContext
  commentId: T:Microsoft.Extensions.Configuration.FileLoadExceptionContext
  id: FileLoadExceptionContext
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception
  - Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore
  - Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider
  langs:
  - csharp
  - vb
  name: FileLoadExceptionContext
  nameWithType: FileLoadExceptionContext
  fullName: Microsoft.Extensions.Configuration.FileLoadExceptionContext
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: FileLoadExceptionContext
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nContains information about a file load exception.\n"
  example: []
  syntax:
    content: public class FileLoadExceptionContext
    content.vb: Public Class FileLoadExceptionContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider
  commentId: P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider
  id: Provider
  parent: Microsoft.Extensions.Configuration.FileLoadExceptionContext
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: FileLoadExceptionContext.Provider
  fullName: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: Provider
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nThe <see cref=\"T:Microsoft.Extensions.Configuration.FileConfigurationProvider\"></see> that caused the exception.\n"
  example: []
  syntax:
    content: public FileConfigurationProvider Provider { get; set; }
    content.vb: Public Property Provider As FileConfigurationProvider
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.FileConfigurationProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception
  commentId: P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception
  id: Exception
  parent: Microsoft.Extensions.Configuration.FileLoadExceptionContext
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: FileLoadExceptionContext.Exception
  fullName: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: Exception
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nThe exception that occured in Load.\n"
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    content.vb: Public Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore
  commentId: P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore
  id: Ignore
  parent: Microsoft.Extensions.Configuration.FileLoadExceptionContext
  langs:
  - csharp
  - vb
  name: Ignore
  nameWithType: FileLoadExceptionContext.Ignore
  fullName: Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
      branch: dev
      repo: https://github.com/aspnet/configuration
    id: Ignore
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileLoadExceptionContext.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nIf true, the exception will not be rethrown.\n"
  example: []
  syntax:
    content: public bool Ignore { get; set; }
    content.vb: Public Property Ignore As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.FileConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.FileConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: FileConfigurationProvider
  nameWithType: FileConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.FileConfigurationProvider
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
