### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch
  id: WebConfigurationReaderLevelSwitch
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  children:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader,System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel})
  langs:
  - csharp
  - vb
  name: WebConfigurationReaderLevelSwitch
  nameWithType: WebConfigurationReaderLevelSwitch
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebConfigurationReaderLevelSwitch.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: WebConfigurationReaderLevelSwitch
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebConfigurationReaderLevelSwitch.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nThe <see cref=\"T:Serilog.Core.LoggingLevelSwitch\"></see> implementation that runs callback\nwhen <see cref=\"E:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader.OnConfigurationChanged\"></see> event fires.\n"
  example: []
  syntax:
    content: 'public class WebConfigurationReaderLevelSwitch : LoggingLevelSwitch'
    content.vb: >-
      Public Class WebConfigurationReaderLevelSwitch
          Inherits LoggingLevelSwitch
  inheritance:
  - System.Object
  - Serilog.Core.LoggingLevelSwitch
  inheritedMembers:
  - Serilog.Core.LoggingLevelSwitch.MinimumLevel
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader,System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel})
  commentId: M:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch.#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader,System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel})
  id: '#ctor(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader,System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel})'
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch
  langs:
  - csharp
  - vb
  name: WebConfigurationReaderLevelSwitch(IWebAppLogConfigurationReader, Func<WebAppLogConfiguration, LogLevel>)
  nameWithType: WebConfigurationReaderLevelSwitch.WebConfigurationReaderLevelSwitch(IWebAppLogConfigurationReader, Func<WebAppLogConfiguration, LogLevel>)
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch.WebConfigurationReaderLevelSwitch(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader, System.Func<Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration, Microsoft.Extensions.Logging.LogLevel>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebConfigurationReaderLevelSwitch.cs
      branch: dev
      repo: https://github.com/aspnet/logging
    id: .ctor
    path: src/Microsoft.Extensions.Logging.AzureWebAppDiagnostics/Internal/WebConfigurationReaderLevelSwitch.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Logging.AzureWebAppDiagnostics
  namespace: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  summary: "\nCreates a new instance of the <see cref=\"T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch\"></see> class.\n"
  example: []
  syntax:
    content: public WebConfigurationReaderLevelSwitch(IWebAppLogConfigurationReader reader, Func<WebAppLogConfiguration, LogLevel> convert)
    content.vb: Public Sub New(reader As IWebAppLogConfigurationReader, convert As Func(Of WebAppLogConfiguration, LogLevel))
    parameters:
    - id: reader
      type: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
      description: ''
    - id: convert
      type: System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel}
      description: ''
  nameWithType.vb: WebConfigurationReaderLevelSwitch.WebConfigurationReaderLevelSwitch(IWebAppLogConfigurationReader, Func(Of WebAppLogConfiguration, LogLevel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebConfigurationReaderLevelSwitch.WebConfigurationReaderLevelSwitch(Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader, System.Func(Of Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration, Microsoft.Extensions.Logging.LogLevel))
  name.vb: WebConfigurationReaderLevelSwitch(IWebAppLogConfigurationReader, Func(Of WebAppLogConfiguration, LogLevel))
references:
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  commentId: N:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  nameWithType: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Serilog.Core.LoggingLevelSwitch
  commentId: T:Serilog.Core.LoggingLevelSwitch
  parent: Serilog.Core
  isExternal: true
  name: LoggingLevelSwitch
  nameWithType: LoggingLevelSwitch
  fullName: Serilog.Core.LoggingLevelSwitch
- uid: Serilog.Core.LoggingLevelSwitch.MinimumLevel
  commentId: P:Serilog.Core.LoggingLevelSwitch.MinimumLevel
  parent: Serilog.Core.LoggingLevelSwitch
  isExternal: true
  name: MinimumLevel
  nameWithType: LoggingLevelSwitch.MinimumLevel
  fullName: Serilog.Core.LoggingLevelSwitch.MinimumLevel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: false
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
- uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  commentId: T:Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
  parent: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal
  isExternal: false
  name: IWebAppLogConfigurationReader
  nameWithType: IWebAppLogConfigurationReader
  fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.IWebAppLogConfigurationReader
- uid: System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel}
  commentId: T:System.Func{Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration,Microsoft.Extensions.Logging.LogLevel}
  parent: System
  definition: System.Func`2
  name: Func<WebAppLogConfiguration, LogLevel>
  nameWithType: Func<WebAppLogConfiguration, LogLevel>
  fullName: System.Func<Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration, Microsoft.Extensions.Logging.LogLevel>
  nameWithType.vb: Func(Of WebAppLogConfiguration, LogLevel)
  fullname.vb: System.Func(Of Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration, Microsoft.Extensions.Logging.LogLevel)
  name.vb: Func(Of WebAppLogConfiguration, LogLevel)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
    name: WebAppLogConfiguration
    nameWithType: WebAppLogConfiguration
    fullName: Microsoft.Extensions.Logging.AzureWebAppDiagnostics.Internal.WebAppLogConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
