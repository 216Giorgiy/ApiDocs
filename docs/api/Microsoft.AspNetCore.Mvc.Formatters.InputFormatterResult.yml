### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  id: InputFormatterResult
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Failure
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.FailureAsync
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Model
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Success(System.Object)
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.SuccessAsync(System.Object)
  langs:
  - csharp
  - vb
  name: InputFormatterResult
  nameWithType: InputFormatterResult
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: InputFormatterResult
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nResult of a <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation.\n"
  example: []
  syntax:
    content: public class InputFormatterResult
    content.vb: Public Class InputFormatterResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError
  id: HasError
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: HasError
  nameWithType: InputFormatterResult.HasError
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: HasError
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets an indication whether the <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation had an error.\n"
  example: []
  syntax:
    content: public bool HasError { get; }
    content.vb: Public ReadOnly Property HasError As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Model
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Model
  id: Model
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: InputFormatterResult.Model
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Model
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the deserialized <see cref=\"T:System.Object\"></see>.\n"
  example: []
  syntax:
    content: public object Model { get; }
    content.vb: Public ReadOnly Property Model As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<code>null</code> if <see cref=\"P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError\"></see> is <code>true</code>.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Failure
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Failure
  id: Failure
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: Failure()
  nameWithType: InputFormatterResult.Failure()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Failure()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Failure
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see>\noperation failed.\n"
  example: []
  syntax:
    content: public static InputFormatterResult Failure()
    content.vb: Public Shared Function Failure As InputFormatterResult
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
      description: "\nAn <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see>\noperation failed i.e. with <see cref=\"P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError\"></see> <code>true</code>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.FailureAsync
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.FailureAsync
  id: FailureAsync
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: FailureAsync()
  nameWithType: InputFormatterResult.FailureAsync()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.FailureAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: FailureAsync
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns a <see cref=\"T:System.Threading.Tasks.Task\"></see> that on completion provides an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating\nthe <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation failed.\n"
  example: []
  syntax:
    content: public static Task<InputFormatterResult> FailureAsync()
    content.vb: Public Shared Function FailureAsync As Task(Of InputFormatterResult)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
      description: "\nA <see cref=\"T:System.Threading.Tasks.Task\"></see> that on completion provides an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the\n<see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation failed i.e. with <see cref=\"P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError\"></see> <code>true</code>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Success(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Success(System.Object)
  id: Success(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: Success(Object)
  nameWithType: InputFormatterResult.Success(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Success(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: Success
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see>\noperation was successful.\n"
  example: []
  syntax:
    content: public static InputFormatterResult Success(object model)
    content.vb: Public Shared Function Success(model As Object) As InputFormatterResult
    parameters:
    - id: model
      type: System.Object
      description: The deserialized <see cref="T:System.Object"></see>.
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
      description: "\nAn <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see>\noperation succeeded i.e. with <see cref=\"P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError\"></see> <code>false</code>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.SuccessAsync(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.SuccessAsync(System.Object)
  id: SuccessAsync(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  langs:
  - csharp
  - vb
  name: SuccessAsync(Object)
  nameWithType: InputFormatterResult.SuccessAsync(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.SuccessAsync(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
      branch: dev
      repo: https://github.com/aspnet/mvc
    id: SuccessAsync
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterResult.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns a <see cref=\"T:System.Threading.Tasks.Task\"></see> that on completion provides an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating\nthe <see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation was successful.\n"
  example: []
  syntax:
    content: public static Task<InputFormatterResult> SuccessAsync(object model)
    content.vb: Public Shared Function SuccessAsync(model As Object) As Task(Of InputFormatterResult)
    parameters:
    - id: model
      type: System.Object
      description: The deserialized <see cref="T:System.Object"></see>.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
      description: "\nA <see cref=\"T:System.Threading.Tasks.Task\"></see> that on completion provides an <see cref=\"T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult\"></see> indicating the\n<see cref=\"M:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)\"></see> operation succeeded i.e. with <see cref=\"P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError\"></see> <code>false</code>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: InputFormatterResult
  nameWithType: InputFormatterResult
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<InputFormatterResult>
  nameWithType: Task<InputFormatterResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult>
  nameWithType.vb: Task(Of InputFormatterResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult)
  name.vb: Task(Of InputFormatterResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
