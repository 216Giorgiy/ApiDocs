### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  id: IServiceScopeFactory
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  langs:
  - csharp
  - vb
  name: IServiceScopeFactory
  nameWithType: IServiceScopeFactory
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceScopeFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: IServiceScopeFactory
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceScopeFactory.cs
    startLine: 5
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public interface IServiceScopeFactory
    content.vb: Public Interface IServiceScopeFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  id: CreateScope
  parent: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: IServiceScopeFactory.CreateScope()
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceScopeFactory.cs
      branch: dev
      repo: https://github.com/aspnet/dependencyinjection
    id: CreateScope
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/IServiceScopeFactory.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nCreate an <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceScope\"></see> which\ncontains an <see cref=\"T:System.IServiceProvider\"></see> used to resolve dependencies from a\nnewly created scope.\n"
  example: []
  syntax:
    content: IServiceScope CreateScope()
    content.vb: Function CreateScope As IServiceScope
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceScope
      description: "\nAn <see cref=\"T:Microsoft.Extensions.DependencyInjection.IServiceScope\"></see> controlling the\nlifetime of the scope. Once this is disposed, any scoped services that have been resolved\nfrom the <see cref=\"P:Microsoft.Extensions.DependencyInjection.IServiceScope.ServiceProvider\"></see>\nwill also be disposed.\n"
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.IServiceScope
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScope
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IServiceScope
  nameWithType: IServiceScope
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScope
