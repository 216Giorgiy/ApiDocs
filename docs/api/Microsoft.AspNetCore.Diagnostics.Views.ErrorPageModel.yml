### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  commentId: T:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  id: ErrorPageModel
  parent: Microsoft.AspNetCore.Diagnostics.Views
  children:
  - Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
  - Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
  - Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
  - Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
  - Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
  langs:
  - csharp
  - vb
  name: ErrorPageModel
  nameWithType: ErrorPageModel
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ErrorPageModel
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nHolds data to be displayed on the error page.\n"
  example: []
  syntax:
    content: public class ErrorPageModel
    content.vb: Public Class ErrorPageModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
  id: Options
  parent: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ErrorPageModel.Options
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Options
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nOptions for what output to display.\n"
  example: []
  syntax:
    content: public DeveloperExceptionPageOptions Options { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
    content.vb: Public Property Options As DeveloperExceptionPageOptions
  overload: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
  id: ErrorDetails
  parent: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  langs:
  - csharp
  - vb
  name: ErrorDetails
  nameWithType: ErrorPageModel.ErrorDetails
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ErrorDetails
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nDetailed information about each exception in the stack.\n"
  example: []
  syntax:
    content: public IEnumerable<ErrorDetails> ErrorDetails { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails}
    content.vb: Public Property ErrorDetails As IEnumerable(Of ErrorDetails)
  overload: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
  id: Query
  parent: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ErrorPageModel.Query
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Query
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nParsed query data.\n"
  example: []
  syntax:
    content: public IQueryCollection Query { get; set; }
    parameters: []
    return:
      type: IQueryCollection
    content.vb: Public Property Query As IQueryCollection
  overload: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
  id: Cookies
  parent: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  langs:
  - csharp
  - vb
  name: Cookies
  nameWithType: ErrorPageModel.Cookies
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Cookies
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nRequest cookies.\n"
  example: []
  syntax:
    content: public IRequestCookieCollection Cookies { get; set; }
    parameters: []
    return:
      type: IRequestCookieCollection
    content.vb: Public Property Cookies As IRequestCookieCollection
  overload: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
  id: Headers
  parent: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ErrorPageModel.Headers
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Headers
    path: ../aspnet/Diagnostics/src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/ErrorPageModel.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nRequest headers.\n"
  example: []
  syntax:
    content: public IDictionary<string, StringValues> Headers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,StringValues}
    content.vb: Public Property Headers As IDictionary(Of String, StringValues)
  overload: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics.Views
  commentId: N:Microsoft.AspNetCore.Diagnostics.Views
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.Views
  nameWithType: Microsoft.AspNetCore.Diagnostics.Views
  fullName: Microsoft.AspNetCore.Diagnostics.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
  isExternal: false
  name: Options
  nameWithType: ErrorPageModel.Options
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Options
- uid: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
  commentId: T:Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: DeveloperExceptionPageOptions
  nameWithType: DeveloperExceptionPageOptions
  fullName: Microsoft.AspNetCore.Builder.DeveloperExceptionPageOptions
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
  isExternal: false
  name: ErrorDetails
  nameWithType: ErrorPageModel.ErrorDetails
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.ErrorDetails
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ErrorDetails>
  nameWithType: IEnumerable<ErrorDetails>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails>
  nameWithType.vb: IEnumerable(Of ErrorDetails)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails)
  name.vb: IEnumerable(Of ErrorDetails)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails
    name: ErrorDetails
    nameWithType: ErrorDetails
    fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails
    name: ErrorDetails
    nameWithType: ErrorDetails
    fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorDetails
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
  isExternal: false
  name: Query
  nameWithType: ErrorPageModel.Query
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Query
- uid: IQueryCollection
  isExternal: true
  name: IQueryCollection
  nameWithType: IQueryCollection
  fullName: IQueryCollection
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
  isExternal: false
  name: Cookies
  nameWithType: ErrorPageModel.Cookies
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Cookies
- uid: IRequestCookieCollection
  isExternal: true
  name: IRequestCookieCollection
  nameWithType: IRequestCookieCollection
  fullName: IRequestCookieCollection
- uid: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers*
  commentId: Overload:Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
  isExternal: false
  name: Headers
  nameWithType: ErrorPageModel.Headers
  fullName: Microsoft.AspNetCore.Diagnostics.Views.ErrorPageModel.Headers
- uid: System.Collections.Generic.IDictionary{System.String,StringValues}
  commentId: T:System.Collections.Generic.IDictionary{System.String,StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, StringValues>
  nameWithType: IDictionary<String, StringValues>
  fullName: System.Collections.Generic.IDictionary<System.String, StringValues>
  nameWithType.vb: IDictionary(Of String, StringValues)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, StringValues)
  name.vb: IDictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
