<Type Name="DefaultAntiforgeryTokenGenerator" FullName="Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator">
  <TypeSignature Language="C#" Value="public class DefaultAntiforgeryTokenGenerator : Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultAntiforgeryTokenGenerator extends System.Object implements class Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAntiforgeryTokenGenerator (Microsoft.AspNetCore.Antiforgery.Internal.IClaimUidExtractor claimUidExtractor, Microsoft.AspNetCore.Antiforgery.IAntiforgeryAdditionalDataProvider additionalDataProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Antiforgery.Internal.IClaimUidExtractor claimUidExtractor, class Microsoft.AspNetCore.Antiforgery.IAntiforgeryAdditionalDataProvider additionalDataProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator.#ctor(Microsoft.AspNetCore.Antiforgery.Internal.IClaimUidExtractor,Microsoft.AspNetCore.Antiforgery.IAntiforgeryAdditionalDataProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimUidExtractor" Type="Microsoft.AspNetCore.Antiforgery.Internal.IClaimUidExtractor" />
        <Parameter Name="additionalDataProvider" Type="Microsoft.AspNetCore.Antiforgery.IAntiforgeryAdditionalDataProvider" />
      </Parameters>
      <Docs>
        <param name="claimUidExtractor">To be added.</param>
        <param name="additionalDataProvider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCookieToken">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateCookieToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateCookieToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator.GenerateCookieToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GenerateRequestToken">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateRequestToken (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateRequestToken(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator.GenerateRequestToken(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <param name="cookieToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsCookieTokenValid">
      <MemberSignature Language="C#" Value="public bool IsCookieTokenValid (Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCookieTokenValid(class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator.IsCookieTokenValid(Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
      </Parameters>
      <Docs>
        <param name="cookieToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryValidateTokenSet">
      <MemberSignature Language="C#" Value="public bool TryValidateTokenSet (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken requestToken, out string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryValidateTokenSet(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken requestToken, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenGenerator.TryValidateTokenSet(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
        <Parameter Name="requestToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
        <Parameter Name="message" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <param name="cookieToken">To be added.</param>
        <param name="requestToken">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>