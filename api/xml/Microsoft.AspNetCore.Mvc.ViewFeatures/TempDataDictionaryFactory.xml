<Type Name="TempDataDictionaryFactory" FullName="Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory">
  <TypeSignature Language="C#" Value="public class TempDataDictionaryFactory : Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TempDataDictionaryFactory extends System.Object implements class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempDataDictionaryFactory (Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider" />.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTempData">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary GetTempData (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary GetTempData(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory.GetTempData(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>