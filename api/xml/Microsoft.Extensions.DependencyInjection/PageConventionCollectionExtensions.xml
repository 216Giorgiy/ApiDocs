<Type Name="PageConventionCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class PageConventionCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PageConventionCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPageRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AddPageRoute (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName, string route);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AddPageRoute(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName, string route) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AddPageRoute(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="route" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</param>
        <param name="pageName">The page name.</param>
        <param name="route">The route to associate with the page.</param>
        <summary>
            Adds the specified <paramref name="route" /> to the page at the specified <paramref name="pageName" />.
            <para>
            The page can be routed via <paramref name="route" /> in addition to the default set of path based routes.
            All links generated for this page will use the specified route.
            </para></summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAnonymousToFolder">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AllowAnonymousToFolder (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AllowAnonymousToFolder(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AllowAnonymousToFolder(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="folderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="folderPath">The folder path.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AllowAnonymousFilter" /> to all pages under the specified folder.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAnonymousToPage">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AllowAnonymousToPage (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AllowAnonymousToPage(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AllowAnonymousToPage(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="pageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="pageName">The page name.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AllowAnonymousFilter" /> to the page with the specified name.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeFolder">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizeFolder (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizeFolder(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AuthorizeFolder(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="folderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="folderPath">The folder path.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> to all pages under the specified folder.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeFolder">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizeFolder (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath, string policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizeFolder(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string folderPath, string policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AuthorizeFolder(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="folderPath" Type="System.String" />
        <Parameter Name="policy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="folderPath">The folder path.</param>
        <param name="policy">The authorization policy.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> with the specified policy to all pages under the specified folder.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizePage">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizePage (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizePage(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AuthorizePage(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="pageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="pageName">The page name.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> to the page with the specified name.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizePage">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizePage (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName, string policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection AuthorizePage(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, string pageName, string policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.AuthorizePage(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="policy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="pageName">The page name.</param>
        <param name="policy">The authorization policy.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> with the specified policy to the page with the specified name.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection ConfigureFilter (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection ConfigureFilter(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.ConfigureFilter(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="filter" Type="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> to add.</param>
        <summary>
            Configures the specified <paramref name="filter" /> to apply to all Razor Pages.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.ApplicationModels.IPageApplicationModelConvention ConfigureFilter (this Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, Func&lt;Microsoft.AspNetCore.Mvc.ApplicationModels.PageApplicationModel,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.ApplicationModels.IPageApplicationModelConvention ConfigureFilter(class Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection conventions, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ApplicationModels.PageApplicationModel, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PageConventionCollectionExtensions.ConfigureFilter(Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection,System.Func{Microsoft.AspNetCore.Mvc.ApplicationModels.PageApplicationModel,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ApplicationModels.IPageApplicationModelConvention</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" RefType="this" />
        <Parameter Name="factory" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ApplicationModels.PageApplicationModel,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="conventions">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection" /> to configure.</param>
        <param name="factory">The factory to create filters.</param>
        <summary>
            Configures the specified <paramref name="factory" /> to apply filters to all Razor Pages.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>