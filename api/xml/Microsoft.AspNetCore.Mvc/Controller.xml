<Type Name="Controller" FullName="Microsoft.AspNetCore.Mvc.Controller">
  <TypeSignature Language="C#" Value="public abstract class Controller : Microsoft.AspNetCore.Mvc.ControllerBase, IDisposable, Microsoft.AspNetCore.Mvc.Filters.IActionFilter, Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Controller extends Microsoft.AspNetCore.Mvc.ControllerBase implements class Microsoft.AspNetCore.Mvc.Filters.IActionFilter, class Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Controller" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.ControllerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IActionFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A base class for an MVC controller with view support.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Controller ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> if this method is being invoked by the <see cref="M:Microsoft.AspNetCore.Mvc.Controller.Dispose" /> method,
            otherwise <c>false</c>.</param>
        <summary>
            Releases all resources currently used by this <see cref="T:Microsoft.AspNetCore.Mvc.Controller" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.JsonResult Json (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.JsonResult Json(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.Json(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.JsonResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">The object to serialize.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult" /> object that serializes the specified <paramref name="data" /> object
            to JSON.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult" /> that serializes the specified <paramref name="data" />
            to JSON format for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.JsonResult Json (object data, Newtonsoft.Json.JsonSerializerSettings serializerSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.JsonResult Json(object data, class Newtonsoft.Json.JsonSerializerSettings serializerSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.Json(System.Object,Newtonsoft.Json.JsonSerializerSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.JsonResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="serializerSettings" Type="Newtonsoft.Json.JsonSerializerSettings" />
      </Parameters>
      <Docs>
        <param name="data">The object to serialize.</param>
        <param name="serializerSettings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> to be used by
            the formatter.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult" /> object that serializes the specified <paramref name="data" /> object
            to JSON.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult" /> that serializes the specified <paramref name="data" />
            as JSON format for the response.</returns>
        <remarks>Callers should cache an instance of <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> to avoid
            recreating cached data with each call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuted">
      <MemberSignature Language="C#" Value="public virtual void OnActionExecuted (Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuted(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">The action executed context.</param>
        <summary>
            Called after the action method is invoked.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuting">
      <MemberSignature Language="C#" Value="public virtual void OnActionExecuting (Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuting(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">The action executing context.</param>
        <summary>
            Called before the action method is invoked.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnActionExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnActionExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.Controller/&lt;OnActionExecutionAsync&gt;d__27))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The action executing context.</param>
        <param name="next">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate" /> to execute. Invoke this delegate in the body
            of <see cref="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)" /> to continue execution of the action.</param>
        <summary>
            Called before the action method is invoked.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PartialViewResult PartialView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PartialViewResult PartialView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.PartialView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PartialViewResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object that renders a partial view to the response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PartialViewResult PartialView (object model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PartialViewResult PartialView(object model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PartialViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="model">The model that is rendered by the partial view.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object by specifying a <paramref name="model" />
            to be rendered by the partial view.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PartialViewResult PartialView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PartialViewResult PartialView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PartialViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the view that is rendered to the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object by specifying a <paramref name="viewName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PartialViewResult PartialView (string viewName, object model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PartialViewResult PartialView(string viewName, object model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PartialViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="model" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the partial view that is rendered to the response.</param>
        <param name="model">The model that is rendered by the partial view.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object by specifying a <paramref name="viewName" />
            and the <paramref name="model" /> to be rendered by the partial view.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempData">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary TempData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary TempData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Controller.TempData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary" /> used by <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewResult View ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewResult View() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.View" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object that renders a view to the response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewResult View (object model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewResult View(object model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.View(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="model">The model that is rendered by the view.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object by specifying a <paramref name="model" />
            to be rendered by the view.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewResult View (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewResult View(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.View(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the view that is rendered to the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object by specifying a <paramref name="viewName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewResult View (string viewName, object model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewResult View(string viewName, object model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.View(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="model" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the view that is rendered to the response.</param>
        <param name="model">The model that is rendered by the view.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object by specifying a <paramref name="viewName" />
            and the <paramref name="model" /> to be rendered by the view.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewBag">
      <MemberSignature Language="C#" Value="public dynamic ViewBag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewBag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Controller.ViewBag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the dynamic view bag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewComponent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent (string componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent(string componentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewComponentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentName">
            The view component name. Can be a view component
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName" /> or
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName" />.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> by specifying the name of a view component to render.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewComponent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewComponentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">The view component <see cref="T:System.Type" />.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> by specifying the <see cref="T:System.Type" /> of a view component to
            render.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewComponent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent (string componentName, object arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent(string componentName, object arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewComponentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="System.String" />
        <Parameter Name="arguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="componentName">
            The view component name. Can be a view component
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName" /> or
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName" />.</param>
        <param name="arguments">
            An <see cref="T:System.Object" /> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance
            containing the invocation arguments.
            </param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> by specifying the name of a view component to render.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewComponent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent (Type componentType, object arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewComponentResult ViewComponent(class System.Type componentType, object arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewComponentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="componentType">The view component <see cref="T:System.Type" />.</param>
        <param name="arguments">
            An <see cref="T:System.Object" /> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance
            containing the invocation arguments.
            </param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> by specifying the <see cref="T:System.Type" /> of a view component to
            render.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewData">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary ViewData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary ViewData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Controller.ViewData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" /> used by <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult" /> and <see cref="P:Microsoft.AspNetCore.Mvc.Controller.ViewBag" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default, this property is activated when <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator" /> activates
             controllers. However, when controllers are directly instantiated in user code, this property is
            initialized with <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>