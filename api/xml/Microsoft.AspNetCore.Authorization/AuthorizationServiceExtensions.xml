<Type Name="AuthorizationServiceExtensions" FullName="Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions">
  <TypeSignature Language="C#" Value="public static class AuthorizationServiceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AuthorizationServiceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (this Microsoft.AspNetCore.Authorization.IAuthorizationService service, System.Security.Claims.ClaimsPrincipal user, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class Microsoft.AspNetCore.Authorization.IAuthorizationService service, class System.Security.Claims.ClaimsPrincipal user, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.AspNetCore.Authorization.IAuthorizationService" RefType="this" />
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="service">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" /> providing authorization.</param>
        <param name="user">The user to evaluate the policy against.</param>
        <param name="policy">The policy to evaluate.</param>
        <summary>
            Checks if a user meets a specific authorization policy against the specified resource.
            </summary>
        <returns>
            A flag indicating whether policy evaluation has succeeded or failed.
            This value is <value>true</value> when the user fulfills the policy, otherwise <value>false</value>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (this Microsoft.AspNetCore.Authorization.IAuthorizationService service, System.Security.Claims.ClaimsPrincipal user, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class Microsoft.AspNetCore.Authorization.IAuthorizationService service, class System.Security.Claims.ClaimsPrincipal user, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.AspNetCore.Authorization.IAuthorizationService" RefType="this" />
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" /> providing authorization.</param>
        <param name="user">The user to evaluate the policy against.</param>
        <param name="policyName">The name of the policy to evaluate.</param>
        <summary>
            Checks if a user meets a specific authorization policy against the specified resource.
            </summary>
        <returns>
            A flag indicating whether policy evaluation has succeeded or failed.
            This value is <value>true</value> when the user fulfills the policy, otherwise <value>false</value>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (this Microsoft.AspNetCore.Authorization.IAuthorizationService service, System.Security.Claims.ClaimsPrincipal user, object resource, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class Microsoft.AspNetCore.Authorization.IAuthorizationService service, class System.Security.Claims.ClaimsPrincipal user, object resource, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.AspNetCore.Authorization.IAuthorizationService" RefType="this" />
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Object" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="service">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" /> providing authorization.</param>
        <param name="user">The user to evaluate the policy against.</param>
        <param name="resource">The resource to evaluate the policy against.</param>
        <param name="policy">The policy to evaluate.</param>
        <summary>
            Checks if a user meets a specific authorization policy against the specified resource.
            </summary>
        <returns>
            A flag indicating whether policy evaluation has succeeded or failed.
            This value is <value>true</value> when the user fulfills the policy, otherwise <value>false</value>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (this Microsoft.AspNetCore.Authorization.IAuthorizationService service, System.Security.Claims.ClaimsPrincipal user, object resource, Microsoft.AspNetCore.Authorization.IAuthorizationRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class Microsoft.AspNetCore.Authorization.IAuthorizationService service, class System.Security.Claims.ClaimsPrincipal user, object resource, class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Microsoft.AspNetCore.Authorization.IAuthorizationService" RefType="this" />
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Object" />
        <Parameter Name="requirement" Type="Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />
      </Parameters>
      <Docs>
        <param name="service">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" /> providing authorization.</param>
        <param name="user">The user to evaluate the policy against.</param>
        <param name="resource">The resource to evaluate the policy against.</param>
        <param name="requirement">The requirement to evaluate the policy against.</param>
        <summary>
            Checks if a user meets a specific requirement for the specified resource
            </summary>
        <returns>
            A flag indicating whether requirement evaluation has succeeded or failed.
            This value is <value>true</value> when the user fulfills the policy, otherwise <value>false</value>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>