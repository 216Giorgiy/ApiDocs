<Type Name="AuthorizationPolicy" FullName="Microsoft.AspNetCore.Authorization.AuthorizationPolicy">
  <TypeSignature Language="C#" Value="public class AuthorizationPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a collection of authorization requirements and the scheme or 
            schemes they are evaluated against, all of which must succeed
            for authorization to succeed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationPolicy (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements, System.Collections.Generic.IEnumerable&lt;string&gt; authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements, class System.Collections.Generic.IEnumerable`1&lt;string&gt; authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requirements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;" />
        <Parameter Name="authenticationSchemes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="requirements">
            The list of <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />s which must succeed for
            this policy to be successful.
            </param>
        <param name="authenticationSchemes">
            The authentication schemes the <paramref name="requirements" /> are evaluated against.
            </param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; AuthenticationSchemes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a readonly list of the authentication schemes the <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements" /> 
            are evaluated against.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Authorization.AuthorizationPolicy Combine (Microsoft.AspNetCore.Authorization.AuthorizationPolicy[] policies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Authorization.AuthorizationPolicy Combine(class Microsoft.AspNetCore.Authorization.AuthorizationPolicy[] policies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policies" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="policies">The authorization policies to combine.</param>
        <summary>
            Combines the specified <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> into a single policy.
            </summary>
        <returns>
            A new <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> which represents the combination of the
            specified <paramref name="policies" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Authorization.AuthorizationPolicy Combine (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt; policies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Authorization.AuthorizationPolicy Combine(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt; policies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="policies">The authorization policies to combine.</param>
        <summary>
            Combines the specified <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> into a single policy.
            </summary>
        <returns>
            A new <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> which represents the combination of the
            specified <paramref name="policies" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt; CombineAsync (Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt; CombineAsync(class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Authorization.AuthorizationPolicy/&lt;CombineAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyProvider" Type="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" />
        <Parameter Name="authorizeData" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt;" />
      </Parameters>
      <Docs>
        <param name="policyProvider">A <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> which provides the policies to combine.</param>
        <param name="authorizeData">A collection of authorization data used to apply authorization to a resource.</param>
        <summary>
            Combines the <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> provided by the specified
            <paramref name="policyProvider" />.
            </summary>
        <returns>
            A new <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> which represents the combination of the
            authorization policies provided by the specified <paramref name="policyProvider" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Requirements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; Requirements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; Requirements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a readonly list of <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />s which must succeed for
            this policy to be successful.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>