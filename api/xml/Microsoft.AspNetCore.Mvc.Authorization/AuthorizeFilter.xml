<Type Name="AuthorizeFilter" FullName="Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter">
  <TypeSignature Language="C#" Value="public class AuthorizeFilter : Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter, Microsoft.AspNetCore.Mvc.Filters.IFilterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizeFilter extends System.Object implements class Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterFactory, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter" /> which applies a specific
            <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />. MVC recognizes the <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizeAttribute" /> and adds an instance of
            this filter to the associated action or controller.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizeFilter (Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">Authorization policy to be used.</param>
        <summary>
            Initialize a new <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizeFilter (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizeData" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizeData">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" /> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" />.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizeFilter (string policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="policy">The name of the policy to require for authorization.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizeFilter (Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; authorizeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policyProvider" Type="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" />
        <Parameter Name="authorizeData" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt;" />
      </Parameters>
      <Docs>
        <param name="policyProvider">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> to use to resolve policy names.</param>
        <param name="authorizeData">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" /> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" />.</param>
        <summary>
            Initialize a new <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; AuthorizeData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizeData&gt; AuthorizeData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" /> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance">
      <MemberSignature Language="C#" Value="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata IFilterFactory.CreateInstance (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Microsoft#AspNetCore#Mvc#Filters#IFilterFactory#CreateInstance(System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable">
      <MemberSignature Language="C#" Value="bool Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Microsoft#AspNetCore#Mvc#Filters#IFilterFactory#IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnAuthorizationAsync (Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnAuthorizationAsync(class Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter/&lt;OnAuthorizationAsync&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authorization.AuthorizationPolicy Policy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authorization.AuthorizationPolicy Policy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the authorization policy to be used.
            </summary>
        <value>To be added.</value>
        <remarks>
            If<c>null</c>, the policy will be constructed using
            <see cref="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyProvider">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider PolicyProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider PolicyProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> to use to resolve policy names.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>