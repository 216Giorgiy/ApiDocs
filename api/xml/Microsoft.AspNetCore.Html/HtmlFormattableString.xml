<Type Name="HtmlFormattableString" FullName="Microsoft.AspNetCore.Html.HtmlFormattableString">
  <TypeSignature Language="C#" Value="public class HtmlFormattableString : Microsoft.AspNetCore.Html.IHtmlContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlFormattableString extends System.Object implements class Microsoft.AspNetCore.Html.IHtmlContent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Html.HtmlFormattableString" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Html.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Html.IHtmlContent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerToString()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> implementation of composite string formatting
            (see https://msdn.microsoft.com/en-us/library/txafckwd(v=vs.110).aspx) which HTML encodes
            formatted arguments.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlFormattableString (string format, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Html.HtmlFormattableString.#ctor(System.String,System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Html.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">A composite format string.</param>
        <param name="args">An array that contains objects to format.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Html.HtmlFormattableString" /> with the given <paramref name="format" /> and
            <paramref name="args" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlFormattableString (IFormatProvider formatProvider, string format, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Html.HtmlFormattableString.#ctor(System.IFormatProvider,System.String,System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Html.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="formatProvider">An object that provides culture-specific formatting information.</param>
        <param name="format">A composite format string.</param>
        <param name="args">An array that contains objects to format.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Html.HtmlFormattableString" /> with the given <paramref name="formatProvider" />,
            <paramref name="format" /> and <paramref name="args" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.TextWriter writer, System.Text.Encodings.Web.HtmlEncoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.TextWriter writer, class System.Text.Encodings.Web.HtmlEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Html.HtmlFormattableString.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Html.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>