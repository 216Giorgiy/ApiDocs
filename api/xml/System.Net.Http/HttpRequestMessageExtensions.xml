<Type Name="HttpRequestMessageExtensions" FullName="System.Net.Http.HttpRequestMessageExtensions">
  <TypeSignature Language="C#" Value="public static class HttpRequestMessageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpRequestMessageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpRequestMessageExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateErrorResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateErrorResponse (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateErrorResponse(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="modelState" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="modelState">The model state.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" />
            representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping an
            <see cref="T:System.Web.Http.HttpError" /> for model state <paramref name="modelState" />. If no formatter is found, this
            method returns a response with status 406 NotAcceptable.
            </summary>
        <returns>
            An error response for <paramref name="modelState" /> with status code <paramref name="statusCode" />.
            </returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateErrorResponse (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateErrorResponse(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="exception">The exception.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" />
            representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping an
            <see cref="T:System.Web.Http.HttpError" /> for exception <paramref name="exception" />. If no formatter is found, this method
            returns a response with status 406 NotAcceptable.
            </summary>
        <returns>
            An error response for <paramref name="exception" /> with status code <paramref name="statusCode" />.
            </returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateErrorResponse (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateErrorResponse(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="message">The error message.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" />
            representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping an
            <see cref="T:System.Web.Http.HttpError" /> with message <paramref name="message" />. If no formatter is found, this method
            returns a response with status 406 NotAcceptable.
            </summary>
        <returns>
            An error response with error message <paramref name="message" /> and status code
            <paramref name="statusCode" />.
            </returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateErrorResponse (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, System.Web.Http.HttpError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateErrorResponse(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, class System.Web.Http.HttpError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="error" Type="System.Web.Http.HttpError" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="error">The error to wrap.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" />
            representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping <paramref name="error" />
            as the content. If no formatter is found, this method returns a response with status 406 NotAcceptable.
            </summary>
        <returns>
            An error response wrapping <paramref name="error" /> with status code <paramref name="statusCode" />.
            </returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateErrorResponse (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, string message, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateErrorResponse(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, string message, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="message">The error message.</param>
        <param name="exception">The exception.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" />
            representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping an
            <see cref="T:System.Web.Http.HttpError" /> with error message <paramref name="message" /> for exception
            <paramref name="exception" />. If no formatter is found, this method returns a response with status 406
            NotAcceptable.
            </summary>
        <returns>An error response for <paramref name="exception" /> with error message <paramref name="message" />
            and status code <paramref name="statusCode" />.</returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
            instance of <see cref="T:System.Net.Http.ObjectContent`1" /> as the content and <see cref="F:System.Net.HttpStatusCode.OK" />
            as the status code if a formatter can be found. If no formatter is found, this method returns a response
            with status 406 NotAcceptable.
            </summary>
        <returns>
            A response wrapping <paramref name="value" /> with <see cref="F:System.Net.HttpStatusCode.OK" /> status code.
            </returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
            instance of <see cref="T:System.Net.Http.ObjectContent`1" /> as the content if a formatter can be found. If no formatter is
            found, this method returns a response with status 406 NotAcceptable.
            configuration.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>
            This method requires that <paramref name="request" /> has been associated with an instance of
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
        <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
            instance of <see cref="T:System.Net.Http.ObjectContent`1" /> as the content if a formatter can be found. If no formatter is
            found, this method returns a response with status 406 NotAcceptable.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>
            This method will get the <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> instance associated with <paramref name="request" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, System.Net.Http.Formatting.MediaTypeFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, class System.Net.Http.Formatting.MediaTypeFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.MediaTypeFormatter" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="formatter">The formatter to use.</param>
        <summary>
            Helper method that creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="T:System.Net.Http.ObjectContent`1" />
            instance containing the provided <paramref name="value" /> and the given <paramref name="formatter" />.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, class System.Net.Http.Headers.MediaTypeHeaderValue mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="mediaType" Type="System.Net.Http.Headers.MediaTypeHeaderValue" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="mediaType">
            The media type used to look up an instance of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.
            </param>
        <summary>
            Helper method that creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="T:System.Net.Http.ObjectContent`1" />
            instance containing the provided <paramref name="value" />. The given <paramref name="mediaType" /> is used
            to find an instance of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="mediaType">
            The media type used to look up an instance of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.
            </param>
        <summary>
            Helper method that creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="T:System.Net.Http.ObjectContent`1" />
            instance containing the provided <paramref name="value" />. The given <paramref name="mediaType" /> is used
            to find an instance of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, System.Net.Http.Formatting.MediaTypeFormatter formatter, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, class System.Net.Http.Formatting.MediaTypeFormatter formatter, class System.Net.Http.Headers.MediaTypeHeaderValue mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.MediaTypeFormatter" />
        <Parameter Name="mediaType" Type="System.Net.Http.Headers.MediaTypeHeaderValue" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="formatter">The formatter to use.</param>
        <param name="mediaType">
            The media type override to set on the response's content. Can be <c>null</c>.
            </param>
        <summary>
            Helper method that creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="T:System.Net.Http.ObjectContent`1" />
            instance containing the provided <paramref name="value" /> and the given <paramref name="formatter" />.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt; (this System.Net.Http.HttpRequestMessage request, System.Net.HttpStatusCode statusCode, T value, System.Net.Http.Formatting.MediaTypeFormatter formatter, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateResponse&lt;T&gt;(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.HttpStatusCode statusCode, !!T value, class System.Net.Http.Formatting.MediaTypeFormatter formatter, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.MediaTypeFormatter" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value.</typeparam>
        <param name="request">The request.</param>
        <param name="statusCode">The status code of the created response.</param>
        <param name="value">The value to wrap. Can be <c>null</c>.</param>
        <param name="formatter">The formatter to use.</param>
        <param name="mediaType">
            The media type override to set on the response's content. Can be <c>null</c>.
            </param>
        <summary>
            Helper method that creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="T:System.Net.Http.ObjectContent`1" />
            instance containing the provided <paramref name="value" /> and the given <paramref name="formatter" />.
            </summary>
        <returns>A response wrapping <paramref name="value" /> with <paramref name="statusCode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>