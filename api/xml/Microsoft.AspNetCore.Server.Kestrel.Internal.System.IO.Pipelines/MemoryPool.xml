<Type Name="MemoryPool" FullName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool">
  <TypeSignature Language="C#" Value="public class MemoryPool : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.BufferPool" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryPool extends Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.BufferPool" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.BufferPool</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Used to allocate and distribute re-usable blocks of memory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPooledBlockLength">
      <MemberSignature Language="C#" Value="public const int MaxPooledBlockLength = 4032;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPooledBlockLength = (4032)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.MaxPooledBlockLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4032</MemberValue>
      <Docs>
        <summary>
            Max allocation block size for pooled blocks, 
            larger values can be leased but they will be disposed after use rather than returned to the pool.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterSlabAllocationCallback">
      <MemberSignature Language="C#" Value="public void RegisterSlabAllocationCallback (Action&lt;Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterSlabAllocationCallback(class System.Action`1&lt;class Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.RegisterSlabAllocationCallback(System.Action{Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterSlabDeallocationCallback">
      <MemberSignature Language="C#" Value="public void RegisterSlabDeallocationCallback (Action&lt;Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterSlabDeallocationCallback(class System.Action`1&lt;class Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.RegisterSlabDeallocationCallback(System.Action{Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolSlab&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.OwnedBuffer&lt;byte&gt; Rent (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.OwnedBuffer`1&lt;unsigned int8&gt; Rent(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.Rent(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.OwnedBuffer&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public void Return (Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolBlock block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Return(class Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolBlock block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPool.Return(Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.MemoryPoolBlock" />
      </Parameters>
      <Docs>
        <param name="block">The block to return. It must have been acquired by calling Lease on the same memory pool instance.</param>
        <summary>
            Called to return a block to the pool. Once Return has been called the memory no longer belongs to the caller, and
            Very Bad Things will happen if the memory is read of modified subsequently. If a caller fails to call Return and the
            block tracking object is garbage collected, the block tracking object's finalizer will automatically re-create and return
            a new tracking object into the pool. This will only happen if there is a bug in the server, however it is necessary to avoid
            leaving "dead zones" in the slab due to lost block tracking objects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>