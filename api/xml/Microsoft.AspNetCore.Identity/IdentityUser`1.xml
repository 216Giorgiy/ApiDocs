<Type Name="IdentityUser&lt;TKey&gt;" FullName="Microsoft.AspNetCore.Identity.IdentityUser&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public class IdentityUser&lt;TKey&gt; where TKey : IEquatable&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IdentityUser`1&lt;(class System.IEquatable`1&lt;!TKey&gt;) TKey&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IdentityUser`1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TKey">The type used for the primary key for the user.</typeparam>
    <summary>
            Represents a user in the identity system
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityUser`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityUser (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityUser`1.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessFailedCount">
      <MemberSignature Language="C#" Value="public virtual int AccessFailedCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccessFailedCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of failed login attempts for the current user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyStamp">
      <MemberSignature Language="C#" Value="public virtual string ConcurrencyStamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConcurrencyStamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A random value that must change whenever a user is persisted to the store
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public virtual string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the email address for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailConfirmed">
      <MemberSignature Language="C#" Value="public virtual bool EmailConfirmed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmailConfirmed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag indicating if a user has confirmed their email address.
            </summary>
        <value>True if the email address has been confirmed, otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual TKey Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the primary key for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEnabled">
      <MemberSignature Language="C#" Value="public virtual bool LockoutEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockoutEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag indicating if the user could be locked out.
            </summary>
        <value>True if the user could be locked out, otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEnd">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;DateTimeOffset&gt; LockoutEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; LockoutEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date and time, in UTC, when any user lockout ends.
            </summary>
        <value>To be added.</value>
        <remarks>
            A value in the past means the user is not locked out.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedEmail">
      <MemberSignature Language="C#" Value="public virtual string NormalizedEmail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NormalizedEmail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the normalized email address for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedUserName">
      <MemberSignature Language="C#" Value="public virtual string NormalizedUserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NormalizedUserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the normalized user name for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordHash">
      <MemberSignature Language="C#" Value="public virtual string PasswordHash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordHash" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a salted and hashed representation of the password for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneNumber">
      <MemberSignature Language="C#" Value="public virtual string PhoneNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhoneNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a telephone number for the user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneNumberConfirmed">
      <MemberSignature Language="C#" Value="public virtual bool PhoneNumberConfirmed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PhoneNumberConfirmed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag indicating if a user has confirmed their telephone address.
            </summary>
        <value>True if the telephone number has been confirmed, otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStamp">
      <MemberSignature Language="C#" Value="public virtual string SecurityStamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityStamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A random value that must change whenever a users credentials change (password changed, login removed)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityUser`1.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the username for this user.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoFactorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool TwoFactorEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TwoFactorEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag indicating if two factor authentication is enabled for this user.
            </summary>
        <value>True if 2fa is enabled, otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityUser`1.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Stores</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the user name for this user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>