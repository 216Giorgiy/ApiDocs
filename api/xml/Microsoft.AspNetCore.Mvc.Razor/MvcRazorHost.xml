<Type Name="MvcRazorHost" FullName="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost">
  <TypeSignature Language="C#" Value="public class MvcRazorHost : Microsoft.AspNetCore.Razor.RazorEngineHost, Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MvcRazorHost extends Microsoft.AspNetCore.Razor.RazorEngineHost implements class Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.RazorEngineHost</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MvcRazorHost (Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chunkTreeCache" Type="Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" />
        <Parameter Name="resolver" Type="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" />
      </Parameters>
      <Docs>
        <param name="chunkTreeCache">An <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" /> rooted at the application base path.</param>
        <param name="resolver">The <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" /> used to resolve tag helpers on razor views.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" /> using the specified <paramref name="chunkTreeCache" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModelExpressionMethod">
      <MemberSignature Language="C#" Value="public virtual string CreateModelExpressionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateModelExpressionMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the method name used to create model expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeGenerator">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator (Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingGenerator, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator(class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingGenerator, class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingGenerator" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
      </Parameters>
      <Docs>
        <param name="incomingGenerator">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeParser">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser (Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser(class Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCodeParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
      </Parameters>
      <Docs>
        <param name="incomingCodeParser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DecorateRazorParser">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser (Microsoft.AspNetCore.Razor.Parser.RazorParser razorParser, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser(class Microsoft.AspNetCore.Razor.Parser.RazorParser razorParser, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.RazorParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="razorParser" Type="Microsoft.AspNetCore.Razor.Parser.RazorParser" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="razorParser">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DefaultInheritedChunks">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; DefaultInheritedChunks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; DefaultInheritedChunks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of chunks that are injected by default by this host.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultModel">
      <MemberSignature Language="C#" Value="public virtual string DefaultModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the model type used by default when no model is specified.
            </summary>
        <value>To be added.</value>
        <remarks>This value is used as the generic type argument for the base type </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (string rootRelativePath, System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(string rootRelativePath, class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String,System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootRelativePath" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="rootRelativePath">To be added.</param>
        <param name="inputStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedChunkTreeResults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults (string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults(string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">The path to a Razor file to locate _ViewImports.cshtml for.</param>
        <summary>
            Locates and parses _ViewImports.cshtml files applying to the given <paramref name="sourceFileName" /> to
            create <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" />s.
            </summary>
        <returns>Inherited <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InjectAttribute">
      <MemberSignature Language="C#" Value="public virtual string InjectAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InjectAttribute" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name attribute that is used to decorate properties that are injected and need to be
            activated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelExpressionProvider">
      <MemberSignature Language="C#" Value="public virtual string ModelExpressionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelExpressionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name for <c>IModelExpressionProvider</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelExpressionType">
      <MemberSignature Language="C#" Value="public virtual string ModelExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelExpressionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type name used to represent <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" /> model expression properties.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagHelperDescriptorResolver">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ViewDataPropertyName">
      <MemberSignature Language="C#" Value="public virtual string ViewDataPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewDataPropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name for <c>ViewDataDictionary</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>