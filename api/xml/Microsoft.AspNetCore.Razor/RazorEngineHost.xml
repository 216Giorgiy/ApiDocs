<Type Name="RazorEngineHost" FullName="Microsoft.AspNetCore.Razor.RazorEngineHost">
  <TypeSignature Language="C#" Value="public class RazorEngineHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorEngineHost extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.RazorEngineHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the environment in which a Razor template will live
            </summary>
    <remarks>
            The host defines the following things:
            * What method names will be used for rendering markup, expressions etc.  For example "Write", "WriteLiteral"
            * The namespace imports to be added to every page generated via this host
            * The default Base Class to inherit the generated class from
            * The default Class Name and Namespace for the generated class (can be overridden by parameters in RazorTemplateEngine.GeneratedCode)
            * The language of the code in a Razor page
            * The markup, code parsers and chunk generators to use (the system will select defaults, but a Host gets a change to augment them)
                ** See DecorateNNN methods
            * Additional code to add to the generated code (see PostProcessGeneratedCode)
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RazorEngineHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorEngineHost (Microsoft.AspNetCore.Razor.RazorCodeLanguage codeLanguage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.RazorCodeLanguage codeLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeLanguage" Type="Microsoft.AspNetCore.Razor.RazorCodeLanguage" />
      </Parameters>
      <Docs>
        <param name="codeLanguage">The code language to use</param>
        <summary>
            Creates a host which uses the specified code language and the HTML markup language
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorEngineHost (Microsoft.AspNetCore.Razor.RazorCodeLanguage codeLanguage, Func&lt;Microsoft.AspNetCore.Razor.Parser.ParserBase&gt; markupParserFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.RazorCodeLanguage codeLanguage, class System.Func`1&lt;class Microsoft.AspNetCore.Razor.Parser.ParserBase&gt; markupParserFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage,System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeLanguage" Type="Microsoft.AspNetCore.Razor.RazorCodeLanguage" />
        <Parameter Name="markupParserFactory" Type="System.Func&lt;Microsoft.AspNetCore.Razor.Parser.ParserBase&gt;" />
      </Parameters>
      <Docs>
        <param name="codeLanguage">To be added.</param>
        <param name="markupParserFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeLanguage">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.RazorCodeLanguage CodeLanguage { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.RazorCodeLanguage CodeLanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.CodeLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.RazorCodeLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The language of the code within the Razor template.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMarkupParser">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Parser.ParserBase CreateMarkupParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase CreateMarkupParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.CreateMarkupParser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Constructs the markup parser.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateChunkGenerator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator DecorateChunkGenerator (Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator incomingChunkGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator DecorateChunkGenerator(class Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator incomingChunkGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingChunkGenerator" Type="Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator" />
      </Parameters>
      <Docs>
        <param name="incomingChunkGenerator">The chunk generator</param>
        <summary>
            Gets an instance of the chunk generator and is provided an opportunity to decorate or replace it
            </summary>
        <returns>Either the same chunk generator, after modifications, or a different chunk generator</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeGenerator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator (Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingBuilder, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator(class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingBuilder, class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingBuilder" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
      </Parameters>
      <Docs>
        <param name="incomingBuilder">The <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" />.</param>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />.</param>
        <summary>
            Gets an instance of the code generator and is provided an opportunity to decorate or replace it
            </summary>
        <returns>Either the same code generator, after modifications, or a different code generator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeParser">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser (Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser(class Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCodeParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
      </Parameters>
      <Docs>
        <param name="incomingCodeParser">The code parser</param>
        <summary>
            Gets an instance of the code parser and is provided an opportunity to decorate or replace it
            </summary>
        <returns>Either the same code parser, after modifications, or a different code parser</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateMarkupParser">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateMarkupParser (Microsoft.AspNetCore.Razor.Parser.ParserBase incomingMarkupParser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateMarkupParser(class Microsoft.AspNetCore.Razor.Parser.ParserBase incomingMarkupParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingMarkupParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
      </Parameters>
      <Docs>
        <param name="incomingMarkupParser">The markup parser</param>
        <summary>
            Gets an instance of the markup parser and is provided an opportunity to decorate or replace it
            </summary>
        <returns>Either the same markup parser, after modifications, or a different markup parser</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateRazorParser">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser (Microsoft.AspNetCore.Razor.Parser.RazorParser incomingRazorParser, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser(class Microsoft.AspNetCore.Razor.Parser.RazorParser incomingRazorParser, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.RazorParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingRazorParser" Type="Microsoft.AspNetCore.Razor.Parser.RazorParser" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="incomingRazorParser">The <see cref="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" /></param>
        <param name="sourceFileName">The file name of the Razor file being parsed.</param>
        <summary>
            Provides an opportunity for derived types to modify the instance of <see cref="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" />
            used by the <see cref="T:Microsoft.AspNetCore.Razor.RazorTemplateEngine" /> to parse the Razor tree.
            </summary>
        <returns>Either the same code parser, after modifications, or a different code parser.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBaseClass">
      <MemberSignature Language="C#" Value="public virtual string DefaultBaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultBaseClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultBaseClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The base-class of the generated class
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultClassName">
      <MemberSignature Language="C#" Value="public virtual string DefaultClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultClassName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the generated class
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The namespace which will contain the generated class
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeMode">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DesignTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if the parser and chunk generator should run in design-time mode
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInstrumentation">
      <MemberSignature Language="C#" Value="public virtual bool EnableInstrumentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInstrumentation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.EnableInstrumentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Boolean indicating if instrumentation code should be injected into the output page
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedClassContext">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext GeneratedClassContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext GeneratedClassContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.GeneratedClassContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Details about the methods and types that should be used to generate code for Razor constructs
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstrumentedSourceFilePath">
      <MemberSignature Language="C#" Value="public virtual string InstrumentedSourceFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstrumentedSourceFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.InstrumentedSourceFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path to use for this document when generating Instrumentation calls
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndentingWithTabs">
      <MemberSignature Language="C#" Value="public virtual bool IsIndentingWithTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIndentingWithTabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.IsIndentingWithTabs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the design time editor is using tabs or spaces for indentation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceImports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; NamespaceImports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; NamespaceImports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.NamespaceImports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of namespaces to import in the generated file
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticHelpers">
      <MemberSignature Language="C#" Value="public virtual bool StaticHelpers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticHelpers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.StaticHelpers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Boolean indicating if helper methods should be instance methods or static methods
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabSize">
      <MemberSignature Language="C#" Value="public virtual int TabSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.TabSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tab size used by the hosting editor, when indenting with tabs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagHelperDescriptorResolver">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorEngineHost.TagHelperDescriptorResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" /> used to resolve <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>