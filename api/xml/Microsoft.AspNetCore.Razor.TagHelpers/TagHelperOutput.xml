<Type Name="TagHelperOutput" FullName="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput">
  <TypeSignature Language="C#" Value="public class TagHelperOutput : Microsoft.AspNetCore.Html.IHtmlContentContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TagHelperOutput extends System.Object implements class Microsoft.AspNetCore.Html.IHtmlContent, class Microsoft.AspNetCore.Html.IHtmlContentContainer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Html.IHtmlContentContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Class used to represent the output of an <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagHelperOutput (string tagName, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList attributes, Func&lt;bool,System.Text.Encodings.Web.HtmlEncoder,System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;&gt; getChildContentAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName, class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList attributes, class System.Func`3&lt;bool, class System.Text.Encodings.Web.HtmlEncoder, class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;&gt; getChildContentAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList,System.Func{System.Boolean,System.Text.Encodings.Web.HtmlEncoder,System.Threading.Tasks.Task{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent}})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attributes" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" />
        <Parameter Name="getChildContentAsync" Type="System.Func&lt;System.Boolean,System.Text.Encodings.Web.HtmlEncoder,System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="tagName">The HTML element's tag name.</param>
        <param name="attributes">The HTML attributes.</param>
        <param name="getChildContentAsync">
            A delegate used to execute children asynchronously with the given <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> in scope and
            return their rendered content.
            </param>
        <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HTML element's attributes.
            </summary>
        <value>To be added.</value>
        <remarks>
            MVC will HTML encode <see cref="T:System.String" /> values when generating the start tag. It will not HTML encode
            a <c>Microsoft.AspNetCore.Mvc.Rendering.HtmlString</c> instance. MVC converts most other types to a
            <see cref="T:System.String" />, then HTML encodes the result.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent Content" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get or set the HTML element's main content.
            </summary>
        <value>To be added.</value>
        <remarks>Value occurs in the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" />'s final output after <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent" /> and
            before <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Executes children asynchronously and returns their rendered content.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns content rendered by children.</returns>
        <remarks>
            This method is memoized. Multiple calls will not cause children to re-execute with the page's original
            <see cref="T:System.Text.Encodings.Web.HtmlEncoder" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync (bool useCachedResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync(bool useCachedResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useCachedResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useCachedResult">
            If <c>true</c>, multiple calls will not cause children to re-execute with the page's original
            <see cref="T:System.Text.Encodings.Web.HtmlEncoder" />; returns cached content.
            </param>
        <summary>
            Executes children asynchronously and returns their rendered content.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns content rendered by children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync (System.Text.Encodings.Web.HtmlEncoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync(class System.Text.Encodings.Web.HtmlEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="encoder">
            The <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> to use when the page handles non-<see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> C# expressions.
            If <c>null</c>, executes children with the page's current <see cref="T:System.Text.Encodings.Web.HtmlEncoder" />.
            </param>
        <summary>
            Executes children asynchronously with the given <paramref name="encoder" /> in scope and returns their
            rendered content.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns content rendered by children.</returns>
        <remarks>
            This method is memoized. Multiple calls with the same <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> instance will not cause
            children to re-execute with that encoder in scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync (bool useCachedResult, System.Text.Encodings.Web.HtmlEncoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt; GetChildContentAsync(bool useCachedResult, class System.Text.Encodings.Web.HtmlEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.GetChildContentAsync(System.Boolean,System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useCachedResult" Type="System.Boolean" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="useCachedResult">
            If <c>true</c>, multiple calls with the same <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> will not cause children to
            re-execute; returns cached content.
            </param>
        <param name="encoder">
            The <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> to use when the page handles non-<see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> C# expressions.
            If <c>null</c>, executes children with the page's current <see cref="T:System.Text.Encodings.Web.HtmlEncoder" />.
            </param>
        <summary>
            Executes children asynchronously with the given <paramref name="encoder" /> in scope and returns their
            rendered content.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns content rendered by children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentModified">
      <MemberSignature Language="C#" Value="public bool IsContentModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.IsContentModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>true</c> if <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content" /> has been set, <c>false</c> otherwise.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Html.IHtmlContentContainer.CopyTo">
      <MemberSignature Language="C#" Value="void IHtmlContentContainer.CopyTo (Microsoft.AspNetCore.Html.IHtmlContentBuilder destination);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Html.IHtmlContentContainer.CopyTo(class Microsoft.AspNetCore.Html.IHtmlContentBuilder destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Microsoft#AspNetCore#Html#IHtmlContentContainer#CopyTo(Microsoft.AspNetCore.Html.IHtmlContentBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="Microsoft.AspNetCore.Html.IHtmlContentBuilder" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Html.IHtmlContentContainer.MoveTo">
      <MemberSignature Language="C#" Value="void IHtmlContentContainer.MoveTo (Microsoft.AspNetCore.Html.IHtmlContentBuilder destination);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Html.IHtmlContentContainer.MoveTo(class Microsoft.AspNetCore.Html.IHtmlContentBuilder destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Microsoft#AspNetCore#Html#IHtmlContentContainer#MoveTo(Microsoft.AspNetCore.Html.IHtmlContentBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="Microsoft.AspNetCore.Html.IHtmlContentBuilder" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PostContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PostContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HTML element's post content.
            </summary>
        <value>To be added.</value>
        <remarks>Value is appended to the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" />'s final output.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostElement">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PostElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PostElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Content that follows the HTML element.
            </summary>
        <value>To be added.</value>
        <remarks>Value is rendered after the HTML element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PreContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PreContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HTML element's pre content.
            </summary>
        <value>To be added.</value>
        <remarks>Value is prepended to the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" />'s final output.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreElement">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PreElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent PreElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Content that precedes the HTML element.
            </summary>
        <value>To be added.</value>
        <remarks>Value is rendered before the HTML element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reinitialize">
      <MemberSignature Language="C#" Value="public void Reinitialize (string tagName, Microsoft.AspNetCore.Razor.TagHelpers.TagMode tagMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reinitialize(string tagName, valuetype Microsoft.AspNetCore.Razor.TagHelpers.TagMode tagMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Reinitialize(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="tagMode" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagMode" />
      </Parameters>
      <Docs>
        <param name="tagName">The tag name to use.</param>
        <param name="tagMode">The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode" /> to use.</param>
        <summary>
            Clears the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" /> and updates its state with the provided values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressOutput">
      <MemberSignature Language="C#" Value="public void SuppressOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuppressOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.SuppressOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Changes <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" /> to generate nothing.
            </summary>
        <remarks>
            Sets <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName" /> to <c>null</c>, and clears <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreElement" />, <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PreContent" />,
            <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.Content" />, <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostContent" />, and <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.PostElement" /> to suppress output.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagMode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagMode TagMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Razor.TagHelpers.TagMode TagMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Syntax of the element in the generated HTML.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HTML element's tag name.
            </summary>
        <value>To be added.</value>
        <remarks>
            A whitespace or <c>null</c> value results in no start or end tag being rendered.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.TextWriter writer, System.Text.Encodings.Web.HtmlEncoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.TextWriter writer, class System.Text.Encodings.Web.HtmlEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>