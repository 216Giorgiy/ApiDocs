<Type Name="CSharpCodeParser" FullName="Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser">
  <TypeSignature Language="C#" Value="public class CSharpCodeParser : Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpCodeParser extends Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer, class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTokenizer">Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbol">Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbolType">Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptIf">
      <MemberSignature Language="C#" Value="protected bool AcceptIf (Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool AcceptIf(valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.AcceptIf(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTagHelperDirective">
      <MemberSignature Language="C#" Value="protected virtual void AddTagHelperDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddTagHelperDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.AddTagHelperDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertDirective">
      <MemberSignature Language="C#" Value="protected void AssertDirective (string directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AssertDirective(string directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.AssertDirective(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directive">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="At">
      <MemberSignature Language="C#" Value="protected bool At (Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool At(valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTypeDirective">
      <MemberSignature Language="C#" Value="protected void BaseTypeDirective (string noTypeNameError, Func&lt;string,Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator&gt; createChunkGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseTypeDirective(string noTypeNameError, class System.Func`2&lt;string, class Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator&gt; createChunkGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.BaseTypeDirective(System.String,System.Func{System.String,Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noTypeNameError" Type="System.String" />
        <Parameter Name="createChunkGenerator" Type="System.Func&lt;System.String,Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="noTypeNameError">To be added.</param>
        <param name="createChunkGenerator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteBlock">
      <MemberSignature Language="C#" Value="protected void CompleteBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CompleteBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.CompleteBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteBlock">
      <MemberSignature Language="C#" Value="protected void CompleteBlock (bool insertMarkerIfNecessary);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CompleteBlock(bool insertMarkerIfNecessary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.CompleteBlock(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertMarkerIfNecessary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="insertMarkerIfNecessary">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteBlock">
      <MemberSignature Language="C#" Value="protected void CompleteBlock (bool insertMarkerIfNecessary, bool captureWhitespaceToEndOfLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CompleteBlock(bool insertMarkerIfNecessary, bool captureWhitespaceToEndOfLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.CompleteBlock(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertMarkerIfNecessary" Type="System.Boolean" />
        <Parameter Name="captureWhitespaceToEndOfLine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="insertMarkerIfNecessary">To be added.</param>
        <param name="captureWhitespaceToEndOfLine">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionsDirective">
      <MemberSignature Language="C#" Value="protected virtual void FunctionsDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FunctionsDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.FunctionsDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override void HandleEmbeddedTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleEmbeddedTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.HandleEmbeddedTransition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritsDirective">
      <MemberSignature Language="C#" Value="protected virtual void InheritsDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InheritsDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.InheritsDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritsDirectiveCore">
      <MemberSignature Language="C#" Value="protected void InheritsDirectiveCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InheritsDirectiveCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.InheritsDirectiveCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAtEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override bool IsAtEmbeddedTransition (bool allowTemplatesAndComments, bool allowTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsAtEmbeddedTransition(bool allowTemplatesAndComments, bool allowTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.IsAtEmbeddedTransition(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowTemplatesAndComments" Type="System.Boolean" />
        <Parameter Name="allowTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowTemplatesAndComments">To be added.</param>
        <param name="allowTransitions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNested">
      <MemberSignature Language="C#" Value="public bool IsNested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNested" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.IsNested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpacingToken">
      <MemberSignature Language="C#" Value="protected static Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,bool&gt; IsSpacingToken (bool includeNewLines, bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Func`2&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol, bool&gt; IsSpacingToken(bool includeNewLines, bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.IsSpacingToken(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeNewLines" Type="System.Boolean" />
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeNewLines">To be added.</param>
        <param name="includeComments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.ISet&lt;string&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.Keywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt; Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer, class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt; Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDirectives">
      <MemberSignature Language="C#" Value="protected void MapDirectives (Action handler, string[] directives);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MapDirectives(class System.Action handler, string[] directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.MapDirectives(System.Action,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action" />
        <Parameter Name="directives" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="directives">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceOrTypeName">
      <MemberSignature Language="C#" Value="protected bool NamespaceOrTypeName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool NamespaceOrTypeName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.NamespaceOrTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParser">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Razor.Parser.ParserBase OtherParser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Parser.ParserBase OtherParser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.OtherParser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSpanBeforeRazorComment">
      <MemberSignature Language="C#" Value="protected override void OutputSpanBeforeRazorComment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OutputSpanBeforeRazorComment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.OutputSpanBeforeRazorComment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBlock">
      <MemberSignature Language="C#" Value="public override void ParseBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.ParseBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagHelperDirective">
      <MemberSignature Language="C#" Value="protected virtual void RemoveTagHelperDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveTagHelperDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.RemoveTagHelperDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedDirective">
      <MemberSignature Language="C#" Value="protected virtual void ReservedDirective (bool topLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReservedDirective(bool topLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.ReservedDirective(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="topLevel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionDirective">
      <MemberSignature Language="C#" Value="protected virtual void SectionDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SectionDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.SectionDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTypeEquals">
      <MemberSignature Language="C#" Value="protected override bool SymbolTypeEquals (Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType x, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool SymbolTypeEquals(valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType x, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType" />
        <Parameter Name="y" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.CSharpSymbolType" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagHelperPrefixDirective">
      <MemberSignature Language="C#" Value="protected virtual void TagHelperPrefixDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TagHelperPrefixDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.TagHelperPrefixDirective" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetDirectiveHandler">
      <MemberSignature Language="C#" Value="protected bool TryGetDirectiveHandler (string directive, out Action handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryGetDirectiveHandler(string directive, class System.Action handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.CSharpCodeParser.TryGetDirectiveHandler(System.String,System.Action@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
        <Parameter Name="handler" Type="System.Action&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="directive">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>