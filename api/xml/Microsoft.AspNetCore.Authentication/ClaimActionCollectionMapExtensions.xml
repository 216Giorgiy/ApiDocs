<Type Name="ClaimActionCollectionMapExtensions" FullName="Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions">
  <TypeSignature Language="C#" Value="public static class ClaimActionCollectionMapExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ClaimActionCollectionMapExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeleteClaim">
      <MemberSignature Language="C#" Value="public static void DeleteClaim (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteClaim(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.DeleteClaim(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType"></param>
        <summary>
            Delete all claims from the given ClaimsIdentity with the given ClaimType.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCustomJson">
      <MemberSignature Language="C#" Value="public static void MapCustomJson (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, Func&lt;Newtonsoft.Json.Linq.JObject,string&gt; resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapCustomJson(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, class System.Func`2&lt;class Newtonsoft.Json.Linq.JObject, string&gt; resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapCustomJson(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.Func{Newtonsoft.Json.Linq.JObject,System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="resolver" Type="System.Func&lt;Newtonsoft.Json.Linq.JObject,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="resolver">The Func that will be called to select value from the given json user data.</param>
        <summary>
            Run the given resolver to select a value from the json user data to add as a claim.
            This no-ops if the returned value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCustomJson">
      <MemberSignature Language="C#" Value="public static void MapCustomJson (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string valueType, Func&lt;Newtonsoft.Json.Linq.JObject,string&gt; resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapCustomJson(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string valueType, class System.Func`2&lt;class Newtonsoft.Json.Linq.JObject, string&gt; resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapCustomJson(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.String,System.Func{Newtonsoft.Json.Linq.JObject,System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
        <Parameter Name="resolver" Type="System.Func&lt;Newtonsoft.Json.Linq.JObject,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="valueType">The value to use for Claim.ValueType when creating a Claim.</param>
        <param name="resolver">The Func that will be called to select value from the given json user data.</param>
        <summary>
            Run the given resolver to select a value from the json user data to add as a claim.
            This no-ops if the returned value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapJsonKey">
      <MemberSignature Language="C#" Value="public static void MapJsonKey (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapJsonKey(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonKey(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="jsonKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="jsonKey">The top level key to look for in the json user data.</param>
        <summary>
            Select a top level value from the json user data with the given key name and add it as a Claim.
            This no-ops if the key is not found or the value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapJsonKey">
      <MemberSignature Language="C#" Value="public static void MapJsonKey (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string valueType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapJsonKey(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonKey(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="jsonKey" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="jsonKey">The top level key to look for in the json user data.</param>
        <param name="valueType">The value to use for Claim.ValueType when creating a Claim.</param>
        <summary>
            Select a top level value from the json user data with the given key name and add it as a Claim.
            This no-ops if the key is not found or the value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapJsonSubKey">
      <MemberSignature Language="C#" Value="public static void MapJsonSubKey (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string subKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapJsonSubKey(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string subKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonSubKey(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="jsonKey" Type="System.String" />
        <Parameter Name="subKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="jsonKey">The top level key to look for in the json user data.</param>
        <param name="subKey">The second level key to look for in the json user data.</param>
        <summary>
            Select a second level value from the json user data with the given top level key name and second level sub key name and add it as a Claim.
            This no-ops if the keys are not found or the value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapJsonSubKey">
      <MemberSignature Language="C#" Value="public static void MapJsonSubKey (this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string subKey, string valueType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapJsonSubKey(class Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection collection, string claimType, string jsonKey, string subKey, string valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonSubKey(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.OAuth</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection" RefType="this" />
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="jsonKey" Type="System.String" />
        <Parameter Name="subKey" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collection"></param>
        <param name="claimType">The value to use for Claim.Type when creating a Claim.</param>
        <param name="jsonKey">The top level key to look for in the json user data.</param>
        <param name="subKey">The second level key to look for in the json user data.</param>
        <param name="valueType">The value to use for Claim.ValueType when creating a Claim.</param>
        <summary>
            Select a second level value from the json user data with the given top level key name and second level sub key name and add it as a Claim.
            This no-ops if the keys are not found or the value is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>