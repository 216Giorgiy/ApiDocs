<Type Name="HeaderUtilities" FullName="Microsoft.Net.Http.Headers.HeaderUtilities">
  <TypeSignature Language="C#" Value="public static class HeaderUtilities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HeaderUtilities extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Net.Http.Headers.HeaderUtilities" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsCacheDirective">
      <MemberSignature Language="C#" Value="public static bool ContainsCacheDirective (Microsoft.Extensions.Primitives.StringValues cacheControlDirectives, string targetDirectives);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsCacheDirective(valuetype Microsoft.Extensions.Primitives.StringValues cacheControlDirectives, string targetDirectives) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.ContainsCacheDirective(Microsoft.Extensions.Primitives.StringValues,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheControlDirectives" Type="Microsoft.Extensions.Primitives.StringValues" />
        <Parameter Name="targetDirectives" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheControlDirectives">
            The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> containing the set of cache control directives.
            </param>
        <param name="targetDirectives">
            The target cache control directives to look for.
            </param>
        <summary>
            Check if a target directive exists among the set of given cache control directives.
            </summary>
        <returns>
          <code>true</code> if <paramref name="targetDirectives" /> is contained in <paramref name="cacheControlDirectives" />;
            otherwise, <code>false</code>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDate">
      <MemberSignature Language="C#" Value="public static string FormatDate (DateTimeOffset dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatDate(valuetype System.DateTimeOffset dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.FormatDate(System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dateTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDate">
      <MemberSignature Language="C#" Value="public static string FormatDate (DateTimeOffset dateTime, bool quoted);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatDate(valuetype System.DateTimeOffset dateTime, bool quoted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.FormatDate(System.DateTimeOffset,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTimeOffset" />
        <Parameter Name="quoted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dateTime">To be added.</param>
        <param name="quoted">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInt64">
      <MemberSignature Language="C#" Value="public static string FormatInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.FormatInt64(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNonNegativeInt64">
      <MemberSignature Language="C#" Value="public static string FormatNonNegativeInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatNonNegativeInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.FormatNonNegativeInt64(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
            The number to convert.
            </param>
        <summary>
            Converts the non-negative 64-bit numeric value to its equivalent string representation.
            </summary>
        <returns>
            The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9 with no leading zeroes.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQuotes">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Primitives.StringSegment RemoveQuotes (Microsoft.Extensions.Primitives.StringSegment input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Extensions.Primitives.StringSegment RemoveQuotes(valuetype Microsoft.Extensions.Primitives.StringSegment input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.RemoveQuotes(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQuotes">
      <MemberSignature Language="C#" Value="public static string RemoveQuotes (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveQuotes(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.RemoveQuotes(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseDate">
      <MemberSignature Language="C#" Value="public static bool TryParseDate (Microsoft.Extensions.Primitives.StringSegment input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseDate(valuetype Microsoft.Extensions.Primitives.StringSegment input, valuetype System.DateTimeOffset result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseDate(Microsoft.Extensions.Primitives.StringSegment,System.DateTimeOffset@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseDate">
      <MemberSignature Language="C#" Value="public static bool TryParseDate (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseDate(string input, valuetype System.DateTimeOffset result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseDate(System.String,System.DateTimeOffset@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseInt64">
      <MemberSignature Language="C#" Value="public static bool TryParseInt64 (string value, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseInt64(string value, int64 result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseInt64(System.String,System.Int64@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseNonNegativeInt32">
      <MemberSignature Language="C#" Value="public static bool TryParseNonNegativeInt32 (Microsoft.Extensions.Primitives.StringSegment value, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseNonNegativeInt32(valuetype Microsoft.Extensions.Primitives.StringSegment value, int32 result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseNonNegativeInt32(Microsoft.Extensions.Primitives.StringSegment,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
            A string containing a number to convert.
            </param>
        <param name="result">
            When this method returns, contains the 64-bit signed integer value equivalent of the number contained
            in the string, if the conversion succeeded, or zero if the conversion failed. The conversion fails if
            the string is null or String.Empty, is not of the correct format, is negative, or represents a number
            greater than Int64.MaxValue. This parameter is passed uninitialized; any value originally supplied in
            result will be overwritten.
            </param>
        <summary>
            Try to convert a string representation of a positive number to its 64-bit signed integer equivalent.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
        <returns>
          <code>true</code> if parsing succeeded; otherwise, <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseNonNegativeInt64">
      <MemberSignature Language="C#" Value="public static bool TryParseNonNegativeInt64 (Microsoft.Extensions.Primitives.StringSegment value, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseNonNegativeInt64(valuetype Microsoft.Extensions.Primitives.StringSegment value, int64 result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseNonNegativeInt64(Microsoft.Extensions.Primitives.StringSegment,System.Int64@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
            A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> containing a number to convert.
            </param>
        <param name="result">
            When this method returns, contains the 64-bit signed integer value equivalent of the number contained
            in the string, if the conversion succeeded, or zero if the conversion failed. The conversion fails if
            the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> is null or String.Empty, is not of the correct format, is negative, or
            represents a number greater than Int64.MaxValue. This parameter is passed uninitialized; any value
            originally supplied in result will be overwritten.
            </param>
        <summary>
            Try to convert a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> representation of a positive number to its 64-bit signed
            integer equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
        <returns>
          <code>true</code> if parsing succeeded; otherwise, <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseSeconds">
      <MemberSignature Language="C#" Value="public static bool TryParseSeconds (Microsoft.Extensions.Primitives.StringValues headerValues, string targetValue, out Nullable&lt;TimeSpan&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseSeconds(valuetype Microsoft.Extensions.Primitives.StringValues headerValues, string targetValue, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.HeaderUtilities.TryParseSeconds(Microsoft.Extensions.Primitives.StringValues,System.String,System.Nullable{System.TimeSpan}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerValues" Type="Microsoft.Extensions.Primitives.StringValues" />
        <Parameter Name="targetValue" Type="System.String" />
        <Parameter Name="value" Type="System.Nullable&lt;System.TimeSpan&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerValues">
            The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> containing the set of header values to search.
            </param>
        <param name="targetValue">
            The target header value to look for.
            </param>
        <param name="value">
            When this method returns, contains the parsed <see cref="T:System.TimeSpan" />, if the parsing succeeded, or
            null if the parsing failed. The conversion fails if the <paramref name="targetValue" /> was not
            found or could not be parsed as a <see cref="T:System.TimeSpan" />. This parameter is passed uninitialized;
            any value originally supplied in result will be overwritten.
            </param>
        <summary>
            Try to find a target header value among the set of given header values and parse it as a
            <see cref="T:System.TimeSpan" />.
            </summary>
        <returns>
          <code>true</code> if <paramref name="targetValue" /> is found and successfully parsed; otherwise,
            <code>false</code>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>