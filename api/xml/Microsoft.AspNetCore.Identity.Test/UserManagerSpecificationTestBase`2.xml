<Type Name="UserManagerSpecificationTestBase&lt;TUser,TKey&gt;" FullName="Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;TUser,TKey&gt;">
  <TypeSignature Language="C#" Value="public abstract class UserManagerSpecificationTestBase&lt;TUser,TKey&gt; where TUser : class where TKey : IEquatable&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserManagerSpecificationTestBase`2&lt;class TUser, (class System.IEquatable`1&lt;!TKey&gt;) TKey&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TUser">The type of the user.</typeparam>
    <typeparam name="TKey">The primary key type.</typeparam>
    <summary>
            Base class for tests that exercise basic identity functionality that all stores should support.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UserManagerSpecificationTestBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_errorDescriber">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.AspNetCore.Identity.IdentityErrorDescriber _errorDescriber;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.AspNetCore.Identity.IdentityErrorDescriber _errorDescriber" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2._errorDescriber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityErrorDescriber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Error describer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeEmailAllowedByDefault">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeEmailAllowedByDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeEmailAllowedByDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeEmailAllowedByDefault" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;AddDupeEmailAllowedByDefault&gt;d__44))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeEmailFailsWhenUniqueEmailRequired">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeEmailFailsWhenUniqueEmailRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeEmailFailsWhenUniqueEmailRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeEmailFailsWhenUniqueEmailRequired" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;AddDupeEmailFailsWhenUniqueEmailRequired&gt;d__45))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeLoginFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeLoginFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeLoginFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeLoginFails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;AddDupeLoginFails&gt;d__47))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeUserNameFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeUserNameFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeUserNameFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeUserNameFails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;AddDupeUserNameFails&gt;d__43))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPasswordFailsIfAlreadyHave">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddPasswordFailsIfAlreadyHave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddPasswordFailsIfAlreadyHave() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddPasswordFailsIfAlreadyHave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;AddPasswordFailsIfAlreadyHave&gt;d__34))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserStore">
      <MemberSignature Language="C#" Value="protected abstract void AddUserStore (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddUserStore(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services">The service collection to add to.</param>
        <param name="context">The context for the store to use, optional.</param>
        <summary>
            Adds an IUserStore to services for the test.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddRemoveUserClaim">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanAddRemoveUserClaim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanAddRemoveUserClaim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanAddRemoveUserClaim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanAddRemoveUserClaim&gt;d__38))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChainPasswordValidators">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChainPasswordValidators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChainPasswordValidators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChainPasswordValidators" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChainPasswordValidators&gt;d__28))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChainUserValidators">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChainUserValidators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChainUserValidators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChainUserValidators" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChainUserValidators&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangeEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangeEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangeEmail" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChangeEmail&gt;d__74))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeEmailWithDifferentTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangeEmailWithDifferentTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangeEmailWithDifferentTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangeEmailWithDifferentTokenProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChangeEmailWithDifferentTokenProvider&gt;d__75))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangePassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChangePassword&gt;d__37))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangePhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangePhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangePhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangePhoneNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanChangePhoneNumber&gt;d__70))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConfirmEmailWithStaticToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanConfirmEmailWithStaticToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanConfirmEmailWithStaticToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanConfirmEmailWithStaticToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanConfirmEmailWithStaticToken&gt;d__56))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserAddLogin">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserAddLogin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserAddLogin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserAddLogin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanCreateUserAddLogin&gt;d__32))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserAddRemoveLogin">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserAddRemoveLogin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserAddRemoveLogin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserAddRemoveLogin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanCreateUserAddRemoveLogin&gt;d__35))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserLoginAndAddPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserLoginAndAddPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserLoginAndAddPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserLoginAndAddPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanCreateUserLoginAndAddPassword&gt;d__33))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserNoPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserNoPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserNoPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserNoPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanCreateUserNoPassword&gt;d__31))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeleteUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanDeleteUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanDeleteUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanDeleteUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanDeleteUser&gt;d__14))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEnableLockoutManuallyAndLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanEnableLockoutManuallyAndLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanEnableLockoutManuallyAndLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanEnableLockoutManuallyAndLockout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanEnableLockoutManuallyAndLockout&gt;d__62))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindByEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindByEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindByEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindByEmail" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanFindByEmail&gt;d__48))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindById">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindById ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindById() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindById" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanFindById&gt;d__21))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindUsersViaUserQuerable">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindUsersViaUserQuerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindUsersViaUserQuerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindUsersViaUserQuerable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanFindUsersViaUserQuerable&gt;d__49))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGenerateAndVerifyUserTokenWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGenerateAndVerifyUserTokenWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGenerateAndVerifyUserTokenWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGenerateAndVerifyUserTokenWithStaticTokenProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanGenerateAndVerifyUserTokenWithStaticTokenProvider&gt;d__55))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetSetUpdateAndRemoveUserToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetSetUpdateAndRemoveUserToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetSetUpdateAndRemoveUserToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetSetUpdateAndRemoveUserToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanGetSetUpdateAndRemoveUserToken&gt;d__83))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetUsersWithClaims">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetUsersWithClaims ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetUsersWithClaims() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetUsersWithClaims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanGetUsersWithClaims&gt;d__91))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetValidTwoFactor">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetValidTwoFactor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetValidTwoFactor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetValidTwoFactor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanGetValidTwoFactor&gt;d__86))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedeemRecoveryCodeOnlyOnce">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRedeemRecoveryCodeOnlyOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRedeemRecoveryCodeOnlyOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanRedeemRecoveryCodeOnlyOnce" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanRedeemRecoveryCodeOnlyOnce&gt;d__84))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemovePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRemovePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRemovePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanRemovePassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanRemovePassword&gt;d__36))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReplaceUserClaim">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanReplaceUserClaim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanReplaceUserClaim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanReplaceUserClaim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanReplaceUserClaim&gt;d__40))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetPasswordWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanResetPasswordWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanResetPasswordWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanResetPasswordWithStaticTokenProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanResetPasswordWithStaticTokenProvider&gt;d__52))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdatePasswordUsingHasher">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanUpdatePasswordUsingHasher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanUpdatePasswordUsingHasher() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanUpdatePasswordUsingHasher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanUpdatePasswordUsingHasher&gt;d__20))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdateUserName">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanUpdateUserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanUpdateUserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanUpdateUserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanUpdateUserName&gt;d__15))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVerifyPhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanVerifyPhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanVerifyPhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanVerifyPhoneNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CanVerifyPhoneNumber&gt;d__73))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailFailsWithEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailFailsWithEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailFailsWithEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailFailsWithEmail" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangeEmailFailsWithEmail&gt;d__78))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailFailsWithWrongToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangeEmailFailsWithWrongToken&gt;d__77))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailTokensFailsAfterEmailChanged">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailTokensFailsAfterEmailChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailTokensFailsAfterEmailChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailTokensFailsAfterEmailChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangeEmailTokensFailsAfterEmailChanged&gt;d__76))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordFallsIfPasswordWrong">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePasswordFallsIfPasswordWrong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePasswordFallsIfPasswordWrong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePasswordFallsIfPasswordWrong" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangePasswordFallsIfPasswordWrong&gt;d__42))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberFailsWithWrongPhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongPhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongPhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberFailsWithWrongPhoneNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangePhoneNumberFailsWithWrongPhoneNumber&gt;d__72))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberFailsWithWrongToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ChangePhoneNumberFailsWithWrongToken&gt;d__71))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSetEmailValidatesUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CheckSetEmailValidatesUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CheckSetEmailValidatesUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CheckSetEmailValidatesUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CheckSetEmailValidatesUser&gt;d__19))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSetUserNameValidatesUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CheckSetUserNameValidatesUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CheckSetUserNameValidatesUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CheckSetUserNameValidatesUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CheckSetUserNameValidatesUser&gt;d__16))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmEmailFalseByDefaultTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmEmailFalseByDefaultTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmEmailFalseByDefaultTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmEmailFalseByDefaultTest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ConfirmEmailFalseByDefaultTest&gt;d__50))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmEmailWithStaticTokenFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmEmailWithStaticTokenFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmEmailWithStaticTokenFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmEmailWithStaticTokenFailsWithWrongToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ConfirmEmailWithStaticTokenFailsWithWrongToken&gt;d__57))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmTokenFailsAfterPasswordChange">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmTokenFailsAfterPasswordChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmTokenFailsAfterPasswordChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmTokenFailsAfterPasswordChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ConfirmTokenFailsAfterPasswordChange&gt;d__58))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateManager">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; CreateManager (object context = null, Microsoft.Extensions.DependencyInjection.IServiceCollection services = null, Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; CreateManager(object context, class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="configureServices" Type="System.Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context that will be passed into the store, typically a db context.</param>
        <param name="services">The service collection to use, optional.</param>
        <param name="configureServices">Delegate used to configure the services, optional.</param>
        <summary>
            Creates the user manager used for tests.
            </summary>
        <returns>The user manager to use for tests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestContext">
      <MemberSignature Language="C#" Value="protected abstract object CreateTestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateTestContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateTestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates the context object for a test, typically a DbContext.
            </summary>
        <returns>The context object for a test, typically a DbContext.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestUser">
      <MemberSignature Language="C#" Value="protected abstract TUser CreateTestUser (string namePrefix = &quot;&quot;, string email = &quot;&quot;, string phoneNumber = &quot;&quot;, bool lockoutEnabled = false, Nullable&lt;DateTimeOffset&gt; lockoutEnd = null, bool useNamePrefixAsUserName = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TUser CreateTestUser(string namePrefix, string email, string phoneNumber, bool lockoutEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lockoutEnd, bool useNamePrefixAsUserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namePrefix" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="lockoutEnabled" Type="System.Boolean" />
        <Parameter Name="lockoutEnd" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="useNamePrefixAsUserName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="namePrefix">Optional name prefix, name will be randomized.</param>
        <param name="email">Optional email.</param>
        <param name="phoneNumber">Optional phone number.</param>
        <param name="lockoutEnabled">Optional lockout enabled.</param>
        <param name="lockoutEnd">Optional lockout end.</param>
        <param name="useNamePrefixAsUserName">If true, the prefix should be used as the username without a random pad.</param>
        <summary>
            Create a new test user instance.
            </summary>
        <returns>The new test user instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdatesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateUpdatesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateUpdatesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateUpdatesSecurityStamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CreateUpdatesSecurityStamp&gt;d__18))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserWillSetCreateDateOnlyIfSupported">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateUserWillSetCreateDateOnlyIfSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateUserWillSetCreateDateOnlyIfSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateUserWillSetCreateDateOnlyIfSupported" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;CreateUserWillSetCreateDateOnlyIfSupported&gt;d__13))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailFactorFailsAfterSecurityStampChangeTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EmailFactorFailsAfterSecurityStampChangeTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EmailFactorFailsAfterSecurityStampChangeTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.EmailFactorFailsAfterSecurityStampChangeTest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;EmailFactorFailsAfterSecurityStampChangeTest&gt;d__79))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTwoFactorChangesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EnableTwoFactorChangesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EnableTwoFactorChangesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.EnableTwoFactorChangesSecurityStamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;EnableTwoFactorChangesSecurityStamp&gt;d__80))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTwoFactorWithUnknownFactorProviderWillThrow">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GenerateTwoFactorWithUnknownFactorProviderWillThrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GenerateTwoFactorWithUnknownFactorProviderWillThrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GenerateTwoFactorWithUnknownFactorProviderWillThrow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;GenerateTwoFactorWithUnknownFactorProviderWillThrow&gt;d__81))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUsers">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;TUser&gt; GenerateUsers (string userNamePrefix, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.Generic.List`1&lt;!TUser&gt; GenerateUsers(string userNamePrefix, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GenerateUsers(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNamePrefix" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="userNamePrefix"></param>
        <param name="count"></param>
        <summary>
            Generate count users with a name prefix.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidTwoFactorTestEmptyWithNoProviders">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GetValidTwoFactorTestEmptyWithNoProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GetValidTwoFactorTestEmptyWithNoProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GetValidTwoFactorTestEmptyWithNoProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;GetValidTwoFactorTestEmptyWithNoProviders&gt;d__82))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut&gt;d__65))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowPlus5ShouldBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowPlus5ShouldBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowPlus5ShouldBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowPlus5ShouldBeLockedOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;LockoutEndToUtcNowPlus5ShouldBeLockedOut&gt;d__67))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut&gt;d__66))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutFailsIfNotEnabled">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutFailsIfNotEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutFailsIfNotEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutFailsIfNotEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;LockoutFailsIfNotEnabled&gt;d__64))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullableDateTimeOperationTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task NullableDateTimeOperationTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task NullableDateTimeOperationTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.NullableDateTimeOperationTest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;NullableDateTimeOperationTest&gt;d__90))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="protected const string NullValue;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string NullValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.NullValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Null value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockAddPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockAddPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockAddPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockAddPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;PasswordValidatorCanBlockAddPassword&gt;d__27))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockChangePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockChangePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockChangePassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;PasswordValidatorCanBlockChangePassword&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockCreateUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockCreateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockCreateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockCreateUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;PasswordValidatorCanBlockCreateUser&gt;d__30))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider&gt;d__53))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneFactorFailsAfterSecurityStampChangeTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PhoneFactorFailsAfterSecurityStampChangeTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PhoneFactorFailsAfterSecurityStampChangeTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PhoneFactorFailsAfterSecurityStampChangeTest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;PhoneFactorFailsAfterSecurityStampChangeTest&gt;d__87))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoveryCodesInvalidAfterReplace">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RecoveryCodesInvalidAfterReplace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RecoveryCodesInvalidAfterReplace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.RecoveryCodesInvalidAfterReplace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;RecoveryCodesInvalidAfterReplace&gt;d__85))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveClaimOnlyAffectsUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveClaimOnlyAffectsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveClaimOnlyAffectsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.RemoveClaimOnlyAffectsUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;RemoveClaimOnlyAffectsUser&gt;d__39))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserClaimOnlyAffectsUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReplaceUserClaimOnlyAffectsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ReplaceUserClaimOnlyAffectsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ReplaceUserClaimOnlyAffectsUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ReplaceUserClaimOnlyAffectsUser&gt;d__41))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessCountPreventsLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetAccessCountPreventsLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetAccessCountPreventsLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ResetAccessCountPreventsLockout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ResetAccessCountPreventsLockout&gt;d__61))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordWithStaticTokenProviderFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetPasswordWithStaticTokenProviderFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetPasswordWithStaticTokenProviderFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ResetPasswordWithStaticTokenProviderFailsWithWrongToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;ResetPasswordWithStaticTokenProviderFailsWithWrongToken&gt;d__54))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhoneNumberTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetPhoneNumberTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetPhoneNumberTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetPhoneNumberTest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;SetPhoneNumberTest&gt;d__69))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetupBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Configure the service collection used for tests.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupIdentityServices">
      <MemberSignature Language="C#" Value="protected virtual void SetupIdentityServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetupIdentityServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Configure the service collection used for tests.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameUpdatesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetUserNameUpdatesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetUserNameUpdatesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetUserNameUpdatesSecurityStamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;SetUserNameUpdatesSecurityStamp&gt;d__17))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserPasswordHash">
      <MemberSignature Language="C#" Value="protected abstract void SetUserPasswordHash (TUser user, string hashedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetUserPasswordHash(!TUser user, string hashedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetUserPasswordHash(`0,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="hashedPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user to set.</param>
        <param name="hashedPassword">The password hash to set.</param>
        <summary>
            Set the user's password hash.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSkipDbTests">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSkipDbTests ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSkipDbTests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ShouldSkipDbTests" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            If true, tests that require a database will be skipped.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleFailureLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SingleFailureLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SingleFailureLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SingleFailureLockout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;SingleFailureLockout&gt;d__59))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoFailureLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TwoFailureLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TwoFailureLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.TwoFailureLockout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;TwoFailureLockout&gt;d__60))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecurityStampActuallyChanges">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UpdateSecurityStampActuallyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UpdateSecurityStampActuallyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UpdateSecurityStampActuallyChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UpdateSecurityStampActuallyChanges&gt;d__46))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLockedOutWithDateTimeLocalKindNowPlus30">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserLockedOutWithDateTimeLocalKindNowPlus30 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserLockedOutWithDateTimeLocalKindNowPlus30() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserLockedOutWithDateTimeLocalKindNowPlus30" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserLockedOutWithDateTimeLocalKindNowPlus30&gt;d__68))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameEqualsPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TUser,bool&gt;&gt; UserNameEqualsPredicate (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TUser, bool&gt;&gt; UserNameEqualsPredicate(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNameEqualsPredicate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TUser,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name to match.</param>
        <summary>
            Query used to do name equality checks.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameStartsWithPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TUser,bool&gt;&gt; UserNameStartsWithPredicate (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TUser, bool&gt;&gt; UserNameStartsWithPredicate(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNameStartsWithPredicate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TUser,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name to match.</param>
        <summary>
            Query used to do user name prefix matching.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNotLockedOutWithNullDateTimeAndIsSetToNullDate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserNotLockedOutWithNullDateTimeAndIsSetToNullDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserNotLockedOutWithNullDateTimeAndIsSetToNullDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserNotLockedOutWithNullDateTimeAndIsSetToNullDate&gt;d__63))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail&gt;d__26))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail&gt;d__25))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorCanBlockCreate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorCanBlockCreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorCanBlockCreate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorCanBlockCreate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserValidatorCanBlockCreate&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorCanBlockUpdate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorCanBlockUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorCanBlockUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorCanBlockUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;UserValidatorCanBlockUpdate&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTokenFromWrongTokenProviderFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task VerifyTokenFromWrongTokenProviderFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task VerifyTokenFromWrongTokenProviderFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.VerifyTokenFromWrongTokenProviderFails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;VerifyTokenFromWrongTokenProviderFails&gt;d__88))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithWrongSmsTokenFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task VerifyWithWrongSmsTokenFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task VerifyWithWrongSmsTokenFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.VerifyWithWrongSmsTokenFails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2/&lt;VerifyWithWrongSmsTokenFails&gt;d__89))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>